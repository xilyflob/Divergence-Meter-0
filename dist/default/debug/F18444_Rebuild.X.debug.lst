

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 03 23:33:24 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F18444
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	idataEEDATA,global,class=EEDATA,space=3,delta=2,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2,noexec
    11                           	psect	dataEEDATA,global,class=EEDATA,space=3,delta=2,noexec
    12                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text46,local,class=CODE,merge=1,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,delta=2
    75                           	psect	intentry,global,class=CODE,delta=2
    76                           	psect	text55,local,class=CODE,merge=1,delta=2
    77                           	psect	text56,local,class=CODE,merge=1,delta=2
    78                           	psect	text57,local,class=CODE,merge=1,delta=2
    79                           	psect	text58,local,class=CODE,merge=1,delta=2
    80                           	psect	text59,local,class=CODE,merge=1,delta=2
    81                           	psect	text60,local,class=CODE,merge=1,delta=2
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    83                           	dabs	1,0x7E,2
    84  0000                     
    85                           ; Version 2.32
    86                           ; Generated 10/02/2021 GMT
    87                           ; 
    88                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution. Publication is not required when
   102                           ;        this file is used in an embedded application.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC16F18444 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  008C                     	;# 
   142  008C                     	;# 
   143  008D                     	;# 
   144  008E                     	;# 
   145  008E                     	;# 
   146  008F                     	;# 
   147  0090                     	;# 
   148  0090                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0094                     	;# 
   155  0095                     	;# 
   156  0096                     	;# 
   157  0096                     	;# 
   158  0097                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009A                     	;# 
   162  009B                     	;# 
   163  009B                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  010F                     	;# 
   175  0110                     	;# 
   176  0111                     	;# 
   177  0112                     	;# 
   178  0113                     	;# 
   179  0114                     	;# 
   180  0115                     	;# 
   181  0116                     	;# 
   182  0117                     	;# 
   183  0118                     	;# 
   184  0119                     	;# 
   185  0119                     	;# 
   186  0119                     	;# 
   187  011A                     	;# 
   188  011A                     	;# 
   189  011A                     	;# 
   190  011B                     	;# 
   191  011B                     	;# 
   192  011B                     	;# 
   193  011B                     	;# 
   194  011B                     	;# 
   195  011C                     	;# 
   196  011C                     	;# 
   197  011C                     	;# 
   198  011D                     	;# 
   199  011D                     	;# 
   200  011D                     	;# 
   201  011E                     	;# 
   202  011E                     	;# 
   203  011E                     	;# 
   204  011F                     	;# 
   205  011F                     	;# 
   206  011F                     	;# 
   207  011F                     	;# 
   208  011F                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  018E                     	;# 
   212  018F                     	;# 
   213  0190                     	;# 
   214  0191                     	;# 
   215  0192                     	;# 
   216  020C                     	;# 
   217  020D                     	;# 
   218  020E                     	;# 
   219  020E                     	;# 
   220  020F                     	;# 
   221  020F                     	;# 
   222  0210                     	;# 
   223  0210                     	;# 
   224  0211                     	;# 
   225  0211                     	;# 
   226  0212                     	;# 
   227  0213                     	;# 
   228  0214                     	;# 
   229  0214                     	;# 
   230  0215                     	;# 
   231  0215                     	;# 
   232  0216                     	;# 
   233  0216                     	;# 
   234  0217                     	;# 
   235  0217                     	;# 
   236  0218                     	;# 
   237  0219                     	;# 
   238  021A                     	;# 
   239  021A                     	;# 
   240  021B                     	;# 
   241  021B                     	;# 
   242  021C                     	;# 
   243  021C                     	;# 
   244  021D                     	;# 
   245  021D                     	;# 
   246  021E                     	;# 
   247  021F                     	;# 
   248  028C                     	;# 
   249  028C                     	;# 
   250  028D                     	;# 
   251  028D                     	;# 
   252  028E                     	;# 
   253  028F                     	;# 
   254  0290                     	;# 
   255  0291                     	;# 
   256  0292                     	;# 
   257  0292                     	;# 
   258  0293                     	;# 
   259  0293                     	;# 
   260  0294                     	;# 
   261  0295                     	;# 
   262  0296                     	;# 
   263  0297                     	;# 
   264  0298                     	;# 
   265  0298                     	;# 
   266  0299                     	;# 
   267  0299                     	;# 
   268  029A                     	;# 
   269  029B                     	;# 
   270  029C                     	;# 
   271  029D                     	;# 
   272  029F                     	;# 
   273  030C                     	;# 
   274  030C                     	;# 
   275  030D                     	;# 
   276  030E                     	;# 
   277  030F                     	;# 
   278  0310                     	;# 
   279  0310                     	;# 
   280  0311                     	;# 
   281  0312                     	;# 
   282  0313                     	;# 
   283  0314                     	;# 
   284  0314                     	;# 
   285  0315                     	;# 
   286  0316                     	;# 
   287  0317                     	;# 
   288  0318                     	;# 
   289  0318                     	;# 
   290  0319                     	;# 
   291  031A                     	;# 
   292  031B                     	;# 
   293  038C                     	;# 
   294  038C                     	;# 
   295  038D                     	;# 
   296  038E                     	;# 
   297  0390                     	;# 
   298  0390                     	;# 
   299  0391                     	;# 
   300  0392                     	;# 
   301  048C                     	;# 
   302  048C                     	;# 
   303  048D                     	;# 
   304  048E                     	;# 
   305  048F                     	;# 
   306  048F                     	;# 
   307  0490                     	;# 
   308  0491                     	;# 
   309  0492                     	;# 
   310  0492                     	;# 
   311  0493                     	;# 
   312  0494                     	;# 
   313  0495                     	;# 
   314  0495                     	;# 
   315  0496                     	;# 
   316  0497                     	;# 
   317  0498                     	;# 
   318  0499                     	;# 
   319  049A                     	;# 
   320  049B                     	;# 
   321  049C                     	;# 
   322  049D                     	;# 
   323  058C                     	;# 
   324  058C                     	;# 
   325  058D                     	;# 
   326  058E                     	;# 
   327  058F                     	;# 
   328  058F                     	;# 
   329  0590                     	;# 
   330  0591                     	;# 
   331  0592                     	;# 
   332  0593                     	;# 
   333  059C                     	;# 
   334  059C                     	;# 
   335  059D                     	;# 
   336  059D                     	;# 
   337  059E                     	;# 
   338  059F                     	;# 
   339  060C                     	;# 
   340  060C                     	;# 
   341  060D                     	;# 
   342  060D                     	;# 
   343  060E                     	;# 
   344  060F                     	;# 
   345  0610                     	;# 
   346  0611                     	;# 
   347  0612                     	;# 
   348  0613                     	;# 
   349  0614                     	;# 
   350  0616                     	;# 
   351  0616                     	;# 
   352  0617                     	;# 
   353  0617                     	;# 
   354  0618                     	;# 
   355  0619                     	;# 
   356  061A                     	;# 
   357  061B                     	;# 
   358  061C                     	;# 
   359  061D                     	;# 
   360  061E                     	;# 
   361  070C                     	;# 
   362  070D                     	;# 
   363  070E                     	;# 
   364  070F                     	;# 
   365  0710                     	;# 
   366  0711                     	;# 
   367  0712                     	;# 
   368  0713                     	;# 
   369  0714                     	;# 
   370  0716                     	;# 
   371  0717                     	;# 
   372  0718                     	;# 
   373  0719                     	;# 
   374  071A                     	;# 
   375  071B                     	;# 
   376  071C                     	;# 
   377  071D                     	;# 
   378  071E                     	;# 
   379  0796                     	;# 
   380  0797                     	;# 
   381  0798                     	;# 
   382  0799                     	;# 
   383  079A                     	;# 
   384  079B                     	;# 
   385  079C                     	;# 
   386  079D                     	;# 
   387  080C                     	;# 
   388  080D                     	;# 
   389  080E                     	;# 
   390  080F                     	;# 
   391  0810                     	;# 
   392  0811                     	;# 
   393  0812                     	;# 
   394  0813                     	;# 
   395  0814                     	;# 
   396  081A                     	;# 
   397  081A                     	;# 
   398  081B                     	;# 
   399  081C                     	;# 
   400  081C                     	;# 
   401  081D                     	;# 
   402  081E                     	;# 
   403  081F                     	;# 
   404  088C                     	;# 
   405  088D                     	;# 
   406  088E                     	;# 
   407  088F                     	;# 
   408  0890                     	;# 
   409  0891                     	;# 
   410  0892                     	;# 
   411  0893                     	;# 
   412  0895                     	;# 
   413  0896                     	;# 
   414  0897                     	;# 
   415  0898                     	;# 
   416  0899                     	;# 
   417  089A                     	;# 
   418  089B                     	;# 
   419  090C                     	;# 
   420  090E                     	;# 
   421  090F                     	;# 
   422  091F                     	;# 
   423  098F                     	;# 
   424  098F                     	;# 
   425  0990                     	;# 
   426  0991                     	;# 
   427  0992                     	;# 
   428  0993                     	;# 
   429  0994                     	;# 
   430  0995                     	;# 
   431  0996                     	;# 
   432  0997                     	;# 
   433  1E0F                     	;# 
   434  1E10                     	;# 
   435  1E11                     	;# 
   436  1E12                     	;# 
   437  1E13                     	;# 
   438  1E14                     	;# 
   439  1E15                     	;# 
   440  1E16                     	;# 
   441  1E17                     	;# 
   442  1E18                     	;# 
   443  1E19                     	;# 
   444  1E1A                     	;# 
   445  1E1B                     	;# 
   446  1E1C                     	;# 
   447  1E1D                     	;# 
   448  1E1E                     	;# 
   449  1E1F                     	;# 
   450  1E20                     	;# 
   451  1E21                     	;# 
   452  1E22                     	;# 
   453  1E23                     	;# 
   454  1E24                     	;# 
   455  1E25                     	;# 
   456  1E26                     	;# 
   457  1E27                     	;# 
   458  1E28                     	;# 
   459  1E29                     	;# 
   460  1E2A                     	;# 
   461  1E2B                     	;# 
   462  1E2C                     	;# 
   463  1E2D                     	;# 
   464  1E2E                     	;# 
   465  1E2F                     	;# 
   466  1E30                     	;# 
   467  1E31                     	;# 
   468  1E32                     	;# 
   469  1E33                     	;# 
   470  1E34                     	;# 
   471  1E35                     	;# 
   472  1E36                     	;# 
   473  1E37                     	;# 
   474  1E8F                     	;# 
   475  1E90                     	;# 
   476  1E91                     	;# 
   477  1E92                     	;# 
   478  1E93                     	;# 
   479  1E94                     	;# 
   480  1E95                     	;# 
   481  1E96                     	;# 
   482  1E97                     	;# 
   483  1E9C                     	;# 
   484  1E9D                     	;# 
   485  1E9E                     	;# 
   486  1EA1                     	;# 
   487  1EA2                     	;# 
   488  1EA3                     	;# 
   489  1EA4                     	;# 
   490  1EA9                     	;# 
   491  1EAA                     	;# 
   492  1EB1                     	;# 
   493  1EB2                     	;# 
   494  1EB8                     	;# 
   495  1EB9                     	;# 
   496  1EBA                     	;# 
   497  1EBB                     	;# 
   498  1EBC                     	;# 
   499  1EBD                     	;# 
   500  1EBE                     	;# 
   501  1EC3                     	;# 
   502  1EC5                     	;# 
   503  1EC6                     	;# 
   504  1EC7                     	;# 
   505  1ECB                     	;# 
   506  1ECB                     	;# 
   507  1ECB                     	;# 
   508  1ECC                     	;# 
   509  1ECC                     	;# 
   510  1ECC                     	;# 
   511  1F10                     	;# 
   512  1F11                     	;# 
   513  1F12                     	;# 
   514  1F14                     	;# 
   515  1F15                     	;# 
   516  1F1C                     	;# 
   517  1F1D                     	;# 
   518  1F1E                     	;# 
   519  1F1F                     	;# 
   520  1F20                     	;# 
   521  1F21                     	;# 
   522  1F22                     	;# 
   523  1F23                     	;# 
   524  1F24                     	;# 
   525  1F25                     	;# 
   526  1F26                     	;# 
   527  1F27                     	;# 
   528  1F38                     	;# 
   529  1F39                     	;# 
   530  1F3A                     	;# 
   531  1F3B                     	;# 
   532  1F3C                     	;# 
   533  1F3D                     	;# 
   534  1F3E                     	;# 
   535  1F3F                     	;# 
   536  1F43                     	;# 
   537  1F44                     	;# 
   538  1F45                     	;# 
   539  1F46                     	;# 
   540  1F47                     	;# 
   541  1F48                     	;# 
   542  1F49                     	;# 
   543  1F4A                     	;# 
   544  1F4E                     	;# 
   545  1F4F                     	;# 
   546  1F50                     	;# 
   547  1F51                     	;# 
   548  1F52                     	;# 
   549  1F53                     	;# 
   550  1F54                     	;# 
   551  1F55                     	;# 
   552  1FE4                     	;# 
   553  1FE5                     	;# 
   554  1FE6                     	;# 
   555  1FE7                     	;# 
   556  1FE8                     	;# 
   557  1FE8                     	;# 
   558  1FE9                     	;# 
   559  1FEA                     	;# 
   560  1FEB                     	;# 
   561  1FED                     	;# 
   562  1FEE                     	;# 
   563  1FEF                     	;# 
   564  0000                     	;# 
   565  0001                     	;# 
   566  0002                     	;# 
   567  0003                     	;# 
   568  0004                     	;# 
   569  0005                     	;# 
   570  0006                     	;# 
   571  0007                     	;# 
   572  0008                     	;# 
   573  0009                     	;# 
   574  000A                     	;# 
   575  000B                     	;# 
   576  000C                     	;# 
   577  000D                     	;# 
   578  000E                     	;# 
   579  0012                     	;# 
   580  0013                     	;# 
   581  0014                     	;# 
   582  0018                     	;# 
   583  0019                     	;# 
   584  001A                     	;# 
   585  008C                     	;# 
   586  008C                     	;# 
   587  008D                     	;# 
   588  008E                     	;# 
   589  008E                     	;# 
   590  008F                     	;# 
   591  0090                     	;# 
   592  0090                     	;# 
   593  0091                     	;# 
   594  0092                     	;# 
   595  0092                     	;# 
   596  0093                     	;# 
   597  0094                     	;# 
   598  0094                     	;# 
   599  0095                     	;# 
   600  0096                     	;# 
   601  0096                     	;# 
   602  0097                     	;# 
   603  0098                     	;# 
   604  0099                     	;# 
   605  009A                     	;# 
   606  009B                     	;# 
   607  009B                     	;# 
   608  009C                     	;# 
   609  009D                     	;# 
   610  009D                     	;# 
   611  009E                     	;# 
   612  009F                     	;# 
   613  010C                     	;# 
   614  010C                     	;# 
   615  010D                     	;# 
   616  010E                     	;# 
   617  010F                     	;# 
   618  010F                     	;# 
   619  0110                     	;# 
   620  0111                     	;# 
   621  0112                     	;# 
   622  0113                     	;# 
   623  0114                     	;# 
   624  0115                     	;# 
   625  0116                     	;# 
   626  0117                     	;# 
   627  0118                     	;# 
   628  0119                     	;# 
   629  0119                     	;# 
   630  0119                     	;# 
   631  011A                     	;# 
   632  011A                     	;# 
   633  011A                     	;# 
   634  011B                     	;# 
   635  011B                     	;# 
   636  011B                     	;# 
   637  011B                     	;# 
   638  011B                     	;# 
   639  011C                     	;# 
   640  011C                     	;# 
   641  011C                     	;# 
   642  011D                     	;# 
   643  011D                     	;# 
   644  011D                     	;# 
   645  011E                     	;# 
   646  011E                     	;# 
   647  011E                     	;# 
   648  011F                     	;# 
   649  011F                     	;# 
   650  011F                     	;# 
   651  011F                     	;# 
   652  011F                     	;# 
   653  018C                     	;# 
   654  018D                     	;# 
   655  018E                     	;# 
   656  018F                     	;# 
   657  0190                     	;# 
   658  0191                     	;# 
   659  0192                     	;# 
   660  020C                     	;# 
   661  020D                     	;# 
   662  020E                     	;# 
   663  020E                     	;# 
   664  020F                     	;# 
   665  020F                     	;# 
   666  0210                     	;# 
   667  0210                     	;# 
   668  0211                     	;# 
   669  0211                     	;# 
   670  0212                     	;# 
   671  0213                     	;# 
   672  0214                     	;# 
   673  0214                     	;# 
   674  0215                     	;# 
   675  0215                     	;# 
   676  0216                     	;# 
   677  0216                     	;# 
   678  0217                     	;# 
   679  0217                     	;# 
   680  0218                     	;# 
   681  0219                     	;# 
   682  021A                     	;# 
   683  021A                     	;# 
   684  021B                     	;# 
   685  021B                     	;# 
   686  021C                     	;# 
   687  021C                     	;# 
   688  021D                     	;# 
   689  021D                     	;# 
   690  021E                     	;# 
   691  021F                     	;# 
   692  028C                     	;# 
   693  028C                     	;# 
   694  028D                     	;# 
   695  028D                     	;# 
   696  028E                     	;# 
   697  028F                     	;# 
   698  0290                     	;# 
   699  0291                     	;# 
   700  0292                     	;# 
   701  0292                     	;# 
   702  0293                     	;# 
   703  0293                     	;# 
   704  0294                     	;# 
   705  0295                     	;# 
   706  0296                     	;# 
   707  0297                     	;# 
   708  0298                     	;# 
   709  0298                     	;# 
   710  0299                     	;# 
   711  0299                     	;# 
   712  029A                     	;# 
   713  029B                     	;# 
   714  029C                     	;# 
   715  029D                     	;# 
   716  029F                     	;# 
   717  030C                     	;# 
   718  030C                     	;# 
   719  030D                     	;# 
   720  030E                     	;# 
   721  030F                     	;# 
   722  0310                     	;# 
   723  0310                     	;# 
   724  0311                     	;# 
   725  0312                     	;# 
   726  0313                     	;# 
   727  0314                     	;# 
   728  0314                     	;# 
   729  0315                     	;# 
   730  0316                     	;# 
   731  0317                     	;# 
   732  0318                     	;# 
   733  0318                     	;# 
   734  0319                     	;# 
   735  031A                     	;# 
   736  031B                     	;# 
   737  038C                     	;# 
   738  038C                     	;# 
   739  038D                     	;# 
   740  038E                     	;# 
   741  0390                     	;# 
   742  0390                     	;# 
   743  0391                     	;# 
   744  0392                     	;# 
   745  048C                     	;# 
   746  048C                     	;# 
   747  048D                     	;# 
   748  048E                     	;# 
   749  048F                     	;# 
   750  048F                     	;# 
   751  0490                     	;# 
   752  0491                     	;# 
   753  0492                     	;# 
   754  0492                     	;# 
   755  0493                     	;# 
   756  0494                     	;# 
   757  0495                     	;# 
   758  0495                     	;# 
   759  0496                     	;# 
   760  0497                     	;# 
   761  0498                     	;# 
   762  0499                     	;# 
   763  049A                     	;# 
   764  049B                     	;# 
   765  049C                     	;# 
   766  049D                     	;# 
   767  058C                     	;# 
   768  058C                     	;# 
   769  058D                     	;# 
   770  058E                     	;# 
   771  058F                     	;# 
   772  058F                     	;# 
   773  0590                     	;# 
   774  0591                     	;# 
   775  0592                     	;# 
   776  0593                     	;# 
   777  059C                     	;# 
   778  059C                     	;# 
   779  059D                     	;# 
   780  059D                     	;# 
   781  059E                     	;# 
   782  059F                     	;# 
   783  060C                     	;# 
   784  060C                     	;# 
   785  060D                     	;# 
   786  060D                     	;# 
   787  060E                     	;# 
   788  060F                     	;# 
   789  0610                     	;# 
   790  0611                     	;# 
   791  0612                     	;# 
   792  0613                     	;# 
   793  0614                     	;# 
   794  0616                     	;# 
   795  0616                     	;# 
   796  0617                     	;# 
   797  0617                     	;# 
   798  0618                     	;# 
   799  0619                     	;# 
   800  061A                     	;# 
   801  061B                     	;# 
   802  061C                     	;# 
   803  061D                     	;# 
   804  061E                     	;# 
   805  070C                     	;# 
   806  070D                     	;# 
   807  070E                     	;# 
   808  070F                     	;# 
   809  0710                     	;# 
   810  0711                     	;# 
   811  0712                     	;# 
   812  0713                     	;# 
   813  0714                     	;# 
   814  0716                     	;# 
   815  0717                     	;# 
   816  0718                     	;# 
   817  0719                     	;# 
   818  071A                     	;# 
   819  071B                     	;# 
   820  071C                     	;# 
   821  071D                     	;# 
   822  071E                     	;# 
   823  0796                     	;# 
   824  0797                     	;# 
   825  0798                     	;# 
   826  0799                     	;# 
   827  079A                     	;# 
   828  079B                     	;# 
   829  079C                     	;# 
   830  079D                     	;# 
   831  080C                     	;# 
   832  080D                     	;# 
   833  080E                     	;# 
   834  080F                     	;# 
   835  0810                     	;# 
   836  0811                     	;# 
   837  0812                     	;# 
   838  0813                     	;# 
   839  0814                     	;# 
   840  081A                     	;# 
   841  081A                     	;# 
   842  081B                     	;# 
   843  081C                     	;# 
   844  081C                     	;# 
   845  081D                     	;# 
   846  081E                     	;# 
   847  081F                     	;# 
   848  088C                     	;# 
   849  088D                     	;# 
   850  088E                     	;# 
   851  088F                     	;# 
   852  0890                     	;# 
   853  0891                     	;# 
   854  0892                     	;# 
   855  0893                     	;# 
   856  0895                     	;# 
   857  0896                     	;# 
   858  0897                     	;# 
   859  0898                     	;# 
   860  0899                     	;# 
   861  089A                     	;# 
   862  089B                     	;# 
   863  090C                     	;# 
   864  090E                     	;# 
   865  090F                     	;# 
   866  091F                     	;# 
   867  098F                     	;# 
   868  098F                     	;# 
   869  0990                     	;# 
   870  0991                     	;# 
   871  0992                     	;# 
   872  0993                     	;# 
   873  0994                     	;# 
   874  0995                     	;# 
   875  0996                     	;# 
   876  0997                     	;# 
   877  1E0F                     	;# 
   878  1E10                     	;# 
   879  1E11                     	;# 
   880  1E12                     	;# 
   881  1E13                     	;# 
   882  1E14                     	;# 
   883  1E15                     	;# 
   884  1E16                     	;# 
   885  1E17                     	;# 
   886  1E18                     	;# 
   887  1E19                     	;# 
   888  1E1A                     	;# 
   889  1E1B                     	;# 
   890  1E1C                     	;# 
   891  1E1D                     	;# 
   892  1E1E                     	;# 
   893  1E1F                     	;# 
   894  1E20                     	;# 
   895  1E21                     	;# 
   896  1E22                     	;# 
   897  1E23                     	;# 
   898  1E24                     	;# 
   899  1E25                     	;# 
   900  1E26                     	;# 
   901  1E27                     	;# 
   902  1E28                     	;# 
   903  1E29                     	;# 
   904  1E2A                     	;# 
   905  1E2B                     	;# 
   906  1E2C                     	;# 
   907  1E2D                     	;# 
   908  1E2E                     	;# 
   909  1E2F                     	;# 
   910  1E30                     	;# 
   911  1E31                     	;# 
   912  1E32                     	;# 
   913  1E33                     	;# 
   914  1E34                     	;# 
   915  1E35                     	;# 
   916  1E36                     	;# 
   917  1E37                     	;# 
   918  1E8F                     	;# 
   919  1E90                     	;# 
   920  1E91                     	;# 
   921  1E92                     	;# 
   922  1E93                     	;# 
   923  1E94                     	;# 
   924  1E95                     	;# 
   925  1E96                     	;# 
   926  1E97                     	;# 
   927  1E9C                     	;# 
   928  1E9D                     	;# 
   929  1E9E                     	;# 
   930  1EA1                     	;# 
   931  1EA2                     	;# 
   932  1EA3                     	;# 
   933  1EA4                     	;# 
   934  1EA9                     	;# 
   935  1EAA                     	;# 
   936  1EB1                     	;# 
   937  1EB2                     	;# 
   938  1EB8                     	;# 
   939  1EB9                     	;# 
   940  1EBA                     	;# 
   941  1EBB                     	;# 
   942  1EBC                     	;# 
   943  1EBD                     	;# 
   944  1EBE                     	;# 
   945  1EC3                     	;# 
   946  1EC5                     	;# 
   947  1EC6                     	;# 
   948  1EC7                     	;# 
   949  1ECB                     	;# 
   950  1ECB                     	;# 
   951  1ECB                     	;# 
   952  1ECC                     	;# 
   953  1ECC                     	;# 
   954  1ECC                     	;# 
   955  1F10                     	;# 
   956  1F11                     	;# 
   957  1F12                     	;# 
   958  1F14                     	;# 
   959  1F15                     	;# 
   960  1F1C                     	;# 
   961  1F1D                     	;# 
   962  1F1E                     	;# 
   963  1F1F                     	;# 
   964  1F20                     	;# 
   965  1F21                     	;# 
   966  1F22                     	;# 
   967  1F23                     	;# 
   968  1F24                     	;# 
   969  1F25                     	;# 
   970  1F26                     	;# 
   971  1F27                     	;# 
   972  1F38                     	;# 
   973  1F39                     	;# 
   974  1F3A                     	;# 
   975  1F3B                     	;# 
   976  1F3C                     	;# 
   977  1F3D                     	;# 
   978  1F3E                     	;# 
   979  1F3F                     	;# 
   980  1F43                     	;# 
   981  1F44                     	;# 
   982  1F45                     	;# 
   983  1F46                     	;# 
   984  1F47                     	;# 
   985  1F48                     	;# 
   986  1F49                     	;# 
   987  1F4A                     	;# 
   988  1F4E                     	;# 
   989  1F4F                     	;# 
   990  1F50                     	;# 
   991  1F51                     	;# 
   992  1F52                     	;# 
   993  1F53                     	;# 
   994  1F54                     	;# 
   995  1F55                     	;# 
   996  1FE4                     	;# 
   997  1FE5                     	;# 
   998  1FE6                     	;# 
   999  1FE7                     	;# 
  1000  1FE8                     	;# 
  1001  1FE8                     	;# 
  1002  1FE9                     	;# 
  1003  1FEA                     	;# 
  1004  1FEB                     	;# 
  1005  1FED                     	;# 
  1006  1FEE                     	;# 
  1007  1FEF                     	;# 
  1008  0000                     	;# 
  1009  0001                     	;# 
  1010  0002                     	;# 
  1011  0003                     	;# 
  1012  0004                     	;# 
  1013  0005                     	;# 
  1014  0006                     	;# 
  1015  0007                     	;# 
  1016  0008                     	;# 
  1017  0009                     	;# 
  1018  000A                     	;# 
  1019  000B                     	;# 
  1020  000C                     	;# 
  1021  000D                     	;# 
  1022  000E                     	;# 
  1023  0012                     	;# 
  1024  0013                     	;# 
  1025  0014                     	;# 
  1026  0018                     	;# 
  1027  0019                     	;# 
  1028  001A                     	;# 
  1029  008C                     	;# 
  1030  008C                     	;# 
  1031  008D                     	;# 
  1032  008E                     	;# 
  1033  008E                     	;# 
  1034  008F                     	;# 
  1035  0090                     	;# 
  1036  0090                     	;# 
  1037  0091                     	;# 
  1038  0092                     	;# 
  1039  0092                     	;# 
  1040  0093                     	;# 
  1041  0094                     	;# 
  1042  0094                     	;# 
  1043  0095                     	;# 
  1044  0096                     	;# 
  1045  0096                     	;# 
  1046  0097                     	;# 
  1047  0098                     	;# 
  1048  0099                     	;# 
  1049  009A                     	;# 
  1050  009B                     	;# 
  1051  009B                     	;# 
  1052  009C                     	;# 
  1053  009D                     	;# 
  1054  009D                     	;# 
  1055  009E                     	;# 
  1056  009F                     	;# 
  1057  010C                     	;# 
  1058  010C                     	;# 
  1059  010D                     	;# 
  1060  010E                     	;# 
  1061  010F                     	;# 
  1062  010F                     	;# 
  1063  0110                     	;# 
  1064  0111                     	;# 
  1065  0112                     	;# 
  1066  0113                     	;# 
  1067  0114                     	;# 
  1068  0115                     	;# 
  1069  0116                     	;# 
  1070  0117                     	;# 
  1071  0118                     	;# 
  1072  0119                     	;# 
  1073  0119                     	;# 
  1074  0119                     	;# 
  1075  011A                     	;# 
  1076  011A                     	;# 
  1077  011A                     	;# 
  1078  011B                     	;# 
  1079  011B                     	;# 
  1080  011B                     	;# 
  1081  011B                     	;# 
  1082  011B                     	;# 
  1083  011C                     	;# 
  1084  011C                     	;# 
  1085  011C                     	;# 
  1086  011D                     	;# 
  1087  011D                     	;# 
  1088  011D                     	;# 
  1089  011E                     	;# 
  1090  011E                     	;# 
  1091  011E                     	;# 
  1092  011F                     	;# 
  1093  011F                     	;# 
  1094  011F                     	;# 
  1095  011F                     	;# 
  1096  011F                     	;# 
  1097  018C                     	;# 
  1098  018D                     	;# 
  1099  018E                     	;# 
  1100  018F                     	;# 
  1101  0190                     	;# 
  1102  0191                     	;# 
  1103  0192                     	;# 
  1104  020C                     	;# 
  1105  020D                     	;# 
  1106  020E                     	;# 
  1107  020E                     	;# 
  1108  020F                     	;# 
  1109  020F                     	;# 
  1110  0210                     	;# 
  1111  0210                     	;# 
  1112  0211                     	;# 
  1113  0211                     	;# 
  1114  0212                     	;# 
  1115  0213                     	;# 
  1116  0214                     	;# 
  1117  0214                     	;# 
  1118  0215                     	;# 
  1119  0215                     	;# 
  1120  0216                     	;# 
  1121  0216                     	;# 
  1122  0217                     	;# 
  1123  0217                     	;# 
  1124  0218                     	;# 
  1125  0219                     	;# 
  1126  021A                     	;# 
  1127  021A                     	;# 
  1128  021B                     	;# 
  1129  021B                     	;# 
  1130  021C                     	;# 
  1131  021C                     	;# 
  1132  021D                     	;# 
  1133  021D                     	;# 
  1134  021E                     	;# 
  1135  021F                     	;# 
  1136  028C                     	;# 
  1137  028C                     	;# 
  1138  028D                     	;# 
  1139  028D                     	;# 
  1140  028E                     	;# 
  1141  028F                     	;# 
  1142  0290                     	;# 
  1143  0291                     	;# 
  1144  0292                     	;# 
  1145  0292                     	;# 
  1146  0293                     	;# 
  1147  0293                     	;# 
  1148  0294                     	;# 
  1149  0295                     	;# 
  1150  0296                     	;# 
  1151  0297                     	;# 
  1152  0298                     	;# 
  1153  0298                     	;# 
  1154  0299                     	;# 
  1155  0299                     	;# 
  1156  029A                     	;# 
  1157  029B                     	;# 
  1158  029C                     	;# 
  1159  029D                     	;# 
  1160  029F                     	;# 
  1161  030C                     	;# 
  1162  030C                     	;# 
  1163  030D                     	;# 
  1164  030E                     	;# 
  1165  030F                     	;# 
  1166  0310                     	;# 
  1167  0310                     	;# 
  1168  0311                     	;# 
  1169  0312                     	;# 
  1170  0313                     	;# 
  1171  0314                     	;# 
  1172  0314                     	;# 
  1173  0315                     	;# 
  1174  0316                     	;# 
  1175  0317                     	;# 
  1176  0318                     	;# 
  1177  0318                     	;# 
  1178  0319                     	;# 
  1179  031A                     	;# 
  1180  031B                     	;# 
  1181  038C                     	;# 
  1182  038C                     	;# 
  1183  038D                     	;# 
  1184  038E                     	;# 
  1185  0390                     	;# 
  1186  0390                     	;# 
  1187  0391                     	;# 
  1188  0392                     	;# 
  1189  048C                     	;# 
  1190  048C                     	;# 
  1191  048D                     	;# 
  1192  048E                     	;# 
  1193  048F                     	;# 
  1194  048F                     	;# 
  1195  0490                     	;# 
  1196  0491                     	;# 
  1197  0492                     	;# 
  1198  0492                     	;# 
  1199  0493                     	;# 
  1200  0494                     	;# 
  1201  0495                     	;# 
  1202  0495                     	;# 
  1203  0496                     	;# 
  1204  0497                     	;# 
  1205  0498                     	;# 
  1206  0499                     	;# 
  1207  049A                     	;# 
  1208  049B                     	;# 
  1209  049C                     	;# 
  1210  049D                     	;# 
  1211  058C                     	;# 
  1212  058C                     	;# 
  1213  058D                     	;# 
  1214  058E                     	;# 
  1215  058F                     	;# 
  1216  058F                     	;# 
  1217  0590                     	;# 
  1218  0591                     	;# 
  1219  0592                     	;# 
  1220  0593                     	;# 
  1221  059C                     	;# 
  1222  059C                     	;# 
  1223  059D                     	;# 
  1224  059D                     	;# 
  1225  059E                     	;# 
  1226  059F                     	;# 
  1227  060C                     	;# 
  1228  060C                     	;# 
  1229  060D                     	;# 
  1230  060D                     	;# 
  1231  060E                     	;# 
  1232  060F                     	;# 
  1233  0610                     	;# 
  1234  0611                     	;# 
  1235  0612                     	;# 
  1236  0613                     	;# 
  1237  0614                     	;# 
  1238  0616                     	;# 
  1239  0616                     	;# 
  1240  0617                     	;# 
  1241  0617                     	;# 
  1242  0618                     	;# 
  1243  0619                     	;# 
  1244  061A                     	;# 
  1245  061B                     	;# 
  1246  061C                     	;# 
  1247  061D                     	;# 
  1248  061E                     	;# 
  1249  070C                     	;# 
  1250  070D                     	;# 
  1251  070E                     	;# 
  1252  070F                     	;# 
  1253  0710                     	;# 
  1254  0711                     	;# 
  1255  0712                     	;# 
  1256  0713                     	;# 
  1257  0714                     	;# 
  1258  0716                     	;# 
  1259  0717                     	;# 
  1260  0718                     	;# 
  1261  0719                     	;# 
  1262  071A                     	;# 
  1263  071B                     	;# 
  1264  071C                     	;# 
  1265  071D                     	;# 
  1266  071E                     	;# 
  1267  0796                     	;# 
  1268  0797                     	;# 
  1269  0798                     	;# 
  1270  0799                     	;# 
  1271  079A                     	;# 
  1272  079B                     	;# 
  1273  079C                     	;# 
  1274  079D                     	;# 
  1275  080C                     	;# 
  1276  080D                     	;# 
  1277  080E                     	;# 
  1278  080F                     	;# 
  1279  0810                     	;# 
  1280  0811                     	;# 
  1281  0812                     	;# 
  1282  0813                     	;# 
  1283  0814                     	;# 
  1284  081A                     	;# 
  1285  081A                     	;# 
  1286  081B                     	;# 
  1287  081C                     	;# 
  1288  081C                     	;# 
  1289  081D                     	;# 
  1290  081E                     	;# 
  1291  081F                     	;# 
  1292  088C                     	;# 
  1293  088D                     	;# 
  1294  088E                     	;# 
  1295  088F                     	;# 
  1296  0890                     	;# 
  1297  0891                     	;# 
  1298  0892                     	;# 
  1299  0893                     	;# 
  1300  0895                     	;# 
  1301  0896                     	;# 
  1302  0897                     	;# 
  1303  0898                     	;# 
  1304  0899                     	;# 
  1305  089A                     	;# 
  1306  089B                     	;# 
  1307  090C                     	;# 
  1308  090E                     	;# 
  1309  090F                     	;# 
  1310  091F                     	;# 
  1311  098F                     	;# 
  1312  098F                     	;# 
  1313  0990                     	;# 
  1314  0991                     	;# 
  1315  0992                     	;# 
  1316  0993                     	;# 
  1317  0994                     	;# 
  1318  0995                     	;# 
  1319  0996                     	;# 
  1320  0997                     	;# 
  1321  1E0F                     	;# 
  1322  1E10                     	;# 
  1323  1E11                     	;# 
  1324  1E12                     	;# 
  1325  1E13                     	;# 
  1326  1E14                     	;# 
  1327  1E15                     	;# 
  1328  1E16                     	;# 
  1329  1E17                     	;# 
  1330  1E18                     	;# 
  1331  1E19                     	;# 
  1332  1E1A                     	;# 
  1333  1E1B                     	;# 
  1334  1E1C                     	;# 
  1335  1E1D                     	;# 
  1336  1E1E                     	;# 
  1337  1E1F                     	;# 
  1338  1E20                     	;# 
  1339  1E21                     	;# 
  1340  1E22                     	;# 
  1341  1E23                     	;# 
  1342  1E24                     	;# 
  1343  1E25                     	;# 
  1344  1E26                     	;# 
  1345  1E27                     	;# 
  1346  1E28                     	;# 
  1347  1E29                     	;# 
  1348  1E2A                     	;# 
  1349  1E2B                     	;# 
  1350  1E2C                     	;# 
  1351  1E2D                     	;# 
  1352  1E2E                     	;# 
  1353  1E2F                     	;# 
  1354  1E30                     	;# 
  1355  1E31                     	;# 
  1356  1E32                     	;# 
  1357  1E33                     	;# 
  1358  1E34                     	;# 
  1359  1E35                     	;# 
  1360  1E36                     	;# 
  1361  1E37                     	;# 
  1362  1E8F                     	;# 
  1363  1E90                     	;# 
  1364  1E91                     	;# 
  1365  1E92                     	;# 
  1366  1E93                     	;# 
  1367  1E94                     	;# 
  1368  1E95                     	;# 
  1369  1E96                     	;# 
  1370  1E97                     	;# 
  1371  1E9C                     	;# 
  1372  1E9D                     	;# 
  1373  1E9E                     	;# 
  1374  1EA1                     	;# 
  1375  1EA2                     	;# 
  1376  1EA3                     	;# 
  1377  1EA4                     	;# 
  1378  1EA9                     	;# 
  1379  1EAA                     	;# 
  1380  1EB1                     	;# 
  1381  1EB2                     	;# 
  1382  1EB8                     	;# 
  1383  1EB9                     	;# 
  1384  1EBA                     	;# 
  1385  1EBB                     	;# 
  1386  1EBC                     	;# 
  1387  1EBD                     	;# 
  1388  1EBE                     	;# 
  1389  1EC3                     	;# 
  1390  1EC5                     	;# 
  1391  1EC6                     	;# 
  1392  1EC7                     	;# 
  1393  1ECB                     	;# 
  1394  1ECB                     	;# 
  1395  1ECB                     	;# 
  1396  1ECC                     	;# 
  1397  1ECC                     	;# 
  1398  1ECC                     	;# 
  1399  1F10                     	;# 
  1400  1F11                     	;# 
  1401  1F12                     	;# 
  1402  1F14                     	;# 
  1403  1F15                     	;# 
  1404  1F1C                     	;# 
  1405  1F1D                     	;# 
  1406  1F1E                     	;# 
  1407  1F1F                     	;# 
  1408  1F20                     	;# 
  1409  1F21                     	;# 
  1410  1F22                     	;# 
  1411  1F23                     	;# 
  1412  1F24                     	;# 
  1413  1F25                     	;# 
  1414  1F26                     	;# 
  1415  1F27                     	;# 
  1416  1F38                     	;# 
  1417  1F39                     	;# 
  1418  1F3A                     	;# 
  1419  1F3B                     	;# 
  1420  1F3C                     	;# 
  1421  1F3D                     	;# 
  1422  1F3E                     	;# 
  1423  1F3F                     	;# 
  1424  1F43                     	;# 
  1425  1F44                     	;# 
  1426  1F45                     	;# 
  1427  1F46                     	;# 
  1428  1F47                     	;# 
  1429  1F48                     	;# 
  1430  1F49                     	;# 
  1431  1F4A                     	;# 
  1432  1F4E                     	;# 
  1433  1F4F                     	;# 
  1434  1F50                     	;# 
  1435  1F51                     	;# 
  1436  1F52                     	;# 
  1437  1F53                     	;# 
  1438  1F54                     	;# 
  1439  1F55                     	;# 
  1440  1FE4                     	;# 
  1441  1FE5                     	;# 
  1442  1FE6                     	;# 
  1443  1FE7                     	;# 
  1444  1FE8                     	;# 
  1445  1FE8                     	;# 
  1446  1FE9                     	;# 
  1447  1FEA                     	;# 
  1448  1FEB                     	;# 
  1449  1FED                     	;# 
  1450  1FEE                     	;# 
  1451  1FEF                     	;# 
  1452  0000                     	;# 
  1453  0001                     	;# 
  1454  0002                     	;# 
  1455  0003                     	;# 
  1456  0004                     	;# 
  1457  0005                     	;# 
  1458  0006                     	;# 
  1459  0007                     	;# 
  1460  0008                     	;# 
  1461  0009                     	;# 
  1462  000A                     	;# 
  1463  000B                     	;# 
  1464  000C                     	;# 
  1465  000D                     	;# 
  1466  000E                     	;# 
  1467  0012                     	;# 
  1468  0013                     	;# 
  1469  0014                     	;# 
  1470  0018                     	;# 
  1471  0019                     	;# 
  1472  001A                     	;# 
  1473  008C                     	;# 
  1474  008C                     	;# 
  1475  008D                     	;# 
  1476  008E                     	;# 
  1477  008E                     	;# 
  1478  008F                     	;# 
  1479  0090                     	;# 
  1480  0090                     	;# 
  1481  0091                     	;# 
  1482  0092                     	;# 
  1483  0092                     	;# 
  1484  0093                     	;# 
  1485  0094                     	;# 
  1486  0094                     	;# 
  1487  0095                     	;# 
  1488  0096                     	;# 
  1489  0096                     	;# 
  1490  0097                     	;# 
  1491  0098                     	;# 
  1492  0099                     	;# 
  1493  009A                     	;# 
  1494  009B                     	;# 
  1495  009B                     	;# 
  1496  009C                     	;# 
  1497  009D                     	;# 
  1498  009D                     	;# 
  1499  009E                     	;# 
  1500  009F                     	;# 
  1501  010C                     	;# 
  1502  010C                     	;# 
  1503  010D                     	;# 
  1504  010E                     	;# 
  1505  010F                     	;# 
  1506  010F                     	;# 
  1507  0110                     	;# 
  1508  0111                     	;# 
  1509  0112                     	;# 
  1510  0113                     	;# 
  1511  0114                     	;# 
  1512  0115                     	;# 
  1513  0116                     	;# 
  1514  0117                     	;# 
  1515  0118                     	;# 
  1516  0119                     	;# 
  1517  0119                     	;# 
  1518  0119                     	;# 
  1519  011A                     	;# 
  1520  011A                     	;# 
  1521  011A                     	;# 
  1522  011B                     	;# 
  1523  011B                     	;# 
  1524  011B                     	;# 
  1525  011B                     	;# 
  1526  011B                     	;# 
  1527  011C                     	;# 
  1528  011C                     	;# 
  1529  011C                     	;# 
  1530  011D                     	;# 
  1531  011D                     	;# 
  1532  011D                     	;# 
  1533  011E                     	;# 
  1534  011E                     	;# 
  1535  011E                     	;# 
  1536  011F                     	;# 
  1537  011F                     	;# 
  1538  011F                     	;# 
  1539  011F                     	;# 
  1540  011F                     	;# 
  1541  018C                     	;# 
  1542  018D                     	;# 
  1543  018E                     	;# 
  1544  018F                     	;# 
  1545  0190                     	;# 
  1546  0191                     	;# 
  1547  0192                     	;# 
  1548  020C                     	;# 
  1549  020D                     	;# 
  1550  020E                     	;# 
  1551  020E                     	;# 
  1552  020F                     	;# 
  1553  020F                     	;# 
  1554  0210                     	;# 
  1555  0210                     	;# 
  1556  0211                     	;# 
  1557  0211                     	;# 
  1558  0212                     	;# 
  1559  0213                     	;# 
  1560  0214                     	;# 
  1561  0214                     	;# 
  1562  0215                     	;# 
  1563  0215                     	;# 
  1564  0216                     	;# 
  1565  0216                     	;# 
  1566  0217                     	;# 
  1567  0217                     	;# 
  1568  0218                     	;# 
  1569  0219                     	;# 
  1570  021A                     	;# 
  1571  021A                     	;# 
  1572  021B                     	;# 
  1573  021B                     	;# 
  1574  021C                     	;# 
  1575  021C                     	;# 
  1576  021D                     	;# 
  1577  021D                     	;# 
  1578  021E                     	;# 
  1579  021F                     	;# 
  1580  028C                     	;# 
  1581  028C                     	;# 
  1582  028D                     	;# 
  1583  028D                     	;# 
  1584  028E                     	;# 
  1585  028F                     	;# 
  1586  0290                     	;# 
  1587  0291                     	;# 
  1588  0292                     	;# 
  1589  0292                     	;# 
  1590  0293                     	;# 
  1591  0293                     	;# 
  1592  0294                     	;# 
  1593  0295                     	;# 
  1594  0296                     	;# 
  1595  0297                     	;# 
  1596  0298                     	;# 
  1597  0298                     	;# 
  1598  0299                     	;# 
  1599  0299                     	;# 
  1600  029A                     	;# 
  1601  029B                     	;# 
  1602  029C                     	;# 
  1603  029D                     	;# 
  1604  029F                     	;# 
  1605  030C                     	;# 
  1606  030C                     	;# 
  1607  030D                     	;# 
  1608  030E                     	;# 
  1609  030F                     	;# 
  1610  0310                     	;# 
  1611  0310                     	;# 
  1612  0311                     	;# 
  1613  0312                     	;# 
  1614  0313                     	;# 
  1615  0314                     	;# 
  1616  0314                     	;# 
  1617  0315                     	;# 
  1618  0316                     	;# 
  1619  0317                     	;# 
  1620  0318                     	;# 
  1621  0318                     	;# 
  1622  0319                     	;# 
  1623  031A                     	;# 
  1624  031B                     	;# 
  1625  038C                     	;# 
  1626  038C                     	;# 
  1627  038D                     	;# 
  1628  038E                     	;# 
  1629  0390                     	;# 
  1630  0390                     	;# 
  1631  0391                     	;# 
  1632  0392                     	;# 
  1633  048C                     	;# 
  1634  048C                     	;# 
  1635  048D                     	;# 
  1636  048E                     	;# 
  1637  048F                     	;# 
  1638  048F                     	;# 
  1639  0490                     	;# 
  1640  0491                     	;# 
  1641  0492                     	;# 
  1642  0492                     	;# 
  1643  0493                     	;# 
  1644  0494                     	;# 
  1645  0495                     	;# 
  1646  0495                     	;# 
  1647  0496                     	;# 
  1648  0497                     	;# 
  1649  0498                     	;# 
  1650  0499                     	;# 
  1651  049A                     	;# 
  1652  049B                     	;# 
  1653  049C                     	;# 
  1654  049D                     	;# 
  1655  058C                     	;# 
  1656  058C                     	;# 
  1657  058D                     	;# 
  1658  058E                     	;# 
  1659  058F                     	;# 
  1660  058F                     	;# 
  1661  0590                     	;# 
  1662  0591                     	;# 
  1663  0592                     	;# 
  1664  0593                     	;# 
  1665  059C                     	;# 
  1666  059C                     	;# 
  1667  059D                     	;# 
  1668  059D                     	;# 
  1669  059E                     	;# 
  1670  059F                     	;# 
  1671  060C                     	;# 
  1672  060C                     	;# 
  1673  060D                     	;# 
  1674  060D                     	;# 
  1675  060E                     	;# 
  1676  060F                     	;# 
  1677  0610                     	;# 
  1678  0611                     	;# 
  1679  0612                     	;# 
  1680  0613                     	;# 
  1681  0614                     	;# 
  1682  0616                     	;# 
  1683  0616                     	;# 
  1684  0617                     	;# 
  1685  0617                     	;# 
  1686  0618                     	;# 
  1687  0619                     	;# 
  1688  061A                     	;# 
  1689  061B                     	;# 
  1690  061C                     	;# 
  1691  061D                     	;# 
  1692  061E                     	;# 
  1693  070C                     	;# 
  1694  070D                     	;# 
  1695  070E                     	;# 
  1696  070F                     	;# 
  1697  0710                     	;# 
  1698  0711                     	;# 
  1699  0712                     	;# 
  1700  0713                     	;# 
  1701  0714                     	;# 
  1702  0716                     	;# 
  1703  0717                     	;# 
  1704  0718                     	;# 
  1705  0719                     	;# 
  1706  071A                     	;# 
  1707  071B                     	;# 
  1708  071C                     	;# 
  1709  071D                     	;# 
  1710  071E                     	;# 
  1711  0796                     	;# 
  1712  0797                     	;# 
  1713  0798                     	;# 
  1714  0799                     	;# 
  1715  079A                     	;# 
  1716  079B                     	;# 
  1717  079C                     	;# 
  1718  079D                     	;# 
  1719  080C                     	;# 
  1720  080D                     	;# 
  1721  080E                     	;# 
  1722  080F                     	;# 
  1723  0810                     	;# 
  1724  0811                     	;# 
  1725  0812                     	;# 
  1726  0813                     	;# 
  1727  0814                     	;# 
  1728  081A                     	;# 
  1729  081A                     	;# 
  1730  081B                     	;# 
  1731  081C                     	;# 
  1732  081C                     	;# 
  1733  081D                     	;# 
  1734  081E                     	;# 
  1735  081F                     	;# 
  1736  088C                     	;# 
  1737  088D                     	;# 
  1738  088E                     	;# 
  1739  088F                     	;# 
  1740  0890                     	;# 
  1741  0891                     	;# 
  1742  0892                     	;# 
  1743  0893                     	;# 
  1744  0895                     	;# 
  1745  0896                     	;# 
  1746  0897                     	;# 
  1747  0898                     	;# 
  1748  0899                     	;# 
  1749  089A                     	;# 
  1750  089B                     	;# 
  1751  090C                     	;# 
  1752  090E                     	;# 
  1753  090F                     	;# 
  1754  091F                     	;# 
  1755  098F                     	;# 
  1756  098F                     	;# 
  1757  0990                     	;# 
  1758  0991                     	;# 
  1759  0992                     	;# 
  1760  0993                     	;# 
  1761  0994                     	;# 
  1762  0995                     	;# 
  1763  0996                     	;# 
  1764  0997                     	;# 
  1765  1E0F                     	;# 
  1766  1E10                     	;# 
  1767  1E11                     	;# 
  1768  1E12                     	;# 
  1769  1E13                     	;# 
  1770  1E14                     	;# 
  1771  1E15                     	;# 
  1772  1E16                     	;# 
  1773  1E17                     	;# 
  1774  1E18                     	;# 
  1775  1E19                     	;# 
  1776  1E1A                     	;# 
  1777  1E1B                     	;# 
  1778  1E1C                     	;# 
  1779  1E1D                     	;# 
  1780  1E1E                     	;# 
  1781  1E1F                     	;# 
  1782  1E20                     	;# 
  1783  1E21                     	;# 
  1784  1E22                     	;# 
  1785  1E23                     	;# 
  1786  1E24                     	;# 
  1787  1E25                     	;# 
  1788  1E26                     	;# 
  1789  1E27                     	;# 
  1790  1E28                     	;# 
  1791  1E29                     	;# 
  1792  1E2A                     	;# 
  1793  1E2B                     	;# 
  1794  1E2C                     	;# 
  1795  1E2D                     	;# 
  1796  1E2E                     	;# 
  1797  1E2F                     	;# 
  1798  1E30                     	;# 
  1799  1E31                     	;# 
  1800  1E32                     	;# 
  1801  1E33                     	;# 
  1802  1E34                     	;# 
  1803  1E35                     	;# 
  1804  1E36                     	;# 
  1805  1E37                     	;# 
  1806  1E8F                     	;# 
  1807  1E90                     	;# 
  1808  1E91                     	;# 
  1809  1E92                     	;# 
  1810  1E93                     	;# 
  1811  1E94                     	;# 
  1812  1E95                     	;# 
  1813  1E96                     	;# 
  1814  1E97                     	;# 
  1815  1E9C                     	;# 
  1816  1E9D                     	;# 
  1817  1E9E                     	;# 
  1818  1EA1                     	;# 
  1819  1EA2                     	;# 
  1820  1EA3                     	;# 
  1821  1EA4                     	;# 
  1822  1EA9                     	;# 
  1823  1EAA                     	;# 
  1824  1EB1                     	;# 
  1825  1EB2                     	;# 
  1826  1EB8                     	;# 
  1827  1EB9                     	;# 
  1828  1EBA                     	;# 
  1829  1EBB                     	;# 
  1830  1EBC                     	;# 
  1831  1EBD                     	;# 
  1832  1EBE                     	;# 
  1833  1EC3                     	;# 
  1834  1EC5                     	;# 
  1835  1EC6                     	;# 
  1836  1EC7                     	;# 
  1837  1ECB                     	;# 
  1838  1ECB                     	;# 
  1839  1ECB                     	;# 
  1840  1ECC                     	;# 
  1841  1ECC                     	;# 
  1842  1ECC                     	;# 
  1843  1F10                     	;# 
  1844  1F11                     	;# 
  1845  1F12                     	;# 
  1846  1F14                     	;# 
  1847  1F15                     	;# 
  1848  1F1C                     	;# 
  1849  1F1D                     	;# 
  1850  1F1E                     	;# 
  1851  1F1F                     	;# 
  1852  1F20                     	;# 
  1853  1F21                     	;# 
  1854  1F22                     	;# 
  1855  1F23                     	;# 
  1856  1F24                     	;# 
  1857  1F25                     	;# 
  1858  1F26                     	;# 
  1859  1F27                     	;# 
  1860  1F38                     	;# 
  1861  1F39                     	;# 
  1862  1F3A                     	;# 
  1863  1F3B                     	;# 
  1864  1F3C                     	;# 
  1865  1F3D                     	;# 
  1866  1F3E                     	;# 
  1867  1F3F                     	;# 
  1868  1F43                     	;# 
  1869  1F44                     	;# 
  1870  1F45                     	;# 
  1871  1F46                     	;# 
  1872  1F47                     	;# 
  1873  1F48                     	;# 
  1874  1F49                     	;# 
  1875  1F4A                     	;# 
  1876  1F4E                     	;# 
  1877  1F4F                     	;# 
  1878  1F50                     	;# 
  1879  1F51                     	;# 
  1880  1F52                     	;# 
  1881  1F53                     	;# 
  1882  1F54                     	;# 
  1883  1F55                     	;# 
  1884  1FE4                     	;# 
  1885  1FE5                     	;# 
  1886  1FE6                     	;# 
  1887  1FE7                     	;# 
  1888  1FE8                     	;# 
  1889  1FE8                     	;# 
  1890  1FE9                     	;# 
  1891  1FEA                     	;# 
  1892  1FEB                     	;# 
  1893  1FED                     	;# 
  1894  1FEE                     	;# 
  1895  1FEF                     	;# 
  1896  0000                     	;# 
  1897  0001                     	;# 
  1898  0002                     	;# 
  1899  0003                     	;# 
  1900  0004                     	;# 
  1901  0005                     	;# 
  1902  0006                     	;# 
  1903  0007                     	;# 
  1904  0008                     	;# 
  1905  0009                     	;# 
  1906  000A                     	;# 
  1907  000B                     	;# 
  1908  000C                     	;# 
  1909  000D                     	;# 
  1910  000E                     	;# 
  1911  0012                     	;# 
  1912  0013                     	;# 
  1913  0014                     	;# 
  1914  0018                     	;# 
  1915  0019                     	;# 
  1916  001A                     	;# 
  1917  008C                     	;# 
  1918  008C                     	;# 
  1919  008D                     	;# 
  1920  008E                     	;# 
  1921  008E                     	;# 
  1922  008F                     	;# 
  1923  0090                     	;# 
  1924  0090                     	;# 
  1925  0091                     	;# 
  1926  0092                     	;# 
  1927  0092                     	;# 
  1928  0093                     	;# 
  1929  0094                     	;# 
  1930  0094                     	;# 
  1931  0095                     	;# 
  1932  0096                     	;# 
  1933  0096                     	;# 
  1934  0097                     	;# 
  1935  0098                     	;# 
  1936  0099                     	;# 
  1937  009A                     	;# 
  1938  009B                     	;# 
  1939  009B                     	;# 
  1940  009C                     	;# 
  1941  009D                     	;# 
  1942  009D                     	;# 
  1943  009E                     	;# 
  1944  009F                     	;# 
  1945  010C                     	;# 
  1946  010C                     	;# 
  1947  010D                     	;# 
  1948  010E                     	;# 
  1949  010F                     	;# 
  1950  010F                     	;# 
  1951  0110                     	;# 
  1952  0111                     	;# 
  1953  0112                     	;# 
  1954  0113                     	;# 
  1955  0114                     	;# 
  1956  0115                     	;# 
  1957  0116                     	;# 
  1958  0117                     	;# 
  1959  0118                     	;# 
  1960  0119                     	;# 
  1961  0119                     	;# 
  1962  0119                     	;# 
  1963  011A                     	;# 
  1964  011A                     	;# 
  1965  011A                     	;# 
  1966  011B                     	;# 
  1967  011B                     	;# 
  1968  011B                     	;# 
  1969  011B                     	;# 
  1970  011B                     	;# 
  1971  011C                     	;# 
  1972  011C                     	;# 
  1973  011C                     	;# 
  1974  011D                     	;# 
  1975  011D                     	;# 
  1976  011D                     	;# 
  1977  011E                     	;# 
  1978  011E                     	;# 
  1979  011E                     	;# 
  1980  011F                     	;# 
  1981  011F                     	;# 
  1982  011F                     	;# 
  1983  011F                     	;# 
  1984  011F                     	;# 
  1985  018C                     	;# 
  1986  018D                     	;# 
  1987  018E                     	;# 
  1988  018F                     	;# 
  1989  0190                     	;# 
  1990  0191                     	;# 
  1991  0192                     	;# 
  1992  020C                     	;# 
  1993  020D                     	;# 
  1994  020E                     	;# 
  1995  020E                     	;# 
  1996  020F                     	;# 
  1997  020F                     	;# 
  1998  0210                     	;# 
  1999  0210                     	;# 
  2000  0211                     	;# 
  2001  0211                     	;# 
  2002  0212                     	;# 
  2003  0213                     	;# 
  2004  0214                     	;# 
  2005  0214                     	;# 
  2006  0215                     	;# 
  2007  0215                     	;# 
  2008  0216                     	;# 
  2009  0216                     	;# 
  2010  0217                     	;# 
  2011  0217                     	;# 
  2012  0218                     	;# 
  2013  0219                     	;# 
  2014  021A                     	;# 
  2015  021A                     	;# 
  2016  021B                     	;# 
  2017  021B                     	;# 
  2018  021C                     	;# 
  2019  021C                     	;# 
  2020  021D                     	;# 
  2021  021D                     	;# 
  2022  021E                     	;# 
  2023  021F                     	;# 
  2024  028C                     	;# 
  2025  028C                     	;# 
  2026  028D                     	;# 
  2027  028D                     	;# 
  2028  028E                     	;# 
  2029  028F                     	;# 
  2030  0290                     	;# 
  2031  0291                     	;# 
  2032  0292                     	;# 
  2033  0292                     	;# 
  2034  0293                     	;# 
  2035  0293                     	;# 
  2036  0294                     	;# 
  2037  0295                     	;# 
  2038  0296                     	;# 
  2039  0297                     	;# 
  2040  0298                     	;# 
  2041  0298                     	;# 
  2042  0299                     	;# 
  2043  0299                     	;# 
  2044  029A                     	;# 
  2045  029B                     	;# 
  2046  029C                     	;# 
  2047  029D                     	;# 
  2048  029F                     	;# 
  2049  030C                     	;# 
  2050  030C                     	;# 
  2051  030D                     	;# 
  2052  030E                     	;# 
  2053  030F                     	;# 
  2054  0310                     	;# 
  2055  0310                     	;# 
  2056  0311                     	;# 
  2057  0312                     	;# 
  2058  0313                     	;# 
  2059  0314                     	;# 
  2060  0314                     	;# 
  2061  0315                     	;# 
  2062  0316                     	;# 
  2063  0317                     	;# 
  2064  0318                     	;# 
  2065  0318                     	;# 
  2066  0319                     	;# 
  2067  031A                     	;# 
  2068  031B                     	;# 
  2069  038C                     	;# 
  2070  038C                     	;# 
  2071  038D                     	;# 
  2072  038E                     	;# 
  2073  0390                     	;# 
  2074  0390                     	;# 
  2075  0391                     	;# 
  2076  0392                     	;# 
  2077  048C                     	;# 
  2078  048C                     	;# 
  2079  048D                     	;# 
  2080  048E                     	;# 
  2081  048F                     	;# 
  2082  048F                     	;# 
  2083  0490                     	;# 
  2084  0491                     	;# 
  2085  0492                     	;# 
  2086  0492                     	;# 
  2087  0493                     	;# 
  2088  0494                     	;# 
  2089  0495                     	;# 
  2090  0495                     	;# 
  2091  0496                     	;# 
  2092  0497                     	;# 
  2093  0498                     	;# 
  2094  0499                     	;# 
  2095  049A                     	;# 
  2096  049B                     	;# 
  2097  049C                     	;# 
  2098  049D                     	;# 
  2099  058C                     	;# 
  2100  058C                     	;# 
  2101  058D                     	;# 
  2102  058E                     	;# 
  2103  058F                     	;# 
  2104  058F                     	;# 
  2105  0590                     	;# 
  2106  0591                     	;# 
  2107  0592                     	;# 
  2108  0593                     	;# 
  2109  059C                     	;# 
  2110  059C                     	;# 
  2111  059D                     	;# 
  2112  059D                     	;# 
  2113  059E                     	;# 
  2114  059F                     	;# 
  2115  060C                     	;# 
  2116  060C                     	;# 
  2117  060D                     	;# 
  2118  060D                     	;# 
  2119  060E                     	;# 
  2120  060F                     	;# 
  2121  0610                     	;# 
  2122  0611                     	;# 
  2123  0612                     	;# 
  2124  0613                     	;# 
  2125  0614                     	;# 
  2126  0616                     	;# 
  2127  0616                     	;# 
  2128  0617                     	;# 
  2129  0617                     	;# 
  2130  0618                     	;# 
  2131  0619                     	;# 
  2132  061A                     	;# 
  2133  061B                     	;# 
  2134  061C                     	;# 
  2135  061D                     	;# 
  2136  061E                     	;# 
  2137  070C                     	;# 
  2138  070D                     	;# 
  2139  070E                     	;# 
  2140  070F                     	;# 
  2141  0710                     	;# 
  2142  0711                     	;# 
  2143  0712                     	;# 
  2144  0713                     	;# 
  2145  0714                     	;# 
  2146  0716                     	;# 
  2147  0717                     	;# 
  2148  0718                     	;# 
  2149  0719                     	;# 
  2150  071A                     	;# 
  2151  071B                     	;# 
  2152  071C                     	;# 
  2153  071D                     	;# 
  2154  071E                     	;# 
  2155  0796                     	;# 
  2156  0797                     	;# 
  2157  0798                     	;# 
  2158  0799                     	;# 
  2159  079A                     	;# 
  2160  079B                     	;# 
  2161  079C                     	;# 
  2162  079D                     	;# 
  2163  080C                     	;# 
  2164  080D                     	;# 
  2165  080E                     	;# 
  2166  080F                     	;# 
  2167  0810                     	;# 
  2168  0811                     	;# 
  2169  0812                     	;# 
  2170  0813                     	;# 
  2171  0814                     	;# 
  2172  081A                     	;# 
  2173  081A                     	;# 
  2174  081B                     	;# 
  2175  081C                     	;# 
  2176  081C                     	;# 
  2177  081D                     	;# 
  2178  081E                     	;# 
  2179  081F                     	;# 
  2180  088C                     	;# 
  2181  088D                     	;# 
  2182  088E                     	;# 
  2183  088F                     	;# 
  2184  0890                     	;# 
  2185  0891                     	;# 
  2186  0892                     	;# 
  2187  0893                     	;# 
  2188  0895                     	;# 
  2189  0896                     	;# 
  2190  0897                     	;# 
  2191  0898                     	;# 
  2192  0899                     	;# 
  2193  089A                     	;# 
  2194  089B                     	;# 
  2195  090C                     	;# 
  2196  090E                     	;# 
  2197  090F                     	;# 
  2198  091F                     	;# 
  2199  098F                     	;# 
  2200  098F                     	;# 
  2201  0990                     	;# 
  2202  0991                     	;# 
  2203  0992                     	;# 
  2204  0993                     	;# 
  2205  0994                     	;# 
  2206  0995                     	;# 
  2207  0996                     	;# 
  2208  0997                     	;# 
  2209  1E0F                     	;# 
  2210  1E10                     	;# 
  2211  1E11                     	;# 
  2212  1E12                     	;# 
  2213  1E13                     	;# 
  2214  1E14                     	;# 
  2215  1E15                     	;# 
  2216  1E16                     	;# 
  2217  1E17                     	;# 
  2218  1E18                     	;# 
  2219  1E19                     	;# 
  2220  1E1A                     	;# 
  2221  1E1B                     	;# 
  2222  1E1C                     	;# 
  2223  1E1D                     	;# 
  2224  1E1E                     	;# 
  2225  1E1F                     	;# 
  2226  1E20                     	;# 
  2227  1E21                     	;# 
  2228  1E22                     	;# 
  2229  1E23                     	;# 
  2230  1E24                     	;# 
  2231  1E25                     	;# 
  2232  1E26                     	;# 
  2233  1E27                     	;# 
  2234  1E28                     	;# 
  2235  1E29                     	;# 
  2236  1E2A                     	;# 
  2237  1E2B                     	;# 
  2238  1E2C                     	;# 
  2239  1E2D                     	;# 
  2240  1E2E                     	;# 
  2241  1E2F                     	;# 
  2242  1E30                     	;# 
  2243  1E31                     	;# 
  2244  1E32                     	;# 
  2245  1E33                     	;# 
  2246  1E34                     	;# 
  2247  1E35                     	;# 
  2248  1E36                     	;# 
  2249  1E37                     	;# 
  2250  1E8F                     	;# 
  2251  1E90                     	;# 
  2252  1E91                     	;# 
  2253  1E92                     	;# 
  2254  1E93                     	;# 
  2255  1E94                     	;# 
  2256  1E95                     	;# 
  2257  1E96                     	;# 
  2258  1E97                     	;# 
  2259  1E9C                     	;# 
  2260  1E9D                     	;# 
  2261  1E9E                     	;# 
  2262  1EA1                     	;# 
  2263  1EA2                     	;# 
  2264  1EA3                     	;# 
  2265  1EA4                     	;# 
  2266  1EA9                     	;# 
  2267  1EAA                     	;# 
  2268  1EB1                     	;# 
  2269  1EB2                     	;# 
  2270  1EB8                     	;# 
  2271  1EB9                     	;# 
  2272  1EBA                     	;# 
  2273  1EBB                     	;# 
  2274  1EBC                     	;# 
  2275  1EBD                     	;# 
  2276  1EBE                     	;# 
  2277  1EC3                     	;# 
  2278  1EC5                     	;# 
  2279  1EC6                     	;# 
  2280  1EC7                     	;# 
  2281  1ECB                     	;# 
  2282  1ECB                     	;# 
  2283  1ECB                     	;# 
  2284  1ECC                     	;# 
  2285  1ECC                     	;# 
  2286  1ECC                     	;# 
  2287  1F10                     	;# 
  2288  1F11                     	;# 
  2289  1F12                     	;# 
  2290  1F14                     	;# 
  2291  1F15                     	;# 
  2292  1F1C                     	;# 
  2293  1F1D                     	;# 
  2294  1F1E                     	;# 
  2295  1F1F                     	;# 
  2296  1F20                     	;# 
  2297  1F21                     	;# 
  2298  1F22                     	;# 
  2299  1F23                     	;# 
  2300  1F24                     	;# 
  2301  1F25                     	;# 
  2302  1F26                     	;# 
  2303  1F27                     	;# 
  2304  1F38                     	;# 
  2305  1F39                     	;# 
  2306  1F3A                     	;# 
  2307  1F3B                     	;# 
  2308  1F3C                     	;# 
  2309  1F3D                     	;# 
  2310  1F3E                     	;# 
  2311  1F3F                     	;# 
  2312  1F43                     	;# 
  2313  1F44                     	;# 
  2314  1F45                     	;# 
  2315  1F46                     	;# 
  2316  1F47                     	;# 
  2317  1F48                     	;# 
  2318  1F49                     	;# 
  2319  1F4A                     	;# 
  2320  1F4E                     	;# 
  2321  1F4F                     	;# 
  2322  1F50                     	;# 
  2323  1F51                     	;# 
  2324  1F52                     	;# 
  2325  1F53                     	;# 
  2326  1F54                     	;# 
  2327  1F55                     	;# 
  2328  1FE4                     	;# 
  2329  1FE5                     	;# 
  2330  1FE6                     	;# 
  2331  1FE7                     	;# 
  2332  1FE8                     	;# 
  2333  1FE8                     	;# 
  2334  1FE9                     	;# 
  2335  1FEA                     	;# 
  2336  1FEB                     	;# 
  2337  1FED                     	;# 
  2338  1FEE                     	;# 
  2339  1FEF                     	;# 
  2340  0000                     	;# 
  2341  0001                     	;# 
  2342  0002                     	;# 
  2343  0003                     	;# 
  2344  0004                     	;# 
  2345  0005                     	;# 
  2346  0006                     	;# 
  2347  0007                     	;# 
  2348  0008                     	;# 
  2349  0009                     	;# 
  2350  000A                     	;# 
  2351  000B                     	;# 
  2352  000C                     	;# 
  2353  000D                     	;# 
  2354  000E                     	;# 
  2355  0012                     	;# 
  2356  0013                     	;# 
  2357  0014                     	;# 
  2358  0018                     	;# 
  2359  0019                     	;# 
  2360  001A                     	;# 
  2361  008C                     	;# 
  2362  008C                     	;# 
  2363  008D                     	;# 
  2364  008E                     	;# 
  2365  008E                     	;# 
  2366  008F                     	;# 
  2367  0090                     	;# 
  2368  0090                     	;# 
  2369  0091                     	;# 
  2370  0092                     	;# 
  2371  0092                     	;# 
  2372  0093                     	;# 
  2373  0094                     	;# 
  2374  0094                     	;# 
  2375  0095                     	;# 
  2376  0096                     	;# 
  2377  0096                     	;# 
  2378  0097                     	;# 
  2379  0098                     	;# 
  2380  0099                     	;# 
  2381  009A                     	;# 
  2382  009B                     	;# 
  2383  009B                     	;# 
  2384  009C                     	;# 
  2385  009D                     	;# 
  2386  009D                     	;# 
  2387  009E                     	;# 
  2388  009F                     	;# 
  2389  010C                     	;# 
  2390  010C                     	;# 
  2391  010D                     	;# 
  2392  010E                     	;# 
  2393  010F                     	;# 
  2394  010F                     	;# 
  2395  0110                     	;# 
  2396  0111                     	;# 
  2397  0112                     	;# 
  2398  0113                     	;# 
  2399  0114                     	;# 
  2400  0115                     	;# 
  2401  0116                     	;# 
  2402  0117                     	;# 
  2403  0118                     	;# 
  2404  0119                     	;# 
  2405  0119                     	;# 
  2406  0119                     	;# 
  2407  011A                     	;# 
  2408  011A                     	;# 
  2409  011A                     	;# 
  2410  011B                     	;# 
  2411  011B                     	;# 
  2412  011B                     	;# 
  2413  011B                     	;# 
  2414  011B                     	;# 
  2415  011C                     	;# 
  2416  011C                     	;# 
  2417  011C                     	;# 
  2418  011D                     	;# 
  2419  011D                     	;# 
  2420  011D                     	;# 
  2421  011E                     	;# 
  2422  011E                     	;# 
  2423  011E                     	;# 
  2424  011F                     	;# 
  2425  011F                     	;# 
  2426  011F                     	;# 
  2427  011F                     	;# 
  2428  011F                     	;# 
  2429  018C                     	;# 
  2430  018D                     	;# 
  2431  018E                     	;# 
  2432  018F                     	;# 
  2433  0190                     	;# 
  2434  0191                     	;# 
  2435  0192                     	;# 
  2436  020C                     	;# 
  2437  020D                     	;# 
  2438  020E                     	;# 
  2439  020E                     	;# 
  2440  020F                     	;# 
  2441  020F                     	;# 
  2442  0210                     	;# 
  2443  0210                     	;# 
  2444  0211                     	;# 
  2445  0211                     	;# 
  2446  0212                     	;# 
  2447  0213                     	;# 
  2448  0214                     	;# 
  2449  0214                     	;# 
  2450  0215                     	;# 
  2451  0215                     	;# 
  2452  0216                     	;# 
  2453  0216                     	;# 
  2454  0217                     	;# 
  2455  0217                     	;# 
  2456  0218                     	;# 
  2457  0219                     	;# 
  2458  021A                     	;# 
  2459  021A                     	;# 
  2460  021B                     	;# 
  2461  021B                     	;# 
  2462  021C                     	;# 
  2463  021C                     	;# 
  2464  021D                     	;# 
  2465  021D                     	;# 
  2466  021E                     	;# 
  2467  021F                     	;# 
  2468  028C                     	;# 
  2469  028C                     	;# 
  2470  028D                     	;# 
  2471  028D                     	;# 
  2472  028E                     	;# 
  2473  028F                     	;# 
  2474  0290                     	;# 
  2475  0291                     	;# 
  2476  0292                     	;# 
  2477  0292                     	;# 
  2478  0293                     	;# 
  2479  0293                     	;# 
  2480  0294                     	;# 
  2481  0295                     	;# 
  2482  0296                     	;# 
  2483  0297                     	;# 
  2484  0298                     	;# 
  2485  0298                     	;# 
  2486  0299                     	;# 
  2487  0299                     	;# 
  2488  029A                     	;# 
  2489  029B                     	;# 
  2490  029C                     	;# 
  2491  029D                     	;# 
  2492  029F                     	;# 
  2493  030C                     	;# 
  2494  030C                     	;# 
  2495  030D                     	;# 
  2496  030E                     	;# 
  2497  030F                     	;# 
  2498  0310                     	;# 
  2499  0310                     	;# 
  2500  0311                     	;# 
  2501  0312                     	;# 
  2502  0313                     	;# 
  2503  0314                     	;# 
  2504  0314                     	;# 
  2505  0315                     	;# 
  2506  0316                     	;# 
  2507  0317                     	;# 
  2508  0318                     	;# 
  2509  0318                     	;# 
  2510  0319                     	;# 
  2511  031A                     	;# 
  2512  031B                     	;# 
  2513  038C                     	;# 
  2514  038C                     	;# 
  2515  038D                     	;# 
  2516  038E                     	;# 
  2517  0390                     	;# 
  2518  0390                     	;# 
  2519  0391                     	;# 
  2520  0392                     	;# 
  2521  048C                     	;# 
  2522  048C                     	;# 
  2523  048D                     	;# 
  2524  048E                     	;# 
  2525  048F                     	;# 
  2526  048F                     	;# 
  2527  0490                     	;# 
  2528  0491                     	;# 
  2529  0492                     	;# 
  2530  0492                     	;# 
  2531  0493                     	;# 
  2532  0494                     	;# 
  2533  0495                     	;# 
  2534  0495                     	;# 
  2535  0496                     	;# 
  2536  0497                     	;# 
  2537  0498                     	;# 
  2538  0499                     	;# 
  2539  049A                     	;# 
  2540  049B                     	;# 
  2541  049C                     	;# 
  2542  049D                     	;# 
  2543  058C                     	;# 
  2544  058C                     	;# 
  2545  058D                     	;# 
  2546  058E                     	;# 
  2547  058F                     	;# 
  2548  058F                     	;# 
  2549  0590                     	;# 
  2550  0591                     	;# 
  2551  0592                     	;# 
  2552  0593                     	;# 
  2553  059C                     	;# 
  2554  059C                     	;# 
  2555  059D                     	;# 
  2556  059D                     	;# 
  2557  059E                     	;# 
  2558  059F                     	;# 
  2559  060C                     	;# 
  2560  060C                     	;# 
  2561  060D                     	;# 
  2562  060D                     	;# 
  2563  060E                     	;# 
  2564  060F                     	;# 
  2565  0610                     	;# 
  2566  0611                     	;# 
  2567  0612                     	;# 
  2568  0613                     	;# 
  2569  0614                     	;# 
  2570  0616                     	;# 
  2571  0616                     	;# 
  2572  0617                     	;# 
  2573  0617                     	;# 
  2574  0618                     	;# 
  2575  0619                     	;# 
  2576  061A                     	;# 
  2577  061B                     	;# 
  2578  061C                     	;# 
  2579  061D                     	;# 
  2580  061E                     	;# 
  2581  070C                     	;# 
  2582  070D                     	;# 
  2583  070E                     	;# 
  2584  070F                     	;# 
  2585  0710                     	;# 
  2586  0711                     	;# 
  2587  0712                     	;# 
  2588  0713                     	;# 
  2589  0714                     	;# 
  2590  0716                     	;# 
  2591  0717                     	;# 
  2592  0718                     	;# 
  2593  0719                     	;# 
  2594  071A                     	;# 
  2595  071B                     	;# 
  2596  071C                     	;# 
  2597  071D                     	;# 
  2598  071E                     	;# 
  2599  0796                     	;# 
  2600  0797                     	;# 
  2601  0798                     	;# 
  2602  0799                     	;# 
  2603  079A                     	;# 
  2604  079B                     	;# 
  2605  079C                     	;# 
  2606  079D                     	;# 
  2607  080C                     	;# 
  2608  080D                     	;# 
  2609  080E                     	;# 
  2610  080F                     	;# 
  2611  0810                     	;# 
  2612  0811                     	;# 
  2613  0812                     	;# 
  2614  0813                     	;# 
  2615  0814                     	;# 
  2616  081A                     	;# 
  2617  081A                     	;# 
  2618  081B                     	;# 
  2619  081C                     	;# 
  2620  081C                     	;# 
  2621  081D                     	;# 
  2622  081E                     	;# 
  2623  081F                     	;# 
  2624  088C                     	;# 
  2625  088D                     	;# 
  2626  088E                     	;# 
  2627  088F                     	;# 
  2628  0890                     	;# 
  2629  0891                     	;# 
  2630  0892                     	;# 
  2631  0893                     	;# 
  2632  0895                     	;# 
  2633  0896                     	;# 
  2634  0897                     	;# 
  2635  0898                     	;# 
  2636  0899                     	;# 
  2637  089A                     	;# 
  2638  089B                     	;# 
  2639  090C                     	;# 
  2640  090E                     	;# 
  2641  090F                     	;# 
  2642  091F                     	;# 
  2643  098F                     	;# 
  2644  098F                     	;# 
  2645  0990                     	;# 
  2646  0991                     	;# 
  2647  0992                     	;# 
  2648  0993                     	;# 
  2649  0994                     	;# 
  2650  0995                     	;# 
  2651  0996                     	;# 
  2652  0997                     	;# 
  2653  1E0F                     	;# 
  2654  1E10                     	;# 
  2655  1E11                     	;# 
  2656  1E12                     	;# 
  2657  1E13                     	;# 
  2658  1E14                     	;# 
  2659  1E15                     	;# 
  2660  1E16                     	;# 
  2661  1E17                     	;# 
  2662  1E18                     	;# 
  2663  1E19                     	;# 
  2664  1E1A                     	;# 
  2665  1E1B                     	;# 
  2666  1E1C                     	;# 
  2667  1E1D                     	;# 
  2668  1E1E                     	;# 
  2669  1E1F                     	;# 
  2670  1E20                     	;# 
  2671  1E21                     	;# 
  2672  1E22                     	;# 
  2673  1E23                     	;# 
  2674  1E24                     	;# 
  2675  1E25                     	;# 
  2676  1E26                     	;# 
  2677  1E27                     	;# 
  2678  1E28                     	;# 
  2679  1E29                     	;# 
  2680  1E2A                     	;# 
  2681  1E2B                     	;# 
  2682  1E2C                     	;# 
  2683  1E2D                     	;# 
  2684  1E2E                     	;# 
  2685  1E2F                     	;# 
  2686  1E30                     	;# 
  2687  1E31                     	;# 
  2688  1E32                     	;# 
  2689  1E33                     	;# 
  2690  1E34                     	;# 
  2691  1E35                     	;# 
  2692  1E36                     	;# 
  2693  1E37                     	;# 
  2694  1E8F                     	;# 
  2695  1E90                     	;# 
  2696  1E91                     	;# 
  2697  1E92                     	;# 
  2698  1E93                     	;# 
  2699  1E94                     	;# 
  2700  1E95                     	;# 
  2701  1E96                     	;# 
  2702  1E97                     	;# 
  2703  1E9C                     	;# 
  2704  1E9D                     	;# 
  2705  1E9E                     	;# 
  2706  1EA1                     	;# 
  2707  1EA2                     	;# 
  2708  1EA3                     	;# 
  2709  1EA4                     	;# 
  2710  1EA9                     	;# 
  2711  1EAA                     	;# 
  2712  1EB1                     	;# 
  2713  1EB2                     	;# 
  2714  1EB8                     	;# 
  2715  1EB9                     	;# 
  2716  1EBA                     	;# 
  2717  1EBB                     	;# 
  2718  1EBC                     	;# 
  2719  1EBD                     	;# 
  2720  1EBE                     	;# 
  2721  1EC3                     	;# 
  2722  1EC5                     	;# 
  2723  1EC6                     	;# 
  2724  1EC7                     	;# 
  2725  1ECB                     	;# 
  2726  1ECB                     	;# 
  2727  1ECB                     	;# 
  2728  1ECC                     	;# 
  2729  1ECC                     	;# 
  2730  1ECC                     	;# 
  2731  1F10                     	;# 
  2732  1F11                     	;# 
  2733  1F12                     	;# 
  2734  1F14                     	;# 
  2735  1F15                     	;# 
  2736  1F1C                     	;# 
  2737  1F1D                     	;# 
  2738  1F1E                     	;# 
  2739  1F1F                     	;# 
  2740  1F20                     	;# 
  2741  1F21                     	;# 
  2742  1F22                     	;# 
  2743  1F23                     	;# 
  2744  1F24                     	;# 
  2745  1F25                     	;# 
  2746  1F26                     	;# 
  2747  1F27                     	;# 
  2748  1F38                     	;# 
  2749  1F39                     	;# 
  2750  1F3A                     	;# 
  2751  1F3B                     	;# 
  2752  1F3C                     	;# 
  2753  1F3D                     	;# 
  2754  1F3E                     	;# 
  2755  1F3F                     	;# 
  2756  1F43                     	;# 
  2757  1F44                     	;# 
  2758  1F45                     	;# 
  2759  1F46                     	;# 
  2760  1F47                     	;# 
  2761  1F48                     	;# 
  2762  1F49                     	;# 
  2763  1F4A                     	;# 
  2764  1F4E                     	;# 
  2765  1F4F                     	;# 
  2766  1F50                     	;# 
  2767  1F51                     	;# 
  2768  1F52                     	;# 
  2769  1F53                     	;# 
  2770  1F54                     	;# 
  2771  1F55                     	;# 
  2772  1FE4                     	;# 
  2773  1FE5                     	;# 
  2774  1FE6                     	;# 
  2775  1FE7                     	;# 
  2776  1FE8                     	;# 
  2777  1FE8                     	;# 
  2778  1FE9                     	;# 
  2779  1FEA                     	;# 
  2780  1FEB                     	;# 
  2781  1FED                     	;# 
  2782  1FEE                     	;# 
  2783  1FEF                     	;# 
  2784  0000                     	;# 
  2785  0001                     	;# 
  2786  0002                     	;# 
  2787  0003                     	;# 
  2788  0004                     	;# 
  2789  0005                     	;# 
  2790  0006                     	;# 
  2791  0007                     	;# 
  2792  0008                     	;# 
  2793  0009                     	;# 
  2794  000A                     	;# 
  2795  000B                     	;# 
  2796  000C                     	;# 
  2797  000D                     	;# 
  2798  000E                     	;# 
  2799  0012                     	;# 
  2800  0013                     	;# 
  2801  0014                     	;# 
  2802  0018                     	;# 
  2803  0019                     	;# 
  2804  001A                     	;# 
  2805  008C                     	;# 
  2806  008C                     	;# 
  2807  008D                     	;# 
  2808  008E                     	;# 
  2809  008E                     	;# 
  2810  008F                     	;# 
  2811  0090                     	;# 
  2812  0090                     	;# 
  2813  0091                     	;# 
  2814  0092                     	;# 
  2815  0092                     	;# 
  2816  0093                     	;# 
  2817  0094                     	;# 
  2818  0094                     	;# 
  2819  0095                     	;# 
  2820  0096                     	;# 
  2821  0096                     	;# 
  2822  0097                     	;# 
  2823  0098                     	;# 
  2824  0099                     	;# 
  2825  009A                     	;# 
  2826  009B                     	;# 
  2827  009B                     	;# 
  2828  009C                     	;# 
  2829  009D                     	;# 
  2830  009D                     	;# 
  2831  009E                     	;# 
  2832  009F                     	;# 
  2833  010C                     	;# 
  2834  010C                     	;# 
  2835  010D                     	;# 
  2836  010E                     	;# 
  2837  010F                     	;# 
  2838  010F                     	;# 
  2839  0110                     	;# 
  2840  0111                     	;# 
  2841  0112                     	;# 
  2842  0113                     	;# 
  2843  0114                     	;# 
  2844  0115                     	;# 
  2845  0116                     	;# 
  2846  0117                     	;# 
  2847  0118                     	;# 
  2848  0119                     	;# 
  2849  0119                     	;# 
  2850  0119                     	;# 
  2851  011A                     	;# 
  2852  011A                     	;# 
  2853  011A                     	;# 
  2854  011B                     	;# 
  2855  011B                     	;# 
  2856  011B                     	;# 
  2857  011B                     	;# 
  2858  011B                     	;# 
  2859  011C                     	;# 
  2860  011C                     	;# 
  2861  011C                     	;# 
  2862  011D                     	;# 
  2863  011D                     	;# 
  2864  011D                     	;# 
  2865  011E                     	;# 
  2866  011E                     	;# 
  2867  011E                     	;# 
  2868  011F                     	;# 
  2869  011F                     	;# 
  2870  011F                     	;# 
  2871  011F                     	;# 
  2872  011F                     	;# 
  2873  018C                     	;# 
  2874  018D                     	;# 
  2875  018E                     	;# 
  2876  018F                     	;# 
  2877  0190                     	;# 
  2878  0191                     	;# 
  2879  0192                     	;# 
  2880  020C                     	;# 
  2881  020D                     	;# 
  2882  020E                     	;# 
  2883  020E                     	;# 
  2884  020F                     	;# 
  2885  020F                     	;# 
  2886  0210                     	;# 
  2887  0210                     	;# 
  2888  0211                     	;# 
  2889  0211                     	;# 
  2890  0212                     	;# 
  2891  0213                     	;# 
  2892  0214                     	;# 
  2893  0214                     	;# 
  2894  0215                     	;# 
  2895  0215                     	;# 
  2896  0216                     	;# 
  2897  0216                     	;# 
  2898  0217                     	;# 
  2899  0217                     	;# 
  2900  0218                     	;# 
  2901  0219                     	;# 
  2902  021A                     	;# 
  2903  021A                     	;# 
  2904  021B                     	;# 
  2905  021B                     	;# 
  2906  021C                     	;# 
  2907  021C                     	;# 
  2908  021D                     	;# 
  2909  021D                     	;# 
  2910  021E                     	;# 
  2911  021F                     	;# 
  2912  028C                     	;# 
  2913  028C                     	;# 
  2914  028D                     	;# 
  2915  028D                     	;# 
  2916  028E                     	;# 
  2917  028F                     	;# 
  2918  0290                     	;# 
  2919  0291                     	;# 
  2920  0292                     	;# 
  2921  0292                     	;# 
  2922  0293                     	;# 
  2923  0293                     	;# 
  2924  0294                     	;# 
  2925  0295                     	;# 
  2926  0296                     	;# 
  2927  0297                     	;# 
  2928  0298                     	;# 
  2929  0298                     	;# 
  2930  0299                     	;# 
  2931  0299                     	;# 
  2932  029A                     	;# 
  2933  029B                     	;# 
  2934  029C                     	;# 
  2935  029D                     	;# 
  2936  029F                     	;# 
  2937  030C                     	;# 
  2938  030C                     	;# 
  2939  030D                     	;# 
  2940  030E                     	;# 
  2941  030F                     	;# 
  2942  0310                     	;# 
  2943  0310                     	;# 
  2944  0311                     	;# 
  2945  0312                     	;# 
  2946  0313                     	;# 
  2947  0314                     	;# 
  2948  0314                     	;# 
  2949  0315                     	;# 
  2950  0316                     	;# 
  2951  0317                     	;# 
  2952  0318                     	;# 
  2953  0318                     	;# 
  2954  0319                     	;# 
  2955  031A                     	;# 
  2956  031B                     	;# 
  2957  038C                     	;# 
  2958  038C                     	;# 
  2959  038D                     	;# 
  2960  038E                     	;# 
  2961  0390                     	;# 
  2962  0390                     	;# 
  2963  0391                     	;# 
  2964  0392                     	;# 
  2965  048C                     	;# 
  2966  048C                     	;# 
  2967  048D                     	;# 
  2968  048E                     	;# 
  2969  048F                     	;# 
  2970  048F                     	;# 
  2971  0490                     	;# 
  2972  0491                     	;# 
  2973  0492                     	;# 
  2974  0492                     	;# 
  2975  0493                     	;# 
  2976  0494                     	;# 
  2977  0495                     	;# 
  2978  0495                     	;# 
  2979  0496                     	;# 
  2980  0497                     	;# 
  2981  0498                     	;# 
  2982  0499                     	;# 
  2983  049A                     	;# 
  2984  049B                     	;# 
  2985  049C                     	;# 
  2986  049D                     	;# 
  2987  058C                     	;# 
  2988  058C                     	;# 
  2989  058D                     	;# 
  2990  058E                     	;# 
  2991  058F                     	;# 
  2992  058F                     	;# 
  2993  0590                     	;# 
  2994  0591                     	;# 
  2995  0592                     	;# 
  2996  0593                     	;# 
  2997  059C                     	;# 
  2998  059C                     	;# 
  2999  059D                     	;# 
  3000  059D                     	;# 
  3001  059E                     	;# 
  3002  059F                     	;# 
  3003  060C                     	;# 
  3004  060C                     	;# 
  3005  060D                     	;# 
  3006  060D                     	;# 
  3007  060E                     	;# 
  3008  060F                     	;# 
  3009  0610                     	;# 
  3010  0611                     	;# 
  3011  0612                     	;# 
  3012  0613                     	;# 
  3013  0614                     	;# 
  3014  0616                     	;# 
  3015  0616                     	;# 
  3016  0617                     	;# 
  3017  0617                     	;# 
  3018  0618                     	;# 
  3019  0619                     	;# 
  3020  061A                     	;# 
  3021  061B                     	;# 
  3022  061C                     	;# 
  3023  061D                     	;# 
  3024  061E                     	;# 
  3025  070C                     	;# 
  3026  070D                     	;# 
  3027  070E                     	;# 
  3028  070F                     	;# 
  3029  0710                     	;# 
  3030  0711                     	;# 
  3031  0712                     	;# 
  3032  0713                     	;# 
  3033  0714                     	;# 
  3034  0716                     	;# 
  3035  0717                     	;# 
  3036  0718                     	;# 
  3037  0719                     	;# 
  3038  071A                     	;# 
  3039  071B                     	;# 
  3040  071C                     	;# 
  3041  071D                     	;# 
  3042  071E                     	;# 
  3043  0796                     	;# 
  3044  0797                     	;# 
  3045  0798                     	;# 
  3046  0799                     	;# 
  3047  079A                     	;# 
  3048  079B                     	;# 
  3049  079C                     	;# 
  3050  079D                     	;# 
  3051  080C                     	;# 
  3052  080D                     	;# 
  3053  080E                     	;# 
  3054  080F                     	;# 
  3055  0810                     	;# 
  3056  0811                     	;# 
  3057  0812                     	;# 
  3058  0813                     	;# 
  3059  0814                     	;# 
  3060  081A                     	;# 
  3061  081A                     	;# 
  3062  081B                     	;# 
  3063  081C                     	;# 
  3064  081C                     	;# 
  3065  081D                     	;# 
  3066  081E                     	;# 
  3067  081F                     	;# 
  3068  088C                     	;# 
  3069  088D                     	;# 
  3070  088E                     	;# 
  3071  088F                     	;# 
  3072  0890                     	;# 
  3073  0891                     	;# 
  3074  0892                     	;# 
  3075  0893                     	;# 
  3076  0895                     	;# 
  3077  0896                     	;# 
  3078  0897                     	;# 
  3079  0898                     	;# 
  3080  0899                     	;# 
  3081  089A                     	;# 
  3082  089B                     	;# 
  3083  090C                     	;# 
  3084  090E                     	;# 
  3085  090F                     	;# 
  3086  091F                     	;# 
  3087  098F                     	;# 
  3088  098F                     	;# 
  3089  0990                     	;# 
  3090  0991                     	;# 
  3091  0992                     	;# 
  3092  0993                     	;# 
  3093  0994                     	;# 
  3094  0995                     	;# 
  3095  0996                     	;# 
  3096  0997                     	;# 
  3097  1E0F                     	;# 
  3098  1E10                     	;# 
  3099  1E11                     	;# 
  3100  1E12                     	;# 
  3101  1E13                     	;# 
  3102  1E14                     	;# 
  3103  1E15                     	;# 
  3104  1E16                     	;# 
  3105  1E17                     	;# 
  3106  1E18                     	;# 
  3107  1E19                     	;# 
  3108  1E1A                     	;# 
  3109  1E1B                     	;# 
  3110  1E1C                     	;# 
  3111  1E1D                     	;# 
  3112  1E1E                     	;# 
  3113  1E1F                     	;# 
  3114  1E20                     	;# 
  3115  1E21                     	;# 
  3116  1E22                     	;# 
  3117  1E23                     	;# 
  3118  1E24                     	;# 
  3119  1E25                     	;# 
  3120  1E26                     	;# 
  3121  1E27                     	;# 
  3122  1E28                     	;# 
  3123  1E29                     	;# 
  3124  1E2A                     	;# 
  3125  1E2B                     	;# 
  3126  1E2C                     	;# 
  3127  1E2D                     	;# 
  3128  1E2E                     	;# 
  3129  1E2F                     	;# 
  3130  1E30                     	;# 
  3131  1E31                     	;# 
  3132  1E32                     	;# 
  3133  1E33                     	;# 
  3134  1E34                     	;# 
  3135  1E35                     	;# 
  3136  1E36                     	;# 
  3137  1E37                     	;# 
  3138  1E8F                     	;# 
  3139  1E90                     	;# 
  3140  1E91                     	;# 
  3141  1E92                     	;# 
  3142  1E93                     	;# 
  3143  1E94                     	;# 
  3144  1E95                     	;# 
  3145  1E96                     	;# 
  3146  1E97                     	;# 
  3147  1E9C                     	;# 
  3148  1E9D                     	;# 
  3149  1E9E                     	;# 
  3150  1EA1                     	;# 
  3151  1EA2                     	;# 
  3152  1EA3                     	;# 
  3153  1EA4                     	;# 
  3154  1EA9                     	;# 
  3155  1EAA                     	;# 
  3156  1EB1                     	;# 
  3157  1EB2                     	;# 
  3158  1EB8                     	;# 
  3159  1EB9                     	;# 
  3160  1EBA                     	;# 
  3161  1EBB                     	;# 
  3162  1EBC                     	;# 
  3163  1EBD                     	;# 
  3164  1EBE                     	;# 
  3165  1EC3                     	;# 
  3166  1EC5                     	;# 
  3167  1EC6                     	;# 
  3168  1EC7                     	;# 
  3169  1ECB                     	;# 
  3170  1ECB                     	;# 
  3171  1ECB                     	;# 
  3172  1ECC                     	;# 
  3173  1ECC                     	;# 
  3174  1ECC                     	;# 
  3175  1F10                     	;# 
  3176  1F11                     	;# 
  3177  1F12                     	;# 
  3178  1F14                     	;# 
  3179  1F15                     	;# 
  3180  1F1C                     	;# 
  3181  1F1D                     	;# 
  3182  1F1E                     	;# 
  3183  1F1F                     	;# 
  3184  1F20                     	;# 
  3185  1F21                     	;# 
  3186  1F22                     	;# 
  3187  1F23                     	;# 
  3188  1F24                     	;# 
  3189  1F25                     	;# 
  3190  1F26                     	;# 
  3191  1F27                     	;# 
  3192  1F38                     	;# 
  3193  1F39                     	;# 
  3194  1F3A                     	;# 
  3195  1F3B                     	;# 
  3196  1F3C                     	;# 
  3197  1F3D                     	;# 
  3198  1F3E                     	;# 
  3199  1F3F                     	;# 
  3200  1F43                     	;# 
  3201  1F44                     	;# 
  3202  1F45                     	;# 
  3203  1F46                     	;# 
  3204  1F47                     	;# 
  3205  1F48                     	;# 
  3206  1F49                     	;# 
  3207  1F4A                     	;# 
  3208  1F4E                     	;# 
  3209  1F4F                     	;# 
  3210  1F50                     	;# 
  3211  1F51                     	;# 
  3212  1F52                     	;# 
  3213  1F53                     	;# 
  3214  1F54                     	;# 
  3215  1F55                     	;# 
  3216  1FE4                     	;# 
  3217  1FE5                     	;# 
  3218  1FE6                     	;# 
  3219  1FE7                     	;# 
  3220  1FE8                     	;# 
  3221  1FE8                     	;# 
  3222  1FE9                     	;# 
  3223  1FEA                     	;# 
  3224  1FEB                     	;# 
  3225  1FED                     	;# 
  3226  1FEE                     	;# 
  3227  1FEF                     	;# 
  3228  0000                     	;# 
  3229  0001                     	;# 
  3230  0002                     	;# 
  3231  0003                     	;# 
  3232  0004                     	;# 
  3233  0005                     	;# 
  3234  0006                     	;# 
  3235  0007                     	;# 
  3236  0008                     	;# 
  3237  0009                     	;# 
  3238  000A                     	;# 
  3239  000B                     	;# 
  3240  000C                     	;# 
  3241  000D                     	;# 
  3242  000E                     	;# 
  3243  0012                     	;# 
  3244  0013                     	;# 
  3245  0014                     	;# 
  3246  0018                     	;# 
  3247  0019                     	;# 
  3248  001A                     	;# 
  3249  008C                     	;# 
  3250  008C                     	;# 
  3251  008D                     	;# 
  3252  008E                     	;# 
  3253  008E                     	;# 
  3254  008F                     	;# 
  3255  0090                     	;# 
  3256  0090                     	;# 
  3257  0091                     	;# 
  3258  0092                     	;# 
  3259  0092                     	;# 
  3260  0093                     	;# 
  3261  0094                     	;# 
  3262  0094                     	;# 
  3263  0095                     	;# 
  3264  0096                     	;# 
  3265  0096                     	;# 
  3266  0097                     	;# 
  3267  0098                     	;# 
  3268  0099                     	;# 
  3269  009A                     	;# 
  3270  009B                     	;# 
  3271  009B                     	;# 
  3272  009C                     	;# 
  3273  009D                     	;# 
  3274  009D                     	;# 
  3275  009E                     	;# 
  3276  009F                     	;# 
  3277  010C                     	;# 
  3278  010C                     	;# 
  3279  010D                     	;# 
  3280  010E                     	;# 
  3281  010F                     	;# 
  3282  010F                     	;# 
  3283  0110                     	;# 
  3284  0111                     	;# 
  3285  0112                     	;# 
  3286  0113                     	;# 
  3287  0114                     	;# 
  3288  0115                     	;# 
  3289  0116                     	;# 
  3290  0117                     	;# 
  3291  0118                     	;# 
  3292  0119                     	;# 
  3293  0119                     	;# 
  3294  0119                     	;# 
  3295  011A                     	;# 
  3296  011A                     	;# 
  3297  011A                     	;# 
  3298  011B                     	;# 
  3299  011B                     	;# 
  3300  011B                     	;# 
  3301  011B                     	;# 
  3302  011B                     	;# 
  3303  011C                     	;# 
  3304  011C                     	;# 
  3305  011C                     	;# 
  3306  011D                     	;# 
  3307  011D                     	;# 
  3308  011D                     	;# 
  3309  011E                     	;# 
  3310  011E                     	;# 
  3311  011E                     	;# 
  3312  011F                     	;# 
  3313  011F                     	;# 
  3314  011F                     	;# 
  3315  011F                     	;# 
  3316  011F                     	;# 
  3317  018C                     	;# 
  3318  018D                     	;# 
  3319  018E                     	;# 
  3320  018F                     	;# 
  3321  0190                     	;# 
  3322  0191                     	;# 
  3323  0192                     	;# 
  3324  020C                     	;# 
  3325  020D                     	;# 
  3326  020E                     	;# 
  3327  020E                     	;# 
  3328  020F                     	;# 
  3329  020F                     	;# 
  3330  0210                     	;# 
  3331  0210                     	;# 
  3332  0211                     	;# 
  3333  0211                     	;# 
  3334  0212                     	;# 
  3335  0213                     	;# 
  3336  0214                     	;# 
  3337  0214                     	;# 
  3338  0215                     	;# 
  3339  0215                     	;# 
  3340  0216                     	;# 
  3341  0216                     	;# 
  3342  0217                     	;# 
  3343  0217                     	;# 
  3344  0218                     	;# 
  3345  0219                     	;# 
  3346  021A                     	;# 
  3347  021A                     	;# 
  3348  021B                     	;# 
  3349  021B                     	;# 
  3350  021C                     	;# 
  3351  021C                     	;# 
  3352  021D                     	;# 
  3353  021D                     	;# 
  3354  021E                     	;# 
  3355  021F                     	;# 
  3356  028C                     	;# 
  3357  028C                     	;# 
  3358  028D                     	;# 
  3359  028D                     	;# 
  3360  028E                     	;# 
  3361  028F                     	;# 
  3362  0290                     	;# 
  3363  0291                     	;# 
  3364  0292                     	;# 
  3365  0292                     	;# 
  3366  0293                     	;# 
  3367  0293                     	;# 
  3368  0294                     	;# 
  3369  0295                     	;# 
  3370  0296                     	;# 
  3371  0297                     	;# 
  3372  0298                     	;# 
  3373  0298                     	;# 
  3374  0299                     	;# 
  3375  0299                     	;# 
  3376  029A                     	;# 
  3377  029B                     	;# 
  3378  029C                     	;# 
  3379  029D                     	;# 
  3380  029F                     	;# 
  3381  030C                     	;# 
  3382  030C                     	;# 
  3383  030D                     	;# 
  3384  030E                     	;# 
  3385  030F                     	;# 
  3386  0310                     	;# 
  3387  0310                     	;# 
  3388  0311                     	;# 
  3389  0312                     	;# 
  3390  0313                     	;# 
  3391  0314                     	;# 
  3392  0314                     	;# 
  3393  0315                     	;# 
  3394  0316                     	;# 
  3395  0317                     	;# 
  3396  0318                     	;# 
  3397  0318                     	;# 
  3398  0319                     	;# 
  3399  031A                     	;# 
  3400  031B                     	;# 
  3401  038C                     	;# 
  3402  038C                     	;# 
  3403  038D                     	;# 
  3404  038E                     	;# 
  3405  0390                     	;# 
  3406  0390                     	;# 
  3407  0391                     	;# 
  3408  0392                     	;# 
  3409  048C                     	;# 
  3410  048C                     	;# 
  3411  048D                     	;# 
  3412  048E                     	;# 
  3413  048F                     	;# 
  3414  048F                     	;# 
  3415  0490                     	;# 
  3416  0491                     	;# 
  3417  0492                     	;# 
  3418  0492                     	;# 
  3419  0493                     	;# 
  3420  0494                     	;# 
  3421  0495                     	;# 
  3422  0495                     	;# 
  3423  0496                     	;# 
  3424  0497                     	;# 
  3425  0498                     	;# 
  3426  0499                     	;# 
  3427  049A                     	;# 
  3428  049B                     	;# 
  3429  049C                     	;# 
  3430  049D                     	;# 
  3431  058C                     	;# 
  3432  058C                     	;# 
  3433  058D                     	;# 
  3434  058E                     	;# 
  3435  058F                     	;# 
  3436  058F                     	;# 
  3437  0590                     	;# 
  3438  0591                     	;# 
  3439  0592                     	;# 
  3440  0593                     	;# 
  3441  059C                     	;# 
  3442  059C                     	;# 
  3443  059D                     	;# 
  3444  059D                     	;# 
  3445  059E                     	;# 
  3446  059F                     	;# 
  3447  060C                     	;# 
  3448  060C                     	;# 
  3449  060D                     	;# 
  3450  060D                     	;# 
  3451  060E                     	;# 
  3452  060F                     	;# 
  3453  0610                     	;# 
  3454  0611                     	;# 
  3455  0612                     	;# 
  3456  0613                     	;# 
  3457  0614                     	;# 
  3458  0616                     	;# 
  3459  0616                     	;# 
  3460  0617                     	;# 
  3461  0617                     	;# 
  3462  0618                     	;# 
  3463  0619                     	;# 
  3464  061A                     	;# 
  3465  061B                     	;# 
  3466  061C                     	;# 
  3467  061D                     	;# 
  3468  061E                     	;# 
  3469  070C                     	;# 
  3470  070D                     	;# 
  3471  070E                     	;# 
  3472  070F                     	;# 
  3473  0710                     	;# 
  3474  0711                     	;# 
  3475  0712                     	;# 
  3476  0713                     	;# 
  3477  0714                     	;# 
  3478  0716                     	;# 
  3479  0717                     	;# 
  3480  0718                     	;# 
  3481  0719                     	;# 
  3482  071A                     	;# 
  3483  071B                     	;# 
  3484  071C                     	;# 
  3485  071D                     	;# 
  3486  071E                     	;# 
  3487  0796                     	;# 
  3488  0797                     	;# 
  3489  0798                     	;# 
  3490  0799                     	;# 
  3491  079A                     	;# 
  3492  079B                     	;# 
  3493  079C                     	;# 
  3494  079D                     	;# 
  3495  080C                     	;# 
  3496  080D                     	;# 
  3497  080E                     	;# 
  3498  080F                     	;# 
  3499  0810                     	;# 
  3500  0811                     	;# 
  3501  0812                     	;# 
  3502  0813                     	;# 
  3503  0814                     	;# 
  3504  081A                     	;# 
  3505  081A                     	;# 
  3506  081B                     	;# 
  3507  081C                     	;# 
  3508  081C                     	;# 
  3509  081D                     	;# 
  3510  081E                     	;# 
  3511  081F                     	;# 
  3512  088C                     	;# 
  3513  088D                     	;# 
  3514  088E                     	;# 
  3515  088F                     	;# 
  3516  0890                     	;# 
  3517  0891                     	;# 
  3518  0892                     	;# 
  3519  0893                     	;# 
  3520  0895                     	;# 
  3521  0896                     	;# 
  3522  0897                     	;# 
  3523  0898                     	;# 
  3524  0899                     	;# 
  3525  089A                     	;# 
  3526  089B                     	;# 
  3527  090C                     	;# 
  3528  090E                     	;# 
  3529  090F                     	;# 
  3530  091F                     	;# 
  3531  098F                     	;# 
  3532  098F                     	;# 
  3533  0990                     	;# 
  3534  0991                     	;# 
  3535  0992                     	;# 
  3536  0993                     	;# 
  3537  0994                     	;# 
  3538  0995                     	;# 
  3539  0996                     	;# 
  3540  0997                     	;# 
  3541  1E0F                     	;# 
  3542  1E10                     	;# 
  3543  1E11                     	;# 
  3544  1E12                     	;# 
  3545  1E13                     	;# 
  3546  1E14                     	;# 
  3547  1E15                     	;# 
  3548  1E16                     	;# 
  3549  1E17                     	;# 
  3550  1E18                     	;# 
  3551  1E19                     	;# 
  3552  1E1A                     	;# 
  3553  1E1B                     	;# 
  3554  1E1C                     	;# 
  3555  1E1D                     	;# 
  3556  1E1E                     	;# 
  3557  1E1F                     	;# 
  3558  1E20                     	;# 
  3559  1E21                     	;# 
  3560  1E22                     	;# 
  3561  1E23                     	;# 
  3562  1E24                     	;# 
  3563  1E25                     	;# 
  3564  1E26                     	;# 
  3565  1E27                     	;# 
  3566  1E28                     	;# 
  3567  1E29                     	;# 
  3568  1E2A                     	;# 
  3569  1E2B                     	;# 
  3570  1E2C                     	;# 
  3571  1E2D                     	;# 
  3572  1E2E                     	;# 
  3573  1E2F                     	;# 
  3574  1E30                     	;# 
  3575  1E31                     	;# 
  3576  1E32                     	;# 
  3577  1E33                     	;# 
  3578  1E34                     	;# 
  3579  1E35                     	;# 
  3580  1E36                     	;# 
  3581  1E37                     	;# 
  3582  1E8F                     	;# 
  3583  1E90                     	;# 
  3584  1E91                     	;# 
  3585  1E92                     	;# 
  3586  1E93                     	;# 
  3587  1E94                     	;# 
  3588  1E95                     	;# 
  3589  1E96                     	;# 
  3590  1E97                     	;# 
  3591  1E9C                     	;# 
  3592  1E9D                     	;# 
  3593  1E9E                     	;# 
  3594  1EA1                     	;# 
  3595  1EA2                     	;# 
  3596  1EA3                     	;# 
  3597  1EA4                     	;# 
  3598  1EA9                     	;# 
  3599  1EAA                     	;# 
  3600  1EB1                     	;# 
  3601  1EB2                     	;# 
  3602  1EB8                     	;# 
  3603  1EB9                     	;# 
  3604  1EBA                     	;# 
  3605  1EBB                     	;# 
  3606  1EBC                     	;# 
  3607  1EBD                     	;# 
  3608  1EBE                     	;# 
  3609  1EC3                     	;# 
  3610  1EC5                     	;# 
  3611  1EC6                     	;# 
  3612  1EC7                     	;# 
  3613  1ECB                     	;# 
  3614  1ECB                     	;# 
  3615  1ECB                     	;# 
  3616  1ECC                     	;# 
  3617  1ECC                     	;# 
  3618  1ECC                     	;# 
  3619  1F10                     	;# 
  3620  1F11                     	;# 
  3621  1F12                     	;# 
  3622  1F14                     	;# 
  3623  1F15                     	;# 
  3624  1F1C                     	;# 
  3625  1F1D                     	;# 
  3626  1F1E                     	;# 
  3627  1F1F                     	;# 
  3628  1F20                     	;# 
  3629  1F21                     	;# 
  3630  1F22                     	;# 
  3631  1F23                     	;# 
  3632  1F24                     	;# 
  3633  1F25                     	;# 
  3634  1F26                     	;# 
  3635  1F27                     	;# 
  3636  1F38                     	;# 
  3637  1F39                     	;# 
  3638  1F3A                     	;# 
  3639  1F3B                     	;# 
  3640  1F3C                     	;# 
  3641  1F3D                     	;# 
  3642  1F3E                     	;# 
  3643  1F3F                     	;# 
  3644  1F43                     	;# 
  3645  1F44                     	;# 
  3646  1F45                     	;# 
  3647  1F46                     	;# 
  3648  1F47                     	;# 
  3649  1F48                     	;# 
  3650  1F49                     	;# 
  3651  1F4A                     	;# 
  3652  1F4E                     	;# 
  3653  1F4F                     	;# 
  3654  1F50                     	;# 
  3655  1F51                     	;# 
  3656  1F52                     	;# 
  3657  1F53                     	;# 
  3658  1F54                     	;# 
  3659  1F55                     	;# 
  3660  1FE4                     	;# 
  3661  1FE5                     	;# 
  3662  1FE6                     	;# 
  3663  1FE7                     	;# 
  3664  1FE8                     	;# 
  3665  1FE8                     	;# 
  3666  1FE9                     	;# 
  3667  1FEA                     	;# 
  3668  1FEB                     	;# 
  3669  1FED                     	;# 
  3670  1FEE                     	;# 
  3671  1FEF                     	;# 
  3672  0000                     	;# 
  3673  0001                     	;# 
  3674  0002                     	;# 
  3675  0003                     	;# 
  3676  0004                     	;# 
  3677  0005                     	;# 
  3678  0006                     	;# 
  3679  0007                     	;# 
  3680  0008                     	;# 
  3681  0009                     	;# 
  3682  000A                     	;# 
  3683  000B                     	;# 
  3684  000C                     	;# 
  3685  000D                     	;# 
  3686  000E                     	;# 
  3687  0012                     	;# 
  3688  0013                     	;# 
  3689  0014                     	;# 
  3690  0018                     	;# 
  3691  0019                     	;# 
  3692  001A                     	;# 
  3693  008C                     	;# 
  3694  008C                     	;# 
  3695  008D                     	;# 
  3696  008E                     	;# 
  3697  008E                     	;# 
  3698  008F                     	;# 
  3699  0090                     	;# 
  3700  0090                     	;# 
  3701  0091                     	;# 
  3702  0092                     	;# 
  3703  0092                     	;# 
  3704  0093                     	;# 
  3705  0094                     	;# 
  3706  0094                     	;# 
  3707  0095                     	;# 
  3708  0096                     	;# 
  3709  0096                     	;# 
  3710  0097                     	;# 
  3711  0098                     	;# 
  3712  0099                     	;# 
  3713  009A                     	;# 
  3714  009B                     	;# 
  3715  009B                     	;# 
  3716  009C                     	;# 
  3717  009D                     	;# 
  3718  009D                     	;# 
  3719  009E                     	;# 
  3720  009F                     	;# 
  3721  010C                     	;# 
  3722  010C                     	;# 
  3723  010D                     	;# 
  3724  010E                     	;# 
  3725  010F                     	;# 
  3726  010F                     	;# 
  3727  0110                     	;# 
  3728  0111                     	;# 
  3729  0112                     	;# 
  3730  0113                     	;# 
  3731  0114                     	;# 
  3732  0115                     	;# 
  3733  0116                     	;# 
  3734  0117                     	;# 
  3735  0118                     	;# 
  3736  0119                     	;# 
  3737  0119                     	;# 
  3738  0119                     	;# 
  3739  011A                     	;# 
  3740  011A                     	;# 
  3741  011A                     	;# 
  3742  011B                     	;# 
  3743  011B                     	;# 
  3744  011B                     	;# 
  3745  011B                     	;# 
  3746  011B                     	;# 
  3747  011C                     	;# 
  3748  011C                     	;# 
  3749  011C                     	;# 
  3750  011D                     	;# 
  3751  011D                     	;# 
  3752  011D                     	;# 
  3753  011E                     	;# 
  3754  011E                     	;# 
  3755  011E                     	;# 
  3756  011F                     	;# 
  3757  011F                     	;# 
  3758  011F                     	;# 
  3759  011F                     	;# 
  3760  011F                     	;# 
  3761  018C                     	;# 
  3762  018D                     	;# 
  3763  018E                     	;# 
  3764  018F                     	;# 
  3765  0190                     	;# 
  3766  0191                     	;# 
  3767  0192                     	;# 
  3768  020C                     	;# 
  3769  020D                     	;# 
  3770  020E                     	;# 
  3771  020E                     	;# 
  3772  020F                     	;# 
  3773  020F                     	;# 
  3774  0210                     	;# 
  3775  0210                     	;# 
  3776  0211                     	;# 
  3777  0211                     	;# 
  3778  0212                     	;# 
  3779  0213                     	;# 
  3780  0214                     	;# 
  3781  0214                     	;# 
  3782  0215                     	;# 
  3783  0215                     	;# 
  3784  0216                     	;# 
  3785  0216                     	;# 
  3786  0217                     	;# 
  3787  0217                     	;# 
  3788  0218                     	;# 
  3789  0219                     	;# 
  3790  021A                     	;# 
  3791  021A                     	;# 
  3792  021B                     	;# 
  3793  021B                     	;# 
  3794  021C                     	;# 
  3795  021C                     	;# 
  3796  021D                     	;# 
  3797  021D                     	;# 
  3798  021E                     	;# 
  3799  021F                     	;# 
  3800  028C                     	;# 
  3801  028C                     	;# 
  3802  028D                     	;# 
  3803  028D                     	;# 
  3804  028E                     	;# 
  3805  028F                     	;# 
  3806  0290                     	;# 
  3807  0291                     	;# 
  3808  0292                     	;# 
  3809  0292                     	;# 
  3810  0293                     	;# 
  3811  0293                     	;# 
  3812  0294                     	;# 
  3813  0295                     	;# 
  3814  0296                     	;# 
  3815  0297                     	;# 
  3816  0298                     	;# 
  3817  0298                     	;# 
  3818  0299                     	;# 
  3819  0299                     	;# 
  3820  029A                     	;# 
  3821  029B                     	;# 
  3822  029C                     	;# 
  3823  029D                     	;# 
  3824  029F                     	;# 
  3825  030C                     	;# 
  3826  030C                     	;# 
  3827  030D                     	;# 
  3828  030E                     	;# 
  3829  030F                     	;# 
  3830  0310                     	;# 
  3831  0310                     	;# 
  3832  0311                     	;# 
  3833  0312                     	;# 
  3834  0313                     	;# 
  3835  0314                     	;# 
  3836  0314                     	;# 
  3837  0315                     	;# 
  3838  0316                     	;# 
  3839  0317                     	;# 
  3840  0318                     	;# 
  3841  0318                     	;# 
  3842  0319                     	;# 
  3843  031A                     	;# 
  3844  031B                     	;# 
  3845  038C                     	;# 
  3846  038C                     	;# 
  3847  038D                     	;# 
  3848  038E                     	;# 
  3849  0390                     	;# 
  3850  0390                     	;# 
  3851  0391                     	;# 
  3852  0392                     	;# 
  3853  048C                     	;# 
  3854  048C                     	;# 
  3855  048D                     	;# 
  3856  048E                     	;# 
  3857  048F                     	;# 
  3858  048F                     	;# 
  3859  0490                     	;# 
  3860  0491                     	;# 
  3861  0492                     	;# 
  3862  0492                     	;# 
  3863  0493                     	;# 
  3864  0494                     	;# 
  3865  0495                     	;# 
  3866  0495                     	;# 
  3867  0496                     	;# 
  3868  0497                     	;# 
  3869  0498                     	;# 
  3870  0499                     	;# 
  3871  049A                     	;# 
  3872  049B                     	;# 
  3873  049C                     	;# 
  3874  049D                     	;# 
  3875  058C                     	;# 
  3876  058C                     	;# 
  3877  058D                     	;# 
  3878  058E                     	;# 
  3879  058F                     	;# 
  3880  058F                     	;# 
  3881  0590                     	;# 
  3882  0591                     	;# 
  3883  0592                     	;# 
  3884  0593                     	;# 
  3885  059C                     	;# 
  3886  059C                     	;# 
  3887  059D                     	;# 
  3888  059D                     	;# 
  3889  059E                     	;# 
  3890  059F                     	;# 
  3891  060C                     	;# 
  3892  060C                     	;# 
  3893  060D                     	;# 
  3894  060D                     	;# 
  3895  060E                     	;# 
  3896  060F                     	;# 
  3897  0610                     	;# 
  3898  0611                     	;# 
  3899  0612                     	;# 
  3900  0613                     	;# 
  3901  0614                     	;# 
  3902  0616                     	;# 
  3903  0616                     	;# 
  3904  0617                     	;# 
  3905  0617                     	;# 
  3906  0618                     	;# 
  3907  0619                     	;# 
  3908  061A                     	;# 
  3909  061B                     	;# 
  3910  061C                     	;# 
  3911  061D                     	;# 
  3912  061E                     	;# 
  3913  070C                     	;# 
  3914  070D                     	;# 
  3915  070E                     	;# 
  3916  070F                     	;# 
  3917  0710                     	;# 
  3918  0711                     	;# 
  3919  0712                     	;# 
  3920  0713                     	;# 
  3921  0714                     	;# 
  3922  0716                     	;# 
  3923  0717                     	;# 
  3924  0718                     	;# 
  3925  0719                     	;# 
  3926  071A                     	;# 
  3927  071B                     	;# 
  3928  071C                     	;# 
  3929  071D                     	;# 
  3930  071E                     	;# 
  3931  0796                     	;# 
  3932  0797                     	;# 
  3933  0798                     	;# 
  3934  0799                     	;# 
  3935  079A                     	;# 
  3936  079B                     	;# 
  3937  079C                     	;# 
  3938  079D                     	;# 
  3939  080C                     	;# 
  3940  080D                     	;# 
  3941  080E                     	;# 
  3942  080F                     	;# 
  3943  0810                     	;# 
  3944  0811                     	;# 
  3945  0812                     	;# 
  3946  0813                     	;# 
  3947  0814                     	;# 
  3948  081A                     	;# 
  3949  081A                     	;# 
  3950  081B                     	;# 
  3951  081C                     	;# 
  3952  081C                     	;# 
  3953  081D                     	;# 
  3954  081E                     	;# 
  3955  081F                     	;# 
  3956  088C                     	;# 
  3957  088D                     	;# 
  3958  088E                     	;# 
  3959  088F                     	;# 
  3960  0890                     	;# 
  3961  0891                     	;# 
  3962  0892                     	;# 
  3963  0893                     	;# 
  3964  0895                     	;# 
  3965  0896                     	;# 
  3966  0897                     	;# 
  3967  0898                     	;# 
  3968  0899                     	;# 
  3969  089A                     	;# 
  3970  089B                     	;# 
  3971  090C                     	;# 
  3972  090E                     	;# 
  3973  090F                     	;# 
  3974  091F                     	;# 
  3975  098F                     	;# 
  3976  098F                     	;# 
  3977  0990                     	;# 
  3978  0991                     	;# 
  3979  0992                     	;# 
  3980  0993                     	;# 
  3981  0994                     	;# 
  3982  0995                     	;# 
  3983  0996                     	;# 
  3984  0997                     	;# 
  3985  1E0F                     	;# 
  3986  1E10                     	;# 
  3987  1E11                     	;# 
  3988  1E12                     	;# 
  3989  1E13                     	;# 
  3990  1E14                     	;# 
  3991  1E15                     	;# 
  3992  1E16                     	;# 
  3993  1E17                     	;# 
  3994  1E18                     	;# 
  3995  1E19                     	;# 
  3996  1E1A                     	;# 
  3997  1E1B                     	;# 
  3998  1E1C                     	;# 
  3999  1E1D                     	;# 
  4000  1E1E                     	;# 
  4001  1E1F                     	;# 
  4002  1E20                     	;# 
  4003  1E21                     	;# 
  4004  1E22                     	;# 
  4005  1E23                     	;# 
  4006  1E24                     	;# 
  4007  1E25                     	;# 
  4008  1E26                     	;# 
  4009  1E27                     	;# 
  4010  1E28                     	;# 
  4011  1E29                     	;# 
  4012  1E2A                     	;# 
  4013  1E2B                     	;# 
  4014  1E2C                     	;# 
  4015  1E2D                     	;# 
  4016  1E2E                     	;# 
  4017  1E2F                     	;# 
  4018  1E30                     	;# 
  4019  1E31                     	;# 
  4020  1E32                     	;# 
  4021  1E33                     	;# 
  4022  1E34                     	;# 
  4023  1E35                     	;# 
  4024  1E36                     	;# 
  4025  1E37                     	;# 
  4026  1E8F                     	;# 
  4027  1E90                     	;# 
  4028  1E91                     	;# 
  4029  1E92                     	;# 
  4030  1E93                     	;# 
  4031  1E94                     	;# 
  4032  1E95                     	;# 
  4033  1E96                     	;# 
  4034  1E97                     	;# 
  4035  1E9C                     	;# 
  4036  1E9D                     	;# 
  4037  1E9E                     	;# 
  4038  1EA1                     	;# 
  4039  1EA2                     	;# 
  4040  1EA3                     	;# 
  4041  1EA4                     	;# 
  4042  1EA9                     	;# 
  4043  1EAA                     	;# 
  4044  1EB1                     	;# 
  4045  1EB2                     	;# 
  4046  1EB8                     	;# 
  4047  1EB9                     	;# 
  4048  1EBA                     	;# 
  4049  1EBB                     	;# 
  4050  1EBC                     	;# 
  4051  1EBD                     	;# 
  4052  1EBE                     	;# 
  4053  1EC3                     	;# 
  4054  1EC5                     	;# 
  4055  1EC6                     	;# 
  4056  1EC7                     	;# 
  4057  1ECB                     	;# 
  4058  1ECB                     	;# 
  4059  1ECB                     	;# 
  4060  1ECC                     	;# 
  4061  1ECC                     	;# 
  4062  1ECC                     	;# 
  4063  1F10                     	;# 
  4064  1F11                     	;# 
  4065  1F12                     	;# 
  4066  1F14                     	;# 
  4067  1F15                     	;# 
  4068  1F1C                     	;# 
  4069  1F1D                     	;# 
  4070  1F1E                     	;# 
  4071  1F1F                     	;# 
  4072  1F20                     	;# 
  4073  1F21                     	;# 
  4074  1F22                     	;# 
  4075  1F23                     	;# 
  4076  1F24                     	;# 
  4077  1F25                     	;# 
  4078  1F26                     	;# 
  4079  1F27                     	;# 
  4080  1F38                     	;# 
  4081  1F39                     	;# 
  4082  1F3A                     	;# 
  4083  1F3B                     	;# 
  4084  1F3C                     	;# 
  4085  1F3D                     	;# 
  4086  1F3E                     	;# 
  4087  1F3F                     	;# 
  4088  1F43                     	;# 
  4089  1F44                     	;# 
  4090  1F45                     	;# 
  4091  1F46                     	;# 
  4092  1F47                     	;# 
  4093  1F48                     	;# 
  4094  1F49                     	;# 
  4095  1F4A                     	;# 
  4096  1F4E                     	;# 
  4097  1F4F                     	;# 
  4098  1F50                     	;# 
  4099  1F51                     	;# 
  4100  1F52                     	;# 
  4101  1F53                     	;# 
  4102  1F54                     	;# 
  4103  1F55                     	;# 
  4104  1FE4                     	;# 
  4105  1FE5                     	;# 
  4106  1FE6                     	;# 
  4107  1FE7                     	;# 
  4108  1FE8                     	;# 
  4109  1FE8                     	;# 
  4110  1FE9                     	;# 
  4111  1FEA                     	;# 
  4112  1FEB                     	;# 
  4113  1FED                     	;# 
  4114  1FEE                     	;# 
  4115  1FEF                     	;# 
  4116                           
  4117                           	psect	eeprom_data
  4118  0000  0001 0052 0001 0003 0000 0004 0002 0006 	db	1,82,1,3,0,4,2,6	;# 
  4119  0008  0000 0052 0005 0007 0001 0000 0002 0004 	db	0,82,5,7,1,0,2,4	;# 
  4120  0010  0000 0052 0005 0007 0001 0000 0001 0005 	db	0,82,5,7,1,0,1,5	;# 
  4121  0018  0000 0052 0005 0002 0003 0002 0009 0009 	db	0,82,5,2,3,2,9,9	;# 
  4122  0020  0000 0052 0004 0005 0006 0009 0000 0003 	db	0,82,4,5,6,9,0,3	;# 
  4123  0028  0000 0052 0004 0000 0009 0004 0002 0000 	db	0,82,4,0,9,4,2,0	;# 
  4124  0030  0000 0052 0003 0003 0007 0001 0008 0007 	db	0,82,3,3,7,1,8,7	;# 
  4125  0038  0000 0052 0004 0000 0009 0004 0003 0001 	db	0,82,4,0,9,4,3,1	;# 
  4126  0040  0001 0052 0000 0004 0008 0005 0009 0006 	db	1,82,0,4,8,5,9,6	;# 
  4127  0048  000A 0052 0002 0007 0005 0003 0004 0009 	db	10,82,2,7,5,3,4,9	;# 
  4128  0050  0000 0052 0004 0005 0006 0009 0001 0004 	db	0,82,4,5,6,9,1,4	;# 
  4129  0058  0000 0052 0005 0002 0003 0003 0000 0007 	db	0,82,5,2,3,3,0,7	;# 
  4130  0060  0000 0052 0005 0007 0001 0000 0004 0006 	db	0,82,5,7,1,0,4,6	;# 
  4131  0068  0001 0052 0001 0003 0000 0002 0003 0008 	db	1,82,1,3,0,2,3,8	;# 
  4132  0070  0001 0052 0000 0004 0008 0005 0009 0006 	db	1,82,0,4,8,5,9,6	;# 
  4133  0000                     	;# 
  4134  0001                     	;# 
  4135  0002                     	;# 
  4136  0003                     	;# 
  4137  0004                     	;# 
  4138  0005                     	;# 
  4139  0006                     	;# 
  4140  0007                     	;# 
  4141  0008                     	;# 
  4142  0009                     	;# 
  4143  000A                     	;# 
  4144  000B                     	;# 
  4145  000C                     	;# 
  4146  000D                     	;# 
  4147  000E                     	;# 
  4148  0012                     	;# 
  4149  0013                     	;# 
  4150  0014                     	;# 
  4151  0018                     	;# 
  4152  0019                     	;# 
  4153  001A                     	;# 
  4154  008C                     	;# 
  4155  008C                     	;# 
  4156  008D                     	;# 
  4157  008E                     	;# 
  4158  008E                     	;# 
  4159  008F                     	;# 
  4160  0090                     	;# 
  4161  0090                     	;# 
  4162  0091                     	;# 
  4163  0092                     	;# 
  4164  0092                     	;# 
  4165  0093                     	;# 
  4166  0094                     	;# 
  4167  0094                     	;# 
  4168  0095                     	;# 
  4169  0096                     	;# 
  4170  0096                     	;# 
  4171  0097                     	;# 
  4172  0098                     	;# 
  4173  0099                     	;# 
  4174  009A                     	;# 
  4175  009B                     	;# 
  4176  009B                     	;# 
  4177  009C                     	;# 
  4178  009D                     	;# 
  4179  009D                     	;# 
  4180  009E                     	;# 
  4181  009F                     	;# 
  4182  010C                     	;# 
  4183  010C                     	;# 
  4184  010D                     	;# 
  4185  010E                     	;# 
  4186  010F                     	;# 
  4187  010F                     	;# 
  4188  0110                     	;# 
  4189  0111                     	;# 
  4190  0112                     	;# 
  4191  0113                     	;# 
  4192  0114                     	;# 
  4193  0115                     	;# 
  4194  0116                     	;# 
  4195  0117                     	;# 
  4196  0118                     	;# 
  4197  0119                     	;# 
  4198  0119                     	;# 
  4199  0119                     	;# 
  4200  011A                     	;# 
  4201  011A                     	;# 
  4202  011A                     	;# 
  4203  011B                     	;# 
  4204  011B                     	;# 
  4205  011B                     	;# 
  4206  011B                     	;# 
  4207  011B                     	;# 
  4208  011C                     	;# 
  4209  011C                     	;# 
  4210  011C                     	;# 
  4211  011D                     	;# 
  4212  011D                     	;# 
  4213  011D                     	;# 
  4214  011E                     	;# 
  4215  011E                     	;# 
  4216  011E                     	;# 
  4217  011F                     	;# 
  4218  011F                     	;# 
  4219  011F                     	;# 
  4220  011F                     	;# 
  4221  011F                     	;# 
  4222  018C                     	;# 
  4223  018D                     	;# 
  4224  018E                     	;# 
  4225  018F                     	;# 
  4226  0190                     	;# 
  4227  0191                     	;# 
  4228  0192                     	;# 
  4229  020C                     	;# 
  4230  020D                     	;# 
  4231  020E                     	;# 
  4232  020E                     	;# 
  4233  020F                     	;# 
  4234  020F                     	;# 
  4235  0210                     	;# 
  4236  0210                     	;# 
  4237  0211                     	;# 
  4238  0211                     	;# 
  4239  0212                     	;# 
  4240  0213                     	;# 
  4241  0214                     	;# 
  4242  0214                     	;# 
  4243  0215                     	;# 
  4244  0215                     	;# 
  4245  0216                     	;# 
  4246  0216                     	;# 
  4247  0217                     	;# 
  4248  0217                     	;# 
  4249  0218                     	;# 
  4250  0219                     	;# 
  4251  021A                     	;# 
  4252  021A                     	;# 
  4253  021B                     	;# 
  4254  021B                     	;# 
  4255  021C                     	;# 
  4256  021C                     	;# 
  4257  021D                     	;# 
  4258  021D                     	;# 
  4259  021E                     	;# 
  4260  021F                     	;# 
  4261  028C                     	;# 
  4262  028C                     	;# 
  4263  028D                     	;# 
  4264  028D                     	;# 
  4265  028E                     	;# 
  4266  028F                     	;# 
  4267  0290                     	;# 
  4268  0291                     	;# 
  4269  0292                     	;# 
  4270  0292                     	;# 
  4271  0293                     	;# 
  4272  0293                     	;# 
  4273  0294                     	;# 
  4274  0295                     	;# 
  4275  0296                     	;# 
  4276  0297                     	;# 
  4277  0298                     	;# 
  4278  0298                     	;# 
  4279  0299                     	;# 
  4280  0299                     	;# 
  4281  029A                     	;# 
  4282  029B                     	;# 
  4283  029C                     	;# 
  4284  029D                     	;# 
  4285  029F                     	;# 
  4286  030C                     	;# 
  4287  030C                     	;# 
  4288  030D                     	;# 
  4289  030E                     	;# 
  4290  030F                     	;# 
  4291  0310                     	;# 
  4292  0310                     	;# 
  4293  0311                     	;# 
  4294  0312                     	;# 
  4295  0313                     	;# 
  4296  0314                     	;# 
  4297  0314                     	;# 
  4298  0315                     	;# 
  4299  0316                     	;# 
  4300  0317                     	;# 
  4301  0318                     	;# 
  4302  0318                     	;# 
  4303  0319                     	;# 
  4304  031A                     	;# 
  4305  031B                     	;# 
  4306  038C                     	;# 
  4307  038C                     	;# 
  4308  038D                     	;# 
  4309  038E                     	;# 
  4310  0390                     	;# 
  4311  0390                     	;# 
  4312  0391                     	;# 
  4313  0392                     	;# 
  4314  048C                     	;# 
  4315  048C                     	;# 
  4316  048D                     	;# 
  4317  048E                     	;# 
  4318  048F                     	;# 
  4319  048F                     	;# 
  4320  0490                     	;# 
  4321  0491                     	;# 
  4322  0492                     	;# 
  4323  0492                     	;# 
  4324  0493                     	;# 
  4325  0494                     	;# 
  4326  0495                     	;# 
  4327  0495                     	;# 
  4328  0496                     	;# 
  4329  0497                     	;# 
  4330  0498                     	;# 
  4331  0499                     	;# 
  4332  049A                     	;# 
  4333  049B                     	;# 
  4334  049C                     	;# 
  4335  049D                     	;# 
  4336  058C                     	;# 
  4337  058C                     	;# 
  4338  058D                     	;# 
  4339  058E                     	;# 
  4340  058F                     	;# 
  4341  058F                     	;# 
  4342  0590                     	;# 
  4343  0591                     	;# 
  4344  0592                     	;# 
  4345  0593                     	;# 
  4346  059C                     	;# 
  4347  059C                     	;# 
  4348  059D                     	;# 
  4349  059D                     	;# 
  4350  059E                     	;# 
  4351  059F                     	;# 
  4352  060C                     	;# 
  4353  060C                     	;# 
  4354  060D                     	;# 
  4355  060D                     	;# 
  4356  060E                     	;# 
  4357  060F                     	;# 
  4358  0610                     	;# 
  4359  0611                     	;# 
  4360  0612                     	;# 
  4361  0613                     	;# 
  4362  0614                     	;# 
  4363  0616                     	;# 
  4364  0616                     	;# 
  4365  0617                     	;# 
  4366  0617                     	;# 
  4367  0618                     	;# 
  4368  0619                     	;# 
  4369  061A                     	;# 
  4370  061B                     	;# 
  4371  061C                     	;# 
  4372  061D                     	;# 
  4373  061E                     	;# 
  4374  070C                     	;# 
  4375  070D                     	;# 
  4376  070E                     	;# 
  4377  070F                     	;# 
  4378  0710                     	;# 
  4379  0711                     	;# 
  4380  0712                     	;# 
  4381  0713                     	;# 
  4382  0714                     	;# 
  4383  0716                     	;# 
  4384  0717                     	;# 
  4385  0718                     	;# 
  4386  0719                     	;# 
  4387  071A                     	;# 
  4388  071B                     	;# 
  4389  071C                     	;# 
  4390  071D                     	;# 
  4391  071E                     	;# 
  4392  0796                     	;# 
  4393  0797                     	;# 
  4394  0798                     	;# 
  4395  0799                     	;# 
  4396  079A                     	;# 
  4397  079B                     	;# 
  4398  079C                     	;# 
  4399  079D                     	;# 
  4400  080C                     	;# 
  4401  080D                     	;# 
  4402  080E                     	;# 
  4403  080F                     	;# 
  4404  0810                     	;# 
  4405  0811                     	;# 
  4406  0812                     	;# 
  4407  0813                     	;# 
  4408  0814                     	;# 
  4409  081A                     	;# 
  4410  081A                     	;# 
  4411  081B                     	;# 
  4412  081C                     	;# 
  4413  081C                     	;# 
  4414  081D                     	;# 
  4415  081E                     	;# 
  4416  081F                     	;# 
  4417  088C                     	;# 
  4418  088D                     	;# 
  4419  088E                     	;# 
  4420  088F                     	;# 
  4421  0890                     	;# 
  4422  0891                     	;# 
  4423  0892                     	;# 
  4424  0893                     	;# 
  4425  0895                     	;# 
  4426  0896                     	;# 
  4427  0897                     	;# 
  4428  0898                     	;# 
  4429  0899                     	;# 
  4430  089A                     	;# 
  4431  089B                     	;# 
  4432  090C                     	;# 
  4433  090E                     	;# 
  4434  090F                     	;# 
  4435  091F                     	;# 
  4436  098F                     	;# 
  4437  098F                     	;# 
  4438  0990                     	;# 
  4439  0991                     	;# 
  4440  0992                     	;# 
  4441  0993                     	;# 
  4442  0994                     	;# 
  4443  0995                     	;# 
  4444  0996                     	;# 
  4445  0997                     	;# 
  4446  1E0F                     	;# 
  4447  1E10                     	;# 
  4448  1E11                     	;# 
  4449  1E12                     	;# 
  4450  1E13                     	;# 
  4451  1E14                     	;# 
  4452  1E15                     	;# 
  4453  1E16                     	;# 
  4454  1E17                     	;# 
  4455  1E18                     	;# 
  4456  1E19                     	;# 
  4457  1E1A                     	;# 
  4458  1E1B                     	;# 
  4459  1E1C                     	;# 
  4460  1E1D                     	;# 
  4461  1E1E                     	;# 
  4462  1E1F                     	;# 
  4463  1E20                     	;# 
  4464  1E21                     	;# 
  4465  1E22                     	;# 
  4466  1E23                     	;# 
  4467  1E24                     	;# 
  4468  1E25                     	;# 
  4469  1E26                     	;# 
  4470  1E27                     	;# 
  4471  1E28                     	;# 
  4472  1E29                     	;# 
  4473  1E2A                     	;# 
  4474  1E2B                     	;# 
  4475  1E2C                     	;# 
  4476  1E2D                     	;# 
  4477  1E2E                     	;# 
  4478  1E2F                     	;# 
  4479  1E30                     	;# 
  4480  1E31                     	;# 
  4481  1E32                     	;# 
  4482  1E33                     	;# 
  4483  1E34                     	;# 
  4484  1E35                     	;# 
  4485  1E36                     	;# 
  4486  1E37                     	;# 
  4487  1E8F                     	;# 
  4488  1E90                     	;# 
  4489  1E91                     	;# 
  4490  1E92                     	;# 
  4491  1E93                     	;# 
  4492  1E94                     	;# 
  4493  1E95                     	;# 
  4494  1E96                     	;# 
  4495  1E97                     	;# 
  4496  1E9C                     	;# 
  4497  1E9D                     	;# 
  4498  1E9E                     	;# 
  4499  1EA1                     	;# 
  4500  1EA2                     	;# 
  4501  1EA3                     	;# 
  4502  1EA4                     	;# 
  4503  1EA9                     	;# 
  4504  1EAA                     	;# 
  4505  1EB1                     	;# 
  4506  1EB2                     	;# 
  4507  1EB8                     	;# 
  4508  1EB9                     	;# 
  4509  1EBA                     	;# 
  4510  1EBB                     	;# 
  4511  1EBC                     	;# 
  4512  1EBD                     	;# 
  4513  1EBE                     	;# 
  4514  1EC3                     	;# 
  4515  1EC5                     	;# 
  4516  1EC6                     	;# 
  4517  1EC7                     	;# 
  4518  1ECB                     	;# 
  4519  1ECB                     	;# 
  4520  1ECB                     	;# 
  4521  1ECC                     	;# 
  4522  1ECC                     	;# 
  4523  1ECC                     	;# 
  4524  1F10                     	;# 
  4525  1F11                     	;# 
  4526  1F12                     	;# 
  4527  1F14                     	;# 
  4528  1F15                     	;# 
  4529  1F1C                     	;# 
  4530  1F1D                     	;# 
  4531  1F1E                     	;# 
  4532  1F1F                     	;# 
  4533  1F20                     	;# 
  4534  1F21                     	;# 
  4535  1F22                     	;# 
  4536  1F23                     	;# 
  4537  1F24                     	;# 
  4538  1F25                     	;# 
  4539  1F26                     	;# 
  4540  1F27                     	;# 
  4541  1F38                     	;# 
  4542  1F39                     	;# 
  4543  1F3A                     	;# 
  4544  1F3B                     	;# 
  4545  1F3C                     	;# 
  4546  1F3D                     	;# 
  4547  1F3E                     	;# 
  4548  1F3F                     	;# 
  4549  1F43                     	;# 
  4550  1F44                     	;# 
  4551  1F45                     	;# 
  4552  1F46                     	;# 
  4553  1F47                     	;# 
  4554  1F48                     	;# 
  4555  1F49                     	;# 
  4556  1F4A                     	;# 
  4557  1F4E                     	;# 
  4558  1F4F                     	;# 
  4559  1F50                     	;# 
  4560  1F51                     	;# 
  4561  1F52                     	;# 
  4562  1F53                     	;# 
  4563  1F54                     	;# 
  4564  1F55                     	;# 
  4565  1FE4                     	;# 
  4566  1FE5                     	;# 
  4567  1FE6                     	;# 
  4568  1FE7                     	;# 
  4569  1FE8                     	;# 
  4570  1FE8                     	;# 
  4571  1FE9                     	;# 
  4572  1FEA                     	;# 
  4573  1FEB                     	;# 
  4574  1FED                     	;# 
  4575  1FEE                     	;# 
  4576  1FEF                     	;# 
  4577  0000                     	;# 
  4578  0001                     	;# 
  4579  0002                     	;# 
  4580  0003                     	;# 
  4581  0004                     	;# 
  4582  0005                     	;# 
  4583  0006                     	;# 
  4584  0007                     	;# 
  4585  0008                     	;# 
  4586  0009                     	;# 
  4587  000A                     	;# 
  4588  000B                     	;# 
  4589  000C                     	;# 
  4590  000D                     	;# 
  4591  000E                     	;# 
  4592  0012                     	;# 
  4593  0013                     	;# 
  4594  0014                     	;# 
  4595  0018                     	;# 
  4596  0019                     	;# 
  4597  001A                     	;# 
  4598  008C                     	;# 
  4599  008C                     	;# 
  4600  008D                     	;# 
  4601  008E                     	;# 
  4602  008E                     	;# 
  4603  008F                     	;# 
  4604  0090                     	;# 
  4605  0090                     	;# 
  4606  0091                     	;# 
  4607  0092                     	;# 
  4608  0092                     	;# 
  4609  0093                     	;# 
  4610  0094                     	;# 
  4611  0094                     	;# 
  4612  0095                     	;# 
  4613  0096                     	;# 
  4614  0096                     	;# 
  4615  0097                     	;# 
  4616  0098                     	;# 
  4617  0099                     	;# 
  4618  009A                     	;# 
  4619  009B                     	;# 
  4620  009B                     	;# 
  4621  009C                     	;# 
  4622  009D                     	;# 
  4623  009D                     	;# 
  4624  009E                     	;# 
  4625  009F                     	;# 
  4626  010C                     	;# 
  4627  010C                     	;# 
  4628  010D                     	;# 
  4629  010E                     	;# 
  4630  010F                     	;# 
  4631  010F                     	;# 
  4632  0110                     	;# 
  4633  0111                     	;# 
  4634  0112                     	;# 
  4635  0113                     	;# 
  4636  0114                     	;# 
  4637  0115                     	;# 
  4638  0116                     	;# 
  4639  0117                     	;# 
  4640  0118                     	;# 
  4641  0119                     	;# 
  4642  0119                     	;# 
  4643  0119                     	;# 
  4644  011A                     	;# 
  4645  011A                     	;# 
  4646  011A                     	;# 
  4647  011B                     	;# 
  4648  011B                     	;# 
  4649  011B                     	;# 
  4650  011B                     	;# 
  4651  011B                     	;# 
  4652  011C                     	;# 
  4653  011C                     	;# 
  4654  011C                     	;# 
  4655  011D                     	;# 
  4656  011D                     	;# 
  4657  011D                     	;# 
  4658  011E                     	;# 
  4659  011E                     	;# 
  4660  011E                     	;# 
  4661  011F                     	;# 
  4662  011F                     	;# 
  4663  011F                     	;# 
  4664  011F                     	;# 
  4665  011F                     	;# 
  4666  018C                     	;# 
  4667  018D                     	;# 
  4668  018E                     	;# 
  4669  018F                     	;# 
  4670  0190                     	;# 
  4671  0191                     	;# 
  4672  0192                     	;# 
  4673  020C                     	;# 
  4674  020D                     	;# 
  4675  020E                     	;# 
  4676  020E                     	;# 
  4677  020F                     	;# 
  4678  020F                     	;# 
  4679  0210                     	;# 
  4680  0210                     	;# 
  4681  0211                     	;# 
  4682  0211                     	;# 
  4683  0212                     	;# 
  4684  0213                     	;# 
  4685  0214                     	;# 
  4686  0214                     	;# 
  4687  0215                     	;# 
  4688  0215                     	;# 
  4689  0216                     	;# 
  4690  0216                     	;# 
  4691  0217                     	;# 
  4692  0217                     	;# 
  4693  0218                     	;# 
  4694  0219                     	;# 
  4695  021A                     	;# 
  4696  021A                     	;# 
  4697  021B                     	;# 
  4698  021B                     	;# 
  4699  021C                     	;# 
  4700  021C                     	;# 
  4701  021D                     	;# 
  4702  021D                     	;# 
  4703  021E                     	;# 
  4704  021F                     	;# 
  4705  028C                     	;# 
  4706  028C                     	;# 
  4707  028D                     	;# 
  4708  028D                     	;# 
  4709  028E                     	;# 
  4710  028F                     	;# 
  4711  0290                     	;# 
  4712  0291                     	;# 
  4713  0292                     	;# 
  4714  0292                     	;# 
  4715  0293                     	;# 
  4716  0293                     	;# 
  4717  0294                     	;# 
  4718  0295                     	;# 
  4719  0296                     	;# 
  4720  0297                     	;# 
  4721  0298                     	;# 
  4722  0298                     	;# 
  4723  0299                     	;# 
  4724  0299                     	;# 
  4725  029A                     	;# 
  4726  029B                     	;# 
  4727  029C                     	;# 
  4728  029D                     	;# 
  4729  029F                     	;# 
  4730  030C                     	;# 
  4731  030C                     	;# 
  4732  030D                     	;# 
  4733  030E                     	;# 
  4734  030F                     	;# 
  4735  0310                     	;# 
  4736  0310                     	;# 
  4737  0311                     	;# 
  4738  0312                     	;# 
  4739  0313                     	;# 
  4740  0314                     	;# 
  4741  0314                     	;# 
  4742  0315                     	;# 
  4743  0316                     	;# 
  4744  0317                     	;# 
  4745  0318                     	;# 
  4746  0318                     	;# 
  4747  0319                     	;# 
  4748  031A                     	;# 
  4749  031B                     	;# 
  4750  038C                     	;# 
  4751  038C                     	;# 
  4752  038D                     	;# 
  4753  038E                     	;# 
  4754  0390                     	;# 
  4755  0390                     	;# 
  4756  0391                     	;# 
  4757  0392                     	;# 
  4758  048C                     	;# 
  4759  048C                     	;# 
  4760  048D                     	;# 
  4761  048E                     	;# 
  4762  048F                     	;# 
  4763  048F                     	;# 
  4764  0490                     	;# 
  4765  0491                     	;# 
  4766  0492                     	;# 
  4767  0492                     	;# 
  4768  0493                     	;# 
  4769  0494                     	;# 
  4770  0495                     	;# 
  4771  0495                     	;# 
  4772  0496                     	;# 
  4773  0497                     	;# 
  4774  0498                     	;# 
  4775  0499                     	;# 
  4776  049A                     	;# 
  4777  049B                     	;# 
  4778  049C                     	;# 
  4779  049D                     	;# 
  4780  058C                     	;# 
  4781  058C                     	;# 
  4782  058D                     	;# 
  4783  058E                     	;# 
  4784  058F                     	;# 
  4785  058F                     	;# 
  4786  0590                     	;# 
  4787  0591                     	;# 
  4788  0592                     	;# 
  4789  0593                     	;# 
  4790  059C                     	;# 
  4791  059C                     	;# 
  4792  059D                     	;# 
  4793  059D                     	;# 
  4794  059E                     	;# 
  4795  059F                     	;# 
  4796  060C                     	;# 
  4797  060C                     	;# 
  4798  060D                     	;# 
  4799  060D                     	;# 
  4800  060E                     	;# 
  4801  060F                     	;# 
  4802  0610                     	;# 
  4803  0611                     	;# 
  4804  0612                     	;# 
  4805  0613                     	;# 
  4806  0614                     	;# 
  4807  0616                     	;# 
  4808  0616                     	;# 
  4809  0617                     	;# 
  4810  0617                     	;# 
  4811  0618                     	;# 
  4812  0619                     	;# 
  4813  061A                     	;# 
  4814  061B                     	;# 
  4815  061C                     	;# 
  4816  061D                     	;# 
  4817  061E                     	;# 
  4818  070C                     	;# 
  4819  070D                     	;# 
  4820  070E                     	;# 
  4821  070F                     	;# 
  4822  0710                     	;# 
  4823  0711                     	;# 
  4824  0712                     	;# 
  4825  0713                     	;# 
  4826  0714                     	;# 
  4827  0716                     	;# 
  4828  0717                     	;# 
  4829  0718                     	;# 
  4830  0719                     	;# 
  4831  071A                     	;# 
  4832  071B                     	;# 
  4833  071C                     	;# 
  4834  071D                     	;# 
  4835  071E                     	;# 
  4836  0796                     	;# 
  4837  0797                     	;# 
  4838  0798                     	;# 
  4839  0799                     	;# 
  4840  079A                     	;# 
  4841  079B                     	;# 
  4842  079C                     	;# 
  4843  079D                     	;# 
  4844  080C                     	;# 
  4845  080D                     	;# 
  4846  080E                     	;# 
  4847  080F                     	;# 
  4848  0810                     	;# 
  4849  0811                     	;# 
  4850  0812                     	;# 
  4851  0813                     	;# 
  4852  0814                     	;# 
  4853  081A                     	;# 
  4854  081A                     	;# 
  4855  081B                     	;# 
  4856  081C                     	;# 
  4857  081C                     	;# 
  4858  081D                     	;# 
  4859  081E                     	;# 
  4860  081F                     	;# 
  4861  088C                     	;# 
  4862  088D                     	;# 
  4863  088E                     	;# 
  4864  088F                     	;# 
  4865  0890                     	;# 
  4866  0891                     	;# 
  4867  0892                     	;# 
  4868  0893                     	;# 
  4869  0895                     	;# 
  4870  0896                     	;# 
  4871  0897                     	;# 
  4872  0898                     	;# 
  4873  0899                     	;# 
  4874  089A                     	;# 
  4875  089B                     	;# 
  4876  090C                     	;# 
  4877  090E                     	;# 
  4878  090F                     	;# 
  4879  091F                     	;# 
  4880  098F                     	;# 
  4881  098F                     	;# 
  4882  0990                     	;# 
  4883  0991                     	;# 
  4884  0992                     	;# 
  4885  0993                     	;# 
  4886  0994                     	;# 
  4887  0995                     	;# 
  4888  0996                     	;# 
  4889  0997                     	;# 
  4890  1E0F                     	;# 
  4891  1E10                     	;# 
  4892  1E11                     	;# 
  4893  1E12                     	;# 
  4894  1E13                     	;# 
  4895  1E14                     	;# 
  4896  1E15                     	;# 
  4897  1E16                     	;# 
  4898  1E17                     	;# 
  4899  1E18                     	;# 
  4900  1E19                     	;# 
  4901  1E1A                     	;# 
  4902  1E1B                     	;# 
  4903  1E1C                     	;# 
  4904  1E1D                     	;# 
  4905  1E1E                     	;# 
  4906  1E1F                     	;# 
  4907  1E20                     	;# 
  4908  1E21                     	;# 
  4909  1E22                     	;# 
  4910  1E23                     	;# 
  4911  1E24                     	;# 
  4912  1E25                     	;# 
  4913  1E26                     	;# 
  4914  1E27                     	;# 
  4915  1E28                     	;# 
  4916  1E29                     	;# 
  4917  1E2A                     	;# 
  4918  1E2B                     	;# 
  4919  1E2C                     	;# 
  4920  1E2D                     	;# 
  4921  1E2E                     	;# 
  4922  1E2F                     	;# 
  4923  1E30                     	;# 
  4924  1E31                     	;# 
  4925  1E32                     	;# 
  4926  1E33                     	;# 
  4927  1E34                     	;# 
  4928  1E35                     	;# 
  4929  1E36                     	;# 
  4930  1E37                     	;# 
  4931  1E8F                     	;# 
  4932  1E90                     	;# 
  4933  1E91                     	;# 
  4934  1E92                     	;# 
  4935  1E93                     	;# 
  4936  1E94                     	;# 
  4937  1E95                     	;# 
  4938  1E96                     	;# 
  4939  1E97                     	;# 
  4940  1E9C                     	;# 
  4941  1E9D                     	;# 
  4942  1E9E                     	;# 
  4943  1EA1                     	;# 
  4944  1EA2                     	;# 
  4945  1EA3                     	;# 
  4946  1EA4                     	;# 
  4947  1EA9                     	;# 
  4948  1EAA                     	;# 
  4949  1EB1                     	;# 
  4950  1EB2                     	;# 
  4951  1EB8                     	;# 
  4952  1EB9                     	;# 
  4953  1EBA                     	;# 
  4954  1EBB                     	;# 
  4955  1EBC                     	;# 
  4956  1EBD                     	;# 
  4957  1EBE                     	;# 
  4958  1EC3                     	;# 
  4959  1EC5                     	;# 
  4960  1EC6                     	;# 
  4961  1EC7                     	;# 
  4962  1ECB                     	;# 
  4963  1ECB                     	;# 
  4964  1ECB                     	;# 
  4965  1ECC                     	;# 
  4966  1ECC                     	;# 
  4967  1ECC                     	;# 
  4968  1F10                     	;# 
  4969  1F11                     	;# 
  4970  1F12                     	;# 
  4971  1F14                     	;# 
  4972  1F15                     	;# 
  4973  1F1C                     	;# 
  4974  1F1D                     	;# 
  4975  1F1E                     	;# 
  4976  1F1F                     	;# 
  4977  1F20                     	;# 
  4978  1F21                     	;# 
  4979  1F22                     	;# 
  4980  1F23                     	;# 
  4981  1F24                     	;# 
  4982  1F25                     	;# 
  4983  1F26                     	;# 
  4984  1F27                     	;# 
  4985  1F38                     	;# 
  4986  1F39                     	;# 
  4987  1F3A                     	;# 
  4988  1F3B                     	;# 
  4989  1F3C                     	;# 
  4990  1F3D                     	;# 
  4991  1F3E                     	;# 
  4992  1F3F                     	;# 
  4993  1F43                     	;# 
  4994  1F44                     	;# 
  4995  1F45                     	;# 
  4996  1F46                     	;# 
  4997  1F47                     	;# 
  4998  1F48                     	;# 
  4999  1F49                     	;# 
  5000  1F4A                     	;# 
  5001  1F4E                     	;# 
  5002  1F4F                     	;# 
  5003  1F50                     	;# 
  5004  1F51                     	;# 
  5005  1F52                     	;# 
  5006  1F53                     	;# 
  5007  1F54                     	;# 
  5008  1F55                     	;# 
  5009  1FE4                     	;# 
  5010  1FE5                     	;# 
  5011  1FE6                     	;# 
  5012  1FE7                     	;# 
  5013  1FE8                     	;# 
  5014  1FE8                     	;# 
  5015  1FE9                     	;# 
  5016  1FEA                     	;# 
  5017  1FEB                     	;# 
  5018  1FED                     	;# 
  5019  1FEE                     	;# 
  5020  1FEF                     	;# 
  5021  0000                     	;# 
  5022  0001                     	;# 
  5023  0002                     	;# 
  5024  0003                     	;# 
  5025  0004                     	;# 
  5026  0005                     	;# 
  5027  0006                     	;# 
  5028  0007                     	;# 
  5029  0008                     	;# 
  5030  0009                     	;# 
  5031  000A                     	;# 
  5032  000B                     	;# 
  5033  000C                     	;# 
  5034  000D                     	;# 
  5035  000E                     	;# 
  5036  0012                     	;# 
  5037  0013                     	;# 
  5038  0014                     	;# 
  5039  0018                     	;# 
  5040  0019                     	;# 
  5041  001A                     	;# 
  5042  008C                     	;# 
  5043  008C                     	;# 
  5044  008D                     	;# 
  5045  008E                     	;# 
  5046  008E                     	;# 
  5047  008F                     	;# 
  5048  0090                     	;# 
  5049  0090                     	;# 
  5050  0091                     	;# 
  5051  0092                     	;# 
  5052  0092                     	;# 
  5053  0093                     	;# 
  5054  0094                     	;# 
  5055  0094                     	;# 
  5056  0095                     	;# 
  5057  0096                     	;# 
  5058  0096                     	;# 
  5059  0097                     	;# 
  5060  0098                     	;# 
  5061  0099                     	;# 
  5062  009A                     	;# 
  5063  009B                     	;# 
  5064  009B                     	;# 
  5065  009C                     	;# 
  5066  009D                     	;# 
  5067  009D                     	;# 
  5068  009E                     	;# 
  5069  009F                     	;# 
  5070  010C                     	;# 
  5071  010C                     	;# 
  5072  010D                     	;# 
  5073  010E                     	;# 
  5074  010F                     	;# 
  5075  010F                     	;# 
  5076  0110                     	;# 
  5077  0111                     	;# 
  5078  0112                     	;# 
  5079  0113                     	;# 
  5080  0114                     	;# 
  5081  0115                     	;# 
  5082  0116                     	;# 
  5083  0117                     	;# 
  5084  0118                     	;# 
  5085  0119                     	;# 
  5086  0119                     	;# 
  5087  0119                     	;# 
  5088  011A                     	;# 
  5089  011A                     	;# 
  5090  011A                     	;# 
  5091  011B                     	;# 
  5092  011B                     	;# 
  5093  011B                     	;# 
  5094  011B                     	;# 
  5095  011B                     	;# 
  5096  011C                     	;# 
  5097  011C                     	;# 
  5098  011C                     	;# 
  5099  011D                     	;# 
  5100  011D                     	;# 
  5101  011D                     	;# 
  5102  011E                     	;# 
  5103  011E                     	;# 
  5104  011E                     	;# 
  5105  011F                     	;# 
  5106  011F                     	;# 
  5107  011F                     	;# 
  5108  011F                     	;# 
  5109  011F                     	;# 
  5110  018C                     	;# 
  5111  018D                     	;# 
  5112  018E                     	;# 
  5113  018F                     	;# 
  5114  0190                     	;# 
  5115  0191                     	;# 
  5116  0192                     	;# 
  5117  020C                     	;# 
  5118  020D                     	;# 
  5119  020E                     	;# 
  5120  020E                     	;# 
  5121  020F                     	;# 
  5122  020F                     	;# 
  5123  0210                     	;# 
  5124  0210                     	;# 
  5125  0211                     	;# 
  5126  0211                     	;# 
  5127  0212                     	;# 
  5128  0213                     	;# 
  5129  0214                     	;# 
  5130  0214                     	;# 
  5131  0215                     	;# 
  5132  0215                     	;# 
  5133  0216                     	;# 
  5134  0216                     	;# 
  5135  0217                     	;# 
  5136  0217                     	;# 
  5137  0218                     	;# 
  5138  0219                     	;# 
  5139  021A                     	;# 
  5140  021A                     	;# 
  5141  021B                     	;# 
  5142  021B                     	;# 
  5143  021C                     	;# 
  5144  021C                     	;# 
  5145  021D                     	;# 
  5146  021D                     	;# 
  5147  021E                     	;# 
  5148  021F                     	;# 
  5149  028C                     	;# 
  5150  028C                     	;# 
  5151  028D                     	;# 
  5152  028D                     	;# 
  5153  028E                     	;# 
  5154  028F                     	;# 
  5155  0290                     	;# 
  5156  0291                     	;# 
  5157  0292                     	;# 
  5158  0292                     	;# 
  5159  0293                     	;# 
  5160  0293                     	;# 
  5161  0294                     	;# 
  5162  0295                     	;# 
  5163  0296                     	;# 
  5164  0297                     	;# 
  5165  0298                     	;# 
  5166  0298                     	;# 
  5167  0299                     	;# 
  5168  0299                     	;# 
  5169  029A                     	;# 
  5170  029B                     	;# 
  5171  029C                     	;# 
  5172  029D                     	;# 
  5173  029F                     	;# 
  5174  030C                     	;# 
  5175  030C                     	;# 
  5176  030D                     	;# 
  5177  030E                     	;# 
  5178  030F                     	;# 
  5179  0310                     	;# 
  5180  0310                     	;# 
  5181  0311                     	;# 
  5182  0312                     	;# 
  5183  0313                     	;# 
  5184  0314                     	;# 
  5185  0314                     	;# 
  5186  0315                     	;# 
  5187  0316                     	;# 
  5188  0317                     	;# 
  5189  0318                     	;# 
  5190  0318                     	;# 
  5191  0319                     	;# 
  5192  031A                     	;# 
  5193  031B                     	;# 
  5194  038C                     	;# 
  5195  038C                     	;# 
  5196  038D                     	;# 
  5197  038E                     	;# 
  5198  0390                     	;# 
  5199  0390                     	;# 
  5200  0391                     	;# 
  5201  0392                     	;# 
  5202  048C                     	;# 
  5203  048C                     	;# 
  5204  048D                     	;# 
  5205  048E                     	;# 
  5206  048F                     	;# 
  5207  048F                     	;# 
  5208  0490                     	;# 
  5209  0491                     	;# 
  5210  0492                     	;# 
  5211  0492                     	;# 
  5212  0493                     	;# 
  5213  0494                     	;# 
  5214  0495                     	;# 
  5215  0495                     	;# 
  5216  0496                     	;# 
  5217  0497                     	;# 
  5218  0498                     	;# 
  5219  0499                     	;# 
  5220  049A                     	;# 
  5221  049B                     	;# 
  5222  049C                     	;# 
  5223  049D                     	;# 
  5224  058C                     	;# 
  5225  058C                     	;# 
  5226  058D                     	;# 
  5227  058E                     	;# 
  5228  058F                     	;# 
  5229  058F                     	;# 
  5230  0590                     	;# 
  5231  0591                     	;# 
  5232  0592                     	;# 
  5233  0593                     	;# 
  5234  059C                     	;# 
  5235  059C                     	;# 
  5236  059D                     	;# 
  5237  059D                     	;# 
  5238  059E                     	;# 
  5239  059F                     	;# 
  5240  060C                     	;# 
  5241  060C                     	;# 
  5242  060D                     	;# 
  5243  060D                     	;# 
  5244  060E                     	;# 
  5245  060F                     	;# 
  5246  0610                     	;# 
  5247  0611                     	;# 
  5248  0612                     	;# 
  5249  0613                     	;# 
  5250  0614                     	;# 
  5251  0616                     	;# 
  5252  0616                     	;# 
  5253  0617                     	;# 
  5254  0617                     	;# 
  5255  0618                     	;# 
  5256  0619                     	;# 
  5257  061A                     	;# 
  5258  061B                     	;# 
  5259  061C                     	;# 
  5260  061D                     	;# 
  5261  061E                     	;# 
  5262  070C                     	;# 
  5263  070D                     	;# 
  5264  070E                     	;# 
  5265  070F                     	;# 
  5266  0710                     	;# 
  5267  0711                     	;# 
  5268  0712                     	;# 
  5269  0713                     	;# 
  5270  0714                     	;# 
  5271  0716                     	;# 
  5272  0717                     	;# 
  5273  0718                     	;# 
  5274  0719                     	;# 
  5275  071A                     	;# 
  5276  071B                     	;# 
  5277  071C                     	;# 
  5278  071D                     	;# 
  5279  071E                     	;# 
  5280  0796                     	;# 
  5281  0797                     	;# 
  5282  0798                     	;# 
  5283  0799                     	;# 
  5284  079A                     	;# 
  5285  079B                     	;# 
  5286  079C                     	;# 
  5287  079D                     	;# 
  5288  080C                     	;# 
  5289  080D                     	;# 
  5290  080E                     	;# 
  5291  080F                     	;# 
  5292  0810                     	;# 
  5293  0811                     	;# 
  5294  0812                     	;# 
  5295  0813                     	;# 
  5296  0814                     	;# 
  5297  081A                     	;# 
  5298  081A                     	;# 
  5299  081B                     	;# 
  5300  081C                     	;# 
  5301  081C                     	;# 
  5302  081D                     	;# 
  5303  081E                     	;# 
  5304  081F                     	;# 
  5305  088C                     	;# 
  5306  088D                     	;# 
  5307  088E                     	;# 
  5308  088F                     	;# 
  5309  0890                     	;# 
  5310  0891                     	;# 
  5311  0892                     	;# 
  5312  0893                     	;# 
  5313  0895                     	;# 
  5314  0896                     	;# 
  5315  0897                     	;# 
  5316  0898                     	;# 
  5317  0899                     	;# 
  5318  089A                     	;# 
  5319  089B                     	;# 
  5320  090C                     	;# 
  5321  090E                     	;# 
  5322  090F                     	;# 
  5323  091F                     	;# 
  5324  098F                     	;# 
  5325  098F                     	;# 
  5326  0990                     	;# 
  5327  0991                     	;# 
  5328  0992                     	;# 
  5329  0993                     	;# 
  5330  0994                     	;# 
  5331  0995                     	;# 
  5332  0996                     	;# 
  5333  0997                     	;# 
  5334  1E0F                     	;# 
  5335  1E10                     	;# 
  5336  1E11                     	;# 
  5337  1E12                     	;# 
  5338  1E13                     	;# 
  5339  1E14                     	;# 
  5340  1E15                     	;# 
  5341  1E16                     	;# 
  5342  1E17                     	;# 
  5343  1E18                     	;# 
  5344  1E19                     	;# 
  5345  1E1A                     	;# 
  5346  1E1B                     	;# 
  5347  1E1C                     	;# 
  5348  1E1D                     	;# 
  5349  1E1E                     	;# 
  5350  1E1F                     	;# 
  5351  1E20                     	;# 
  5352  1E21                     	;# 
  5353  1E22                     	;# 
  5354  1E23                     	;# 
  5355  1E24                     	;# 
  5356  1E25                     	;# 
  5357  1E26                     	;# 
  5358  1E27                     	;# 
  5359  1E28                     	;# 
  5360  1E29                     	;# 
  5361  1E2A                     	;# 
  5362  1E2B                     	;# 
  5363  1E2C                     	;# 
  5364  1E2D                     	;# 
  5365  1E2E                     	;# 
  5366  1E2F                     	;# 
  5367  1E30                     	;# 
  5368  1E31                     	;# 
  5369  1E32                     	;# 
  5370  1E33                     	;# 
  5371  1E34                     	;# 
  5372  1E35                     	;# 
  5373  1E36                     	;# 
  5374  1E37                     	;# 
  5375  1E8F                     	;# 
  5376  1E90                     	;# 
  5377  1E91                     	;# 
  5378  1E92                     	;# 
  5379  1E93                     	;# 
  5380  1E94                     	;# 
  5381  1E95                     	;# 
  5382  1E96                     	;# 
  5383  1E97                     	;# 
  5384  1E9C                     	;# 
  5385  1E9D                     	;# 
  5386  1E9E                     	;# 
  5387  1EA1                     	;# 
  5388  1EA2                     	;# 
  5389  1EA3                     	;# 
  5390  1EA4                     	;# 
  5391  1EA9                     	;# 
  5392  1EAA                     	;# 
  5393  1EB1                     	;# 
  5394  1EB2                     	;# 
  5395  1EB8                     	;# 
  5396  1EB9                     	;# 
  5397  1EBA                     	;# 
  5398  1EBB                     	;# 
  5399  1EBC                     	;# 
  5400  1EBD                     	;# 
  5401  1EBE                     	;# 
  5402  1EC3                     	;# 
  5403  1EC5                     	;# 
  5404  1EC6                     	;# 
  5405  1EC7                     	;# 
  5406  1ECB                     	;# 
  5407  1ECB                     	;# 
  5408  1ECB                     	;# 
  5409  1ECC                     	;# 
  5410  1ECC                     	;# 
  5411  1ECC                     	;# 
  5412  1F10                     	;# 
  5413  1F11                     	;# 
  5414  1F12                     	;# 
  5415  1F14                     	;# 
  5416  1F15                     	;# 
  5417  1F1C                     	;# 
  5418  1F1D                     	;# 
  5419  1F1E                     	;# 
  5420  1F1F                     	;# 
  5421  1F20                     	;# 
  5422  1F21                     	;# 
  5423  1F22                     	;# 
  5424  1F23                     	;# 
  5425  1F24                     	;# 
  5426  1F25                     	;# 
  5427  1F26                     	;# 
  5428  1F27                     	;# 
  5429  1F38                     	;# 
  5430  1F39                     	;# 
  5431  1F3A                     	;# 
  5432  1F3B                     	;# 
  5433  1F3C                     	;# 
  5434  1F3D                     	;# 
  5435  1F3E                     	;# 
  5436  1F3F                     	;# 
  5437  1F43                     	;# 
  5438  1F44                     	;# 
  5439  1F45                     	;# 
  5440  1F46                     	;# 
  5441  1F47                     	;# 
  5442  1F48                     	;# 
  5443  1F49                     	;# 
  5444  1F4A                     	;# 
  5445  1F4E                     	;# 
  5446  1F4F                     	;# 
  5447  1F50                     	;# 
  5448  1F51                     	;# 
  5449  1F52                     	;# 
  5450  1F53                     	;# 
  5451  1F54                     	;# 
  5452  1F55                     	;# 
  5453  1FE4                     	;# 
  5454  1FE5                     	;# 
  5455  1FE6                     	;# 
  5456  1FE7                     	;# 
  5457  1FE8                     	;# 
  5458  1FE8                     	;# 
  5459  1FE9                     	;# 
  5460  1FEA                     	;# 
  5461  1FEB                     	;# 
  5462  1FED                     	;# 
  5463  1FEE                     	;# 
  5464  1FEF                     	;# 
  5465                           
  5466 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  5467  0000                     
  5468 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  5469  0000                     
  5470 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  5471  0000                     
  5472 ;; Function _I2C1_DO_TX is unused but had its address taken
  5473  0000                     
  5474 ;; Function _I2C1_DO_RX is unused but had its address taken
  5475  0000                     
  5476 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  5477  0000                     
  5478 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  5479  0000                     
  5480 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  5481  0000                     
  5482 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  5483  0000                     
  5484 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  5485  0000                     
  5486 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  5487  0000                     
  5488 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  5489  0000                     
  5490 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  5491  0000                     
  5492 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  5493  0000                     
  5494 ;; Function _I2C1_DO_RESET is unused but had its address taken
  5495  0000                     
  5496 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  5497  0000                     
  5498 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  5499  0000                     
  5500 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  5501  0000                     
  5502 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  5503  0000                     
  5504 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  5505  0000                     
  5506 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  5507  0000                     
  5508 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  5509  0000                     
  5510 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  5511  0000                     
  5512 ;; Function _wr1RegCompleteHandler@i2c_simple_master$F2469 is unused but had its address taken
  5513  0000                     
  5514 ;; Function _rd1RegCompleteHandler@i2c_simple_master$F2479 is unused but had its address taken
  5515  0000                     
  5516 ;; Function _rd2RegCompleteHandler@i2c_simple_master$F2487 is unused but had its address taken
  5517  0000                     
  5518 ;; Function _wr2RegCompleteHandler@i2c_simple_master$F2493 is unused but had its address taken
  5519  0000                     
  5520 ;; Function _rdBlkRegCompleteHandler@i2c_simple_master$F2499 is unused but had its address taken
  5521  0000                     
  5522                           	psect	idataBANK1
  5523  0C75                     __pidataBANK1:
  5524                           
  5525                           ;initializer for Loader@F11221
  5526  0C75  344C               	retlw	76
  5527  0C76  3401               	retlw	1
  5528  0C77  3402               	retlw	2
  5529  0C78  3403               	retlw	3
  5530  0C79  3404               	retlw	4
  5531  0C7A  3405               	retlw	5
  5532  0C7B  3406               	retlw	6
  5533  0C7C  3407               	retlw	7
  5534  0C7D  3408               	retlw	8
  5535  0C7E  3409               	retlw	9
  5536  0C7F  3400               	retlw	0
  5537  0C80  3452               	retlw	82
  5538                           
  5539                           	psect	idataBANK2
  5540  0F7B                     __pidataBANK2:
  5541                           
  5542                           ;initializer for _RunLength
  5543  0F7B  3414               	retlw	20
  5544  0F7C  341E               	retlw	30
  5545  0F7D  3428               	retlw	40
  5546  0F7E  3432               	retlw	50
  5547  0F7F  3432               	retlw	50
  5548  0F80  343C               	retlw	60
  5549  0F81  343C               	retlw	60
  5550  0F82  3446               	retlw	70
  5551  0F83  340F               	retlw	15
  5552  0F84  3419               	retlw	25
  5553  0F85  3423               	retlw	35
  5554  0F86  342D               	retlw	45
  5555  0F87  3437               	retlw	55
  5556  0F88  3437               	retlw	55
  5557  0F89  3437               	retlw	55
  5558  0F8A  3441               	retlw	65
  5559  0F8B  3412               	retlw	18
  5560  0F8C  3413               	retlw	19
  5561  0F8D  3416               	retlw	22
  5562  0F8E  3417               	retlw	23
  5563  0F8F  3418               	retlw	24
  5564  0F90  341A               	retlw	26
  5565  0F91  341B               	retlw	27
  5566  0F92  341C               	retlw	28
  5567  0F93  341D               	retlw	29
  5568  0F94  341F               	retlw	31
  5569  0F95  3420               	retlw	32
  5570  0F96  3421               	retlw	33
  5571  0F97  3422               	retlw	34
  5572  0F98  3424               	retlw	36
  5573  0F99  3425               	retlw	37
  5574  0F9A  3426               	retlw	38
  5575  0F9B  3427               	retlw	39
  5576  0F9C  3429               	retlw	41
  5577  0F9D  342A               	retlw	42
  5578  0F9E  342B               	retlw	43
  5579  0F9F  342C               	retlw	44
  5580  0FA0  342E               	retlw	46
  5581  0FA1  342F               	retlw	47
  5582  0FA2  3430               	retlw	48
  5583  0FA3  3431               	retlw	49
  5584  0FA4  3410               	retlw	16
  5585  0FA5  3433               	retlw	51
  5586  0FA6  3411               	retlw	17
  5587  0FA7  3434               	retlw	52
  5588  0FA8  3444               	retlw	68
  5589  0FA9  3435               	retlw	53
  5590  0FAA  3443               	retlw	67
  5591  0FAB  3415               	retlw	21
  5592  0FAC  3445               	retlw	69
  5593  0FAD  3436               	retlw	54
  5594  0FAE  3438               	retlw	56
  5595  0FAF  3438               	retlw	56
  5596  0FB0  3440               	retlw	64
  5597  0FB1  3439               	retlw	57
  5598  0FB2  3439               	retlw	57
  5599  0FB3  3442               	retlw	66
  5600  0FB4  343A               	retlw	58
  5601  0FB5  343A               	retlw	58
  5602  0FB6  343F               	retlw	63
  5603  0FB7  343B               	retlw	59
  5604  0FB8  343B               	retlw	59
  5605  0FB9  343D               	retlw	61
  5606  0FBA  343E               	retlw	62
  5607                           
  5608                           	psect	idataEEDATA
  5609  0078                     __pidataEEDATA:
  5610  0078                     _BlankEndStore:	
  5611                           ;initializer for _BlankEndStore
  5612                           
  5613  0078  0016               	db	22
  5614  0079                     _BlankStartStore:	
  5615                           ;initializer for _BlankStartStore
  5616                           
  5617  0079  0016               	db	22
  5618  007A                     _HourTypeStore:	
  5619                           ;initializer for _HourTypeStore
  5620                           
  5621  007A  0001               	db	1
  5622  007B                     _BrightnessStore:	
  5623                           ;initializer for _BrightnessStore
  5624                           
  5625  007B  0005               	db	5
  5626  007C                     _TimeFastStore:	
  5627                           ;initializer for _TimeFastStore
  5628                           
  5629  007C  0001               	db	1
  5630                           
  5631                           	psect	stringtext1
  5632  07DF                     __pstringtext1:
  5633  07DF                     _i2c1_fsmStateTable:
  5634  07DF  3400               	retlw	0
  5635  07E0  3400               	retlw	0
  5636  07E1  3400               	retlw	0
  5637  07E2  3400               	retlw	0
  5638  07E3  3400               	retlw	0
  5639  07E4  3400               	retlw	0
  5640  07E5  3400               	retlw	0
  5641  07E6  3400               	retlw	0
  5642  07E7  3400               	retlw	0
  5643  07E8  3400               	retlw	0
  5644  07E9  3400               	retlw	0
  5645  07EA  3400               	retlw	0
  5646  07EB  3400               	retlw	0
  5647  07EC  3400               	retlw	0
  5648  07ED  3400               	retlw	0
  5649  07EE  3400               	retlw	0
  5650  07EF  3400               	retlw	0
  5651  07F0  3400               	retlw	0
  5652  07F1  3400               	retlw	0
  5653  07F2  3400               	retlw	0
  5654  07F3  3400               	retlw	0
  5655  07F4  3400               	retlw	0
  5656  07F5  3400               	retlw	0
  5657  07F6  3400               	retlw	0
  5658  07F7  3400               	retlw	0
  5659  07F8  3400               	retlw	0
  5660  07F9  3400               	retlw	0
  5661  07FA  3400               	retlw	0
  5662  07FB  3400               	retlw	0
  5663  07FC  3400               	retlw	0
  5664  07FD  3400               	retlw	0
  5665  07FE  3400               	retlw	0
  5666  07FF                     __end_of_i2c1_fsmStateTable:
  5667  0003                     _STATUSbits	set	3
  5668  000E                     _PORTCbits	set	14
  5669  000B                     _INTCONbits	set	11
  5670  001A                     _LATCbits	set	26
  5671  0019                     _LATBbits	set	25
  5672  0018                     _LATAbits	set	24
  5673  0014                     _TRISC	set	20
  5674  0013                     _TRISB	set	19
  5675  0012                     _TRISA	set	18
  5676  001A                     _LATC	set	26
  5677  0019                     _LATB	set	25
  5678  0018                     _LATA	set	24
  5679  018D                     _SSP1ADD	set	397
  5680  0191                     _SSP1CON2	set	401
  5681  0190                     _SSP1CON1	set	400
  5682  018F                     _SSP1STAT	set	399
  5683  0190                     _SSP1CON1bits	set	400
  5684  018C                     _SSP1BUF	set	396
  5685  0191                     _SSP1CON2bits	set	401
  5686  021F                     _CCPTMRS1bits	set	543
  5687  0294                     _T4CONbits	set	660
  5688  0294                     _T4CON	set	660
  5689  0292                     _T4TMR	set	658
  5690  0293                     _T4PR	set	659
  5691  0297                     _T4RST	set	663
  5692  0295                     _T4HLT	set	661
  5693  0296                     _T4CLKCON	set	662
  5694  028E                     _T2CON	set	654
  5695  028C                     _T2TMR	set	652
  5696  028D                     _T2PR	set	653
  5697  0291                     _T2RST	set	657
  5698  028F                     _T2HLT	set	655
  5699  0290                     _T2CLKCON	set	656
  5700  038E                     _PWM6CONbits	set	910
  5701  038C                     _PWM6DCL	set	908
  5702  038D                     _PWM6DCH	set	909
  5703  038E                     _PWM6CON	set	910
  5704  059E                     _T0CON0bits	set	1438
  5705  059E                     _T0CON0	set	1438
  5706  059C                     _TMR0L	set	1436
  5707  059D                     _TMR0H	set	1437
  5708  059F                     _T0CON1	set	1439
  5709  0719                     _PIE3bits	set	1817
  5710  070F                     _PIR3bits	set	1807
  5711  071A                     _PIE4bits	set	1818
  5712  070C                     _PIR0bits	set	1804
  5713  0710                     _PIR4bits	set	1808
  5714  0716                     _PIE0bits	set	1814
  5715  079D                     _PMD7	set	1949
  5716  079C                     _PMD6	set	1948
  5717  079B                     _PMD5	set	1947
  5718  079A                     _PMD4	set	1946
  5719  0799                     _PMD3	set	1945
  5720  0798                     _PMD2	set	1944
  5721  0797                     _PMD1	set	1943
  5722  0796                     _PMD0	set	1942
  5723  081F                     _NVMCON2	set	2079
  5724  081D                     _NVMDATH	set	2077
  5725  081C                     _NVMDATL	set	2076
  5726  081B                     _NVMADRH	set	2075
  5727  081A                     _NVMADRL	set	2074
  5728  081E                     _NVMCON1bits	set	2078
  5729  0892                     _OSCTUNE	set	2194
  5730  0893                     _OSCFRQ	set	2195
  5731  0891                     _OSCEN	set	2193
  5732  088F                     _OSCCON3	set	2191
  5733  088D                     _OSCCON1	set	2189
  5734  1EC6                     _SSP1DATPPS	set	7878
  5735  1EC5                     _SSP1CLKPPS	set	7877
  5736  1F1C                     _RB4PPS	set	7964
  5737  1F24                     _RC4PPS	set	7972
  5738  1F1E                     _RB6PPS	set	7966
  5739  1F53                     _IOCCPbits	set	8019
  5740  1F54                     _IOCCNbits	set	8020
  5741  1F55                     _IOCCFbits	set	8021
  5742  1F52                     _INLVLC	set	8018
  5743  1F47                     _INLVLB	set	8007
  5744  1F3C                     _INLVLA	set	7996
  5745  1F51                     _SLRCONC	set	8017
  5746  1F46                     _SLRCONB	set	8006
  5747  1F3B                     _SLRCONA	set	7995
  5748  1F50                     _ODCONC	set	8016
  5749  1F45                     _ODCONB	set	8005
  5750  1F3A                     _ODCONA	set	7994
  5751  1F4F                     _WPUC	set	8015
  5752  1F39                     _WPUA	set	7993
  5753  1F44                     _WPUB	set	8004
  5754  1F38                     _ANSELA	set	7992
  5755  1F43                     _ANSELB	set	8003
  5756  1F4E                     _ANSELC	set	8014
  5757                           
  5758                           	psect	cinit
  5759  0019                     start_initialization:	
  5760                           ; #config settings
  5761                           
  5762  0019                     __initialization:
  5763                           
  5764                           ; Initialize objects allocated to BANK1
  5765  0019  3075               	movlw	low __pidataBANK1
  5766  001A  0084               	movwf	4
  5767  001B  308C               	movlw	(high __pidataBANK1)| (0+128)
  5768  001C  0085               	movwf	5
  5769  001D  30BD               	movlw	low __pdataBANK1
  5770  001E  0086               	movwf	6
  5771  001F  3000               	movlw	high __pdataBANK1
  5772  0020  0087               	movwf	7
  5773  0021  300C               	movlw	12
  5774  0022  318B  23FD  3180   	fcall	init_ram
  5775                           
  5776                           ; Initialize objects allocated to BANK2
  5777  0025  307B               	movlw	low __pidataBANK2
  5778  0026  0084               	movwf	4
  5779  0027  308F               	movlw	(high __pidataBANK2)| (0+128)
  5780  0028  0085               	movwf	5
  5781  0029  3020               	movlw	low __pdataBANK2
  5782  002A  0086               	movwf	6
  5783  002B  3001               	movlw	high __pdataBANK2
  5784  002C  0087               	movwf	7
  5785  002D  3040               	movlw	64
  5786  002E  318B  23FD  3180   	fcall	init_ram
  5787                           
  5788                           ; Clear objects allocated to BITCOMMON
  5789  0031  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  5790                           
  5791                           ; Clear objects allocated to BANK0
  5792  0032  3020               	movlw	low __pbssBANK0
  5793  0033  0084               	movwf	4
  5794  0034  3000               	movlw	high __pbssBANK0
  5795  0035  0085               	movwf	5
  5796  0036  3033               	movlw	51
  5797  0037  318B  23F7  3180   	fcall	clear_ram0
  5798                           
  5799                           ; Clear objects allocated to BANK1
  5800  003A  30A0               	movlw	low __pbssBANK1
  5801  003B  0084               	movwf	4
  5802  003C  3000               	movlw	high __pbssBANK1
  5803  003D  0085               	movwf	5
  5804  003E  301D               	movlw	29
  5805  003F  318B  23F7         	fcall	clear_ram0
  5806  0041                     end_of_initialization:	
  5807                           ;End of C runtime variable initialization code
  5808                           
  5809  0041                     __end_of__initialization:
  5810  0041  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5811  0042  0140               	movlb	0
  5812  0043  3180  2845         	ljmp	_main	;jump to C main() function
  5813                           
  5814                           	psect	bssEEDATA
  5815  007D                     __pbssEEDATA:
  5816  007D                     _TimeAdjStore:
  5817  007D  0000               	db	0
  5818  007E  0000               	db	0
  5819  007F                     _DateFormatStore:
  5820  007F  0000               	db	0
  5821                           
  5822                           	psect	dataEEDATA
  5823  0000                     __pdataEEDATA:
  5824                           
  5825                           	psect	bitbssCOMMON
  5826  03E0                     __pbitbssCOMMON:
  5827  03E0                     _StartupDone:
  5828  03E0                     	ds	1
  5829  03E1                     _TimeSet:
  5830  03E1                     	ds	1
  5831  03E2                     _Toggle:
  5832  03E2                     	ds	1
  5833  03E3                     _GoDM:
  5834  03E3                     	ds	1
  5835  03E4                     _GoDate:
  5836  03E4                     	ds	1
  5837  03E5                     _Action:
  5838  03E5                     	ds	1
  5839  03E6                     _NegWL:
  5840  03E6                     	ds	1
  5841                           
  5842                           	psect	bssBANK0
  5843  0020                     __pbssBANK0:
  5844  0020                     _DisplaySave:
  5845  0020                     	ds	8
  5846  0028                     _AnimBuf:
  5847  0028                     	ds	8
  5848  0030                     _DisplayBuf:
  5849  0030                     	ds	8
  5850  0038                     _BCDSplit:
  5851  0038                     	ds	2
  5852  003A                     _TimeAdj:
  5853  003A                     	ds	2
  5854  003C                     _TMR4_InterruptHandler:
  5855  003C                     	ds	2
  5856  003E                     _buttoncounter:
  5857  003E                     	ds	2
  5858  0040                     _timer0ReloadVal16bit:
  5859  0040                     	ds	2
  5860  0042                     _IOCCF1_InterruptHandler:
  5861  0042                     	ds	2
  5862  0044                     _IOCCF0_InterruptHandler:
  5863  0044                     	ds	2
  5864  0046                     _OldSet:
  5865  0046                     	ds	1
  5866  0047                     _Temp:
  5867  0047                     	ds	1
  5868  0048                     _BlankEnd:
  5869  0048                     	ds	1
  5870  0049                     _BlankStart:
  5871  0049                     	ds	1
  5872  004A                     _TimeFast:
  5873  004A                     	ds	1
  5874  004B                     _Pos:
  5875  004B                     	ds	1
  5876  004C                     _seed:
  5877  004C                     	ds	4
  5878  0050                     _HourType:
  5879  0050                     	ds	1
  5880  0051                     _Brightness:
  5881  0051                     	ds	1
  5882  0052                     _DateFormat:
  5883  0052                     	ds	1
  5884                           
  5885                           	psect	bssBANK1
  5886  00A0                     __pbssBANK1:
  5887  00A0                     _I2C1_Status:
  5888  00A0                     	ds	29
  5889                           
  5890                           	psect	dataBANK1
  5891  00BD                     __pdataBANK1:
  5892  00BD                     Loader@F11221:
  5893  00BD                     	ds	12
  5894                           
  5895                           	psect	dataBANK2
  5896  0120                     __pdataBANK2:
  5897  0120                     _RunLength:
  5898  0120                     	ds	64
  5899                           
  5900                           	psect	inittext
  5901  0BFD                     init_ram:
  5902  0BFD  00FE               	movwf	126
  5903  0BFE                     initloop:
  5904  0BFE  0012               	moviw fsr0++
  5905  0BFF  001E               	movwi fsr1++
  5906  0C00  0BFE               	decfsz	126,f
  5907  0C01  2BFE               	goto	initloop
  5908  0C02  3400               	retlw	0
  5909                           
  5910                           	psect	clrtext
  5911  0BF7                     clear_ram0:	
  5912                           ;	Called with FSR0 containing the base address, and
  5913                           ;	WREG with the size to clear
  5914                           
  5915  0BF7  0064               	clrwdt	;clear the watchdog before getting into this loop
  5916  0BF8                     clrloop0:
  5917  0BF8  0180               	clrf	0	;clear RAM location pointed to by FSR
  5918  0BF9  3101               	addfsr 0,1
  5919  0BFA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5920  0BFB  2BF8               	goto	clrloop0	;have we reached the end yet?
  5921  0BFC  3400               	retlw	0	;all done for this memory range, return
  5922                           
  5923                           	psect	cstackCOMMON
  5924  0070                     __pcstackCOMMON:
  5925  0070                     ?_SW1Interrupt:
  5926  0070                     ??_SW1Interrupt:	
  5927                           ; 1 bytes @ 0x0
  5928                           
  5929  0070                     ?_SW2Interrupt:	
  5930                           ; 1 bytes @ 0x0
  5931                           
  5932  0070                     ??_SW2Interrupt:	
  5933                           ; 1 bytes @ 0x0
  5934                           
  5935  0070                     ?_PMD_Initialize:	
  5936                           ; 1 bytes @ 0x0
  5937                           
  5938  0070                     ?_I2C1_Initialize:	
  5939                           ; 1 bytes @ 0x0
  5940                           
  5941  0070                     ?_OSCILLATOR_Initialize:	
  5942                           ; 1 bytes @ 0x0
  5943                           
  5944  0070                     ?_PWM6_Initialize:	
  5945                           ; 1 bytes @ 0x0
  5946                           
  5947  0070                     ?_TMR4_Initialize:	
  5948                           ; 1 bytes @ 0x0
  5949                           
  5950  0070                     ?_TMR2_Initialize:	
  5951                           ; 1 bytes @ 0x0
  5952                           
  5953  0070                     ?_TMR0_Initialize:	
  5954                           ; 1 bytes @ 0x0
  5955                           
  5956  0070                     ?_TMR4_ISR:	
  5957                           ; 1 bytes @ 0x0
  5958                           
  5959  0070                     ??_TMR4_ISR:	
  5960                           ; 1 bytes @ 0x0
  5961                           
  5962  0070                     ?_TMR4_DefaultInterruptHandler:	
  5963                           ; 1 bytes @ 0x0
  5964                           
  5965  0070                     ??_TMR4_DefaultInterruptHandler:	
  5966                           ; 1 bytes @ 0x0
  5967                           
  5968  0070                     ?_TMR4_CallBack:	
  5969                           ; 1 bytes @ 0x0
  5970                           
  5971  0070                     ??_TMR4_CallBack:	
  5972                           ; 1 bytes @ 0x0
  5973                           
  5974  0070                     ?_I2CRead:	
  5975                           ; 1 bytes @ 0x0
  5976                           
  5977  0070                     ?_EmptyTubes:	
  5978                           ; 1 bytes @ 0x0
  5979                           
  5980  0070                     ?_Loader:	
  5981                           ; 1 bytes @ 0x0
  5982                           
  5983  0070                     ?_TubesOn:	
  5984                           ; 1 bytes @ 0x0
  5985                           
  5986  0070                     ?_DateDisplay:	
  5987                           ; 1 bytes @ 0x0
  5988                           
  5989  0070                     ?_DMDisplay:	
  5990                           ; 1 bytes @ 0x0
  5991                           
  5992  0070                     ?_BCD2Bin:	
  5993                           ; 1 bytes @ 0x0
  5994                           
  5995  0070                     ?_SplitLoad:	
  5996                           ; 1 bytes @ 0x0
  5997                           
  5998  0070                     ?_DisplayBufSave:	
  5999                           ; 1 bytes @ 0x0
  6000                           
  6001  0070                     ?_TubesOff:	
  6002                           ; 1 bytes @ 0x0
  6003                           
  6004  0070                     ?_FixedWL:	
  6005                           ; 1 bytes @ 0x0
  6006                           
  6007  0070                     ?_Settings:	
  6008                           ; 1 bytes @ 0x0
  6009                           
  6010  0070                     ?_EEPROMBufferFill:	
  6011                           ; 1 bytes @ 0x0
  6012                           
  6013  0070                     ?_Buttons:	
  6014                           ; 1 bytes @ 0x0
  6015                           
  6016  0070                     ?_RandomWL:	
  6017                           ; 1 bytes @ 0x0
  6018                           
  6019  0070                     ?_TubeValuePicker:	
  6020                           ; 1 bytes @ 0x0
  6021                           
  6022  0070                     ?_EEPROM_Read:	
  6023                           ; 1 bytes @ 0x0
  6024                           
  6025  0070                     ?_RandomNum:	
  6026                           ; 1 bytes @ 0x0
  6027                           
  6028  0070                     ?_NumSplit:	
  6029                           ; 1 bytes @ 0x0
  6030                           
  6031  0070                     ?_I2COpen:	
  6032                           ; 1 bytes @ 0x0
  6033                           
  6034  0070                     ?_I2CIrqWait:	
  6035                           ; 1 bytes @ 0x0
  6036                           
  6037  0070                     ?_I2CFail:	
  6038                           ; 1 bytes @ 0x0
  6039                           
  6040  0070                     ?_I2CClose:	
  6041                           ; 1 bytes @ 0x0
  6042                           
  6043  0070                     ?_PIN_MANAGER_Initialize:	
  6044                           ; 1 bytes @ 0x0
  6045                           
  6046  0070                     ?_PIN_MANAGER_IOC:	
  6047                           ; 1 bytes @ 0x0
  6048                           
  6049  0070                     ?_SYSTEM_Initialize:	
  6050                           ; 1 bytes @ 0x0
  6051                           
  6052  0070                     ?_INTERRUPT_InterruptManager:	
  6053                           ; 1 bytes @ 0x0
  6054                           
  6055  0070                     ?_TMR0_StartTimer:	
  6056                           ; 1 bytes @ 0x0
  6057                           
  6058  0070                     ?_TMR4_Start:	
  6059                           ; 1 bytes @ 0x0
  6060                           
  6061  0070                     ?_TMR4_Stop:	
  6062                           ; 1 bytes @ 0x0
  6063                           
  6064  0070                     ?_Startup:	
  6065                           ; 1 bytes @ 0x0
  6066                           
  6067  0070                     ?_main:	
  6068                           ; 1 bytes @ 0x0
  6069                           
  6070  0070                     ?_Pulse:	
  6071                           ; 1 bytes @ 0x0
  6072                           
  6073  0070                     ?___eetoc:	
  6074                           ; 1 bytes @ 0x0
  6075                           
  6076                           
  6077                           ; 1 bytes @ 0x0
  6078  0070                     	ds	1
  6079  0071                     ??_PMD_Initialize:
  6080  0071                     ??_I2C1_Initialize:	
  6081                           ; 1 bytes @ 0x1
  6082                           
  6083  0071                     ??_OSCILLATOR_Initialize:	
  6084                           ; 1 bytes @ 0x1
  6085                           
  6086  0071                     ??_PWM6_Initialize:	
  6087                           ; 1 bytes @ 0x1
  6088                           
  6089  0071                     ??_TMR2_Initialize:	
  6090                           ; 1 bytes @ 0x1
  6091                           
  6092  0071                     ??_TMR0_Initialize:	
  6093                           ; 1 bytes @ 0x1
  6094                           
  6095  0071                     ?_TMR4_SetInterruptHandler:	
  6096                           ; 1 bytes @ 0x1
  6097                           
  6098  0071                     ??_EmptyTubes:	
  6099                           ; 1 bytes @ 0x1
  6100                           
  6101  0071                     ??_Loader:	
  6102                           ; 1 bytes @ 0x1
  6103                           
  6104  0071                     ??_BCD2Bin:	
  6105                           ; 1 bytes @ 0x1
  6106                           
  6107  0071                     ??_SplitLoad:	
  6108                           ; 1 bytes @ 0x1
  6109                           
  6110  0071                     ??_DisplayBufSave:	
  6111                           ; 1 bytes @ 0x1
  6112                           
  6113  0071                     ??_TubesOff:	
  6114                           ; 1 bytes @ 0x1
  6115                           
  6116  0071                     ??_Buttons:	
  6117                           ; 1 bytes @ 0x1
  6118                           
  6119  0071                     ?_EEPROM_Write:	
  6120                           ; 1 bytes @ 0x1
  6121                           
  6122  0071                     ??_EEPROM_Read:	
  6123                           ; 1 bytes @ 0x1
  6124                           
  6125  0071                     ??_NumSplit:	
  6126                           ; 1 bytes @ 0x1
  6127                           
  6128  0071                     ??_I2CIrqWait:	
  6129                           ; 1 bytes @ 0x1
  6130                           
  6131  0071                     ??_I2CClose:	
  6132                           ; 1 bytes @ 0x1
  6133                           
  6134  0071                     ??_PIN_MANAGER_Initialize:	
  6135                           ; 1 bytes @ 0x1
  6136                           
  6137  0071                     ??_PIN_MANAGER_IOC:	
  6138                           ; 1 bytes @ 0x1
  6139                           
  6140  0071                     ??_INTERRUPT_InterruptManager:	
  6141                           ; 1 bytes @ 0x1
  6142                           
  6143  0071                     ??_TMR0_StartTimer:	
  6144                           ; 1 bytes @ 0x1
  6145                           
  6146  0071                     ??_TMR4_Start:	
  6147                           ; 1 bytes @ 0x1
  6148                           
  6149  0071                     ??_TMR4_Stop:	
  6150                           ; 1 bytes @ 0x1
  6151                           
  6152  0071                     ?___eecpymem:	
  6153                           ; 1 bytes @ 0x1
  6154                           
  6155  0071                     ?_TMR0_ReadTimer:	
  6156                           ; 1 bytes @ 0x1
  6157                           
  6158  0071                     ?___wmul:	
  6159                           ; 2 bytes @ 0x1
  6160                           
  6161  0071                     ?___lmul:	
  6162                           ; 2 bytes @ 0x1
  6163                           
  6164  0071                     EEPROM_Read@addr:	
  6165                           ; 4 bytes @ 0x1
  6166                           
  6167  0071                     EEPROM_Write@data:	
  6168                           ; 1 bytes @ 0x1
  6169                           
  6170  0071                     ___eecpymem@from:	
  6171                           ; 1 bytes @ 0x1
  6172                           
  6173  0071                     TMR4_SetInterruptHandler@InterruptHandler:	
  6174                           ; 1 bytes @ 0x1
  6175                           
  6176  0071                     ___wmul@multiplier:	
  6177                           ; 2 bytes @ 0x1
  6178                           
  6179  0071                     ___lmul@multiplier:	
  6180                           ; 2 bytes @ 0x1
  6181                           
  6182                           
  6183                           ; 4 bytes @ 0x1
  6184  0071                     	ds	1
  6185  0072                     ??_EEPROMBufferFill:
  6186  0072                     ??_EEPROM_Write:	
  6187                           ; 1 bytes @ 0x2
  6188                           
  6189  0072                     ??_I2CFail:	
  6190                           ; 1 bytes @ 0x2
  6191                           
  6192  0072                     SplitLoad@first:	
  6193                           ; 1 bytes @ 0x2
  6194                           
  6195  0072                     EEPROM_Write@addr:	
  6196                           ; 1 bytes @ 0x2
  6197                           
  6198  0072                     NumSplit@input:	
  6199                           ; 1 bytes @ 0x2
  6200                           
  6201  0072                     BCD2Bin@input:	
  6202                           ; 1 bytes @ 0x2
  6203                           
  6204  0072                     ___eecpymem@size:	
  6205                           ; 1 bytes @ 0x2
  6206                           
  6207  0072                     Buttons@presstime:	
  6208                           ; 1 bytes @ 0x2
  6209                           
  6210                           
  6211                           ; 2 bytes @ 0x2
  6212  0072                     	ds	1
  6213  0073                     ??_TMR4_Initialize:
  6214  0073                     ??_TMR4_SetInterruptHandler:	
  6215                           ; 1 bytes @ 0x3
  6216                           
  6217  0073                     ??_I2COpen:	
  6218                           ; 1 bytes @ 0x3
  6219                           
  6220  0073                     ??_SYSTEM_Initialize:	
  6221                           ; 1 bytes @ 0x3
  6222                           
  6223  0073                     ??_TMR0_ReadTimer:	
  6224                           ; 1 bytes @ 0x3
  6225                           
  6226  0073                     ??___eecpymem:	
  6227                           ; 1 bytes @ 0x3
  6228                           
  6229  0073                     EEPROMBufferFill@addr:	
  6230                           ; 1 bytes @ 0x3
  6231                           
  6232  0073                     I2COpen@regptr:	
  6233                           ; 1 bytes @ 0x3
  6234                           
  6235  0073                     ___wmul@multiplicand:	
  6236                           ; 1 bytes @ 0x3
  6237                           
  6238                           
  6239                           ; 2 bytes @ 0x3
  6240  0073                     	ds	1
  6241  0074                     ??_I2CRead:
  6242  0074                     ??_I2CWrite:	
  6243                           ; 1 bytes @ 0x4
  6244                           
  6245  0074                     ??_TubeValuePicker:	
  6246                           ; 1 bytes @ 0x4
  6247                           
  6248  0074                     I2CWrite@reg:	
  6249                           ; 1 bytes @ 0x4
  6250                           
  6251  0074                     ___eecpymem@cp:	
  6252                           ; 1 bytes @ 0x4
  6253                           
  6254                           
  6255                           ; 1 bytes @ 0x4
  6256  0074                     	ds	1
  6257  0075                     ??___wmul:
  6258  0075                     TubeValuePicker@start:	
  6259                           ; 1 bytes @ 0x5
  6260                           
  6261  0075                     I2CRead@reg:	
  6262                           ; 1 bytes @ 0x5
  6263                           
  6264  0075                     ___eecpymem@to:	
  6265                           ; 1 bytes @ 0x5
  6266                           
  6267  0075                     ___wmul@product:	
  6268                           ; 1 bytes @ 0x5
  6269                           
  6270  0075                     ___lmul@multiplicand:	
  6271                           ; 2 bytes @ 0x5
  6272                           
  6273                           
  6274                           ; 4 bytes @ 0x5
  6275  0075                     	ds	1
  6276  0076                     ??___eetoc:
  6277  0076                     ?___eetoi:	
  6278                           ; 1 bytes @ 0x6
  6279                           
  6280  0076                     I2CRead@receiveddata:	
  6281                           ; 2 bytes @ 0x6
  6282                           
  6283                           
  6284                           ; 1 bytes @ 0x6
  6285  0076                     	ds	1
  6286  0077                     ??_BCDSetInc:
  6287  0077                     ?___awdiv:	
  6288                           ; 1 bytes @ 0x7
  6289                           
  6290  0077                     ___eetoc@data:	
  6291                           ; 2 bytes @ 0x7
  6292                           
  6293  0077                     ___awdiv@divisor:	
  6294                           ; 1 bytes @ 0x7
  6295                           
  6296                           
  6297                           ; 2 bytes @ 0x7
  6298  0077                     	ds	1
  6299  0078                     ??___eetoi:
  6300  0078                     ___eetoc@addr:	
  6301                           ; 1 bytes @ 0x8
  6302                           
  6303  0078                     TMR0_ReadTimer@readVal:	
  6304                           ; 1 bytes @ 0x8
  6305                           
  6306                           
  6307                           ; 2 bytes @ 0x8
  6308  0078                     	ds	1
  6309  0079                     ??___lmul:
  6310  0079                     ??___awmod:	
  6311                           ; 1 bytes @ 0x9
  6312                           
  6313  0079                     ___awdiv@dividend:	
  6314                           ; 1 bytes @ 0x9
  6315                           
  6316                           
  6317                           ; 2 bytes @ 0x9
  6318  0079                     	ds	1
  6319  007A                     TMR0_ReadTimer@readValLow:
  6320  007A                     ___awmod@counter:	
  6321                           ; 1 bytes @ 0xA
  6322                           
  6323                           
  6324                           ; 1 bytes @ 0xA
  6325  007A                     	ds	1
  6326  007B                     ??___awdiv:
  6327  007B                     TMR0_ReadTimer@readValHigh:	
  6328                           ; 1 bytes @ 0xB
  6329                           
  6330  007B                     ___awmod@sign:	
  6331                           ; 1 bytes @ 0xB
  6332                           
  6333                           
  6334                           ; 1 bytes @ 0xB
  6335  007B                     	ds	1
  6336  007C                     ??_srand:
  6337                           
  6338                           	psect	cstackBANK0
  6339  0053                     __pcstackBANK0:	
  6340                           ; 1 bytes @ 0xC
  6341                           
  6342  0053                     ?_srand:
  6343  0053                     ___eetoi@addr:	
  6344                           ; 1 bytes @ 0x0
  6345                           
  6346  0053                     ___awdiv@counter:	
  6347                           ; 1 bytes @ 0x0
  6348                           
  6349  0053                     srand@s:	
  6350                           ; 1 bytes @ 0x0
  6351                           
  6352  0053                     ___lmul@product:	
  6353                           ; 2 bytes @ 0x0
  6354                           
  6355  0053                     Loader@shftregpln:	
  6356                           ; 4 bytes @ 0x0
  6357                           
  6358                           
  6359                           ; 12 bytes @ 0x0
  6360  0053                     	ds	1
  6361  0054                     ___awdiv@sign:
  6362  0054                     ___eetoi@data:	
  6363                           ; 1 bytes @ 0x1
  6364                           
  6365                           
  6366                           ; 2 bytes @ 0x1
  6367  0054                     	ds	1
  6368  0055                     ___awdiv@quotient:
  6369                           
  6370                           ; 2 bytes @ 0x2
  6371  0055                     	ds	2
  6372  0057                     ?_PWM6_LoadDutyValue:
  6373  0057                     ?_rand:	
  6374                           ; 1 bytes @ 0x4
  6375                           
  6376  0057                     PWM6_LoadDutyValue@dutyValue:	
  6377                           ; 2 bytes @ 0x4
  6378                           
  6379                           
  6380                           ; 2 bytes @ 0x4
  6381  0057                     	ds	2
  6382  0059                     ??_rand:
  6383  0059                     ??_PWM6_LoadDutyValue:	
  6384                           ; 1 bytes @ 0x6
  6385                           
  6386                           
  6387                           ; 1 bytes @ 0x6
  6388  0059                     	ds	2
  6389  005B                     ??_TubesOn:
  6390  005B                     ??_Pulse:	
  6391                           ; 1 bytes @ 0x8
  6392                           
  6393                           
  6394                           ; 1 bytes @ 0x8
  6395  005B                     	ds	2
  6396  005D                     ?___awmod:
  6397  005D                     ___awmod@divisor:	
  6398                           ; 2 bytes @ 0xA
  6399                           
  6400                           
  6401                           ; 2 bytes @ 0xA
  6402  005D                     	ds	2
  6403  005F                     Loader@regp:
  6404  005F                     ___awmod@dividend:	
  6405                           ; 1 bytes @ 0xC
  6406                           
  6407                           
  6408                           ; 2 bytes @ 0xC
  6409  005F                     	ds	1
  6410  0060                     ?_I2CWrite:
  6411  0060                     ?_OtherSetInc:	
  6412                           ; 1 bytes @ 0xD
  6413                           
  6414  0060                     OtherSetInc@min:	
  6415                           ; 1 bytes @ 0xD
  6416                           
  6417  0060                     I2CWrite@data:	
  6418                           ; 1 bytes @ 0xD
  6419                           
  6420                           
  6421                           ; 1 bytes @ 0xD
  6422  0060                     	ds	1
  6423  0061                     ?_BCDSetInc:
  6424  0061                     ??_RandomNum:	
  6425                           ; 1 bytes @ 0xE
  6426                           
  6427  0061                     ??_Startup:	
  6428                           ; 1 bytes @ 0xE
  6429                           
  6430  0061                     BCDSetInc@min:	
  6431                           ; 1 bytes @ 0xE
  6432                           
  6433  0061                     OtherSetInc@eeaddr:	
  6434                           ; 1 bytes @ 0xE
  6435                           
  6436                           
  6437                           ; 1 bytes @ 0xE
  6438  0061                     	ds	1
  6439  0062                     BCDSetInc@i2creg:
  6440  0062                     OtherSetInc@value:	
  6441                           ; 1 bytes @ 0xF
  6442                           
  6443  0062                     RandomNum@upper:	
  6444                           ; 1 bytes @ 0xF
  6445                           
  6446                           
  6447                           ; 1 bytes @ 0xF
  6448  0062                     	ds	1
  6449  0063                     ??_OtherSetInc:
  6450  0063                     BCDSetInc@max:	
  6451                           ; 1 bytes @ 0x10
  6452                           
  6453  0063                     RandomNum@rand_num:	
  6454                           ; 1 bytes @ 0x10
  6455                           
  6456                           
  6457                           ; 1 bytes @ 0x10
  6458  0063                     	ds	1
  6459  0064                     ??_FixedWL:
  6460  0064                     ??_RandomWL:	
  6461                           ; 1 bytes @ 0x11
  6462                           
  6463  0064                     BCDSetInc@value:	
  6464                           ; 1 bytes @ 0x11
  6465                           
  6466                           
  6467                           ; 1 bytes @ 0x11
  6468  0064                     	ds	1
  6469  0065                     RandomWL@WLtype:
  6470                           
  6471                           ; 1 bytes @ 0x12
  6472  0065                     	ds	1
  6473  0066                     ??_DMDisplay:
  6474                           
  6475                           ; 1 bytes @ 0x13
  6476  0066                     	ds	1
  6477  0067                     DMDisplay@seedadr:
  6478  0067                     OtherSetInc@max:	
  6479                           ; 1 bytes @ 0x14
  6480                           
  6481                           
  6482                           ; 1 bytes @ 0x14
  6483  0067                     	ds	1
  6484  0068                     ??_Settings:
  6485                           
  6486                           ; 1 bytes @ 0x15
  6487  0068                     	ds	2
  6488  006A                     ??_DateDisplay:
  6489                           
  6490                           ; 1 bytes @ 0x17
  6491  006A                     	ds	1
  6492  006B                     ??_main:
  6493                           
  6494                           ; 1 bytes @ 0x18
  6495  006B                     	ds	1
  6496  006C                     main@oldsec:
  6497                           
  6498                           ; 1 bytes @ 0x19
  6499  006C                     	ds	1
  6500  006D                     main@spincount:
  6501                           
  6502                           ; 1 bytes @ 0x1A
  6503  006D                     	ds	1
  6504  006E                     main@shift:
  6505                           
  6506                           ; 1 bytes @ 0x1B
  6507  006E                     	ds	1
  6508  006F                     main@newsec:
  6509                           
  6510                           ; 1 bytes @ 0x1C
  6511  006F                     	ds	1
  6512                           
  6513                           	psect	maintext
  6514  0045                     __pmaintext:	
  6515 ;;
  6516 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  6517 ;;
  6518 ;; *************** function _main *****************
  6519 ;; Defined at:
  6520 ;;		line 164 in file "main.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;		None
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;  newsec          1   28[BANK0 ] unsigned char 
  6525 ;;  shift           1   27[BANK0 ] unsigned char 
  6526 ;;  spincount       1   26[BANK0 ] unsigned char 
  6527 ;;  oldsec          1   25[BANK0 ] unsigned char 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  1    wreg      void 
  6530 ;; Registers used:
  6531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6532 ;; Tracked objects:
  6533 ;;		On entry : B3F/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6537 ;;      Params:         0       0       0       0       0       0       0       0
  6538 ;;      Locals:         0       4       0       0       0       0       0       0
  6539 ;;      Temps:          0       1       0       0       0       0       0       0
  6540 ;;      Totals:         0       5       0       0       0       0       0       0
  6541 ;;Total ram usage:        5 bytes
  6542 ;; Hardware stack levels required when called: 11
  6543 ;; This function calls:
  6544 ;;		_BCD2Bin
  6545 ;;		_DMDisplay
  6546 ;;		_DateDisplay
  6547 ;;		_DisplayBufSave
  6548 ;;		_FixedWL
  6549 ;;		_I2CRead
  6550 ;;		_I2CWrite
  6551 ;;		_Loader
  6552 ;;		_SplitLoad
  6553 ;;		_Startup
  6554 ;;		_TubesOff
  6555 ;;		_TubesOn
  6556 ;;		___eetoi
  6557 ;; This function is called by:
  6558 ;;		Startup code after reset
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           
  6563                           ;psect for function _main
  6564  0045                     _main:
  6565                           
  6566                           ;main.c: 166:     uint8_t newsec;;main.c: 167:     uint8_t oldsec;;main.c: 168:     uint
      +                          8_t spincount;;main.c: 169:     uint8_t shift;;main.c: 171:     if (!StartupDone)
  6567                           
  6568                           ;incstack = 0
  6569                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6570  0045  187C               	btfsc	_StartupDone/(0+8),_StartupDone& (0+7)
  6571  0046  284A               	goto	l5922
  6572                           
  6573                           ;main.c: 172:         Startup();
  6574  0047  3184  24BA  3180   	fcall	_Startup
  6575  004A                     l5922:
  6576                           
  6577                           ;main.c: 173:     (INTCONbits.GIE = 1);
  6578  004A  178B               	bsf	11,7	;volatile
  6579  004B                     l5924:
  6580                           
  6581                           ;main.c: 175:     {;main.c: 176:         if (GoDate == 1)
  6582  004B  1E7C               	btfss	_GoDate/(0+8),_GoDate& (0+7)
  6583  004C  2851               	goto	l524
  6584                           
  6585                           ;main.c: 177:             DateDisplay();
  6586  004D  3186  262C  3180   	fcall	_DateDisplay
  6587  0050  2856               	goto	l5930
  6588  0051                     l524:	
  6589                           ;main.c: 178:         else if (GoDM == 1)
  6590                           
  6591  0051  1DFC               	btfss	_GoDM/(0+8),_GoDM& (0+7)
  6592  0052  2856               	goto	l5930
  6593                           
  6594                           ;main.c: 179:             DMDisplay();
  6595  0053  3185  2540  3180   	fcall	_DMDisplay
  6596  0056                     l5930:
  6597                           
  6598                           ;main.c: 180:         oldsec = newsec;
  6599  0056  0140               	movlb	0	; select bank0
  6600  0057  086F               	movf	main@newsec,w
  6601  0058  00EB               	movwf	??_main
  6602  0059  086B               	movf	??_main,w
  6603  005A  00EC               	movwf	main@oldsec
  6604                           
  6605                           ;main.c: 181:         newsec = I2CRead(0x00);
  6606  005B  3000               	movlw	0
  6607  005C  318E  2685  3180   	fcall	_I2CRead
  6608  005F  0140               	movlb	0	; select bank0
  6609  0060  00EB               	movwf	??_main
  6610  0061  086B               	movf	??_main,w
  6611  0062  00EF               	movwf	main@newsec
  6612                           
  6613                           ;main.c: 182:         BCD2Bin(newsec);
  6614  0063  086F               	movf	main@newsec,w
  6615  0064  318C  24D4  3180   	fcall	_BCD2Bin
  6616                           
  6617                           ;main.c: 183:         if (newsec != oldsec)
  6618  0067  086F               	movf	main@newsec,w
  6619  0068  066C               	xorwf	main@oldsec,w
  6620  0069  1903               	skipnz
  6621  006A  284B               	goto	l5924
  6622                           
  6623                           ;main.c: 184:         {;main.c: 185:             SplitLoad(6);
  6624  006B  3006               	movlw	6
  6625  006C  318C  24AF  3180   	fcall	_SplitLoad
  6626                           
  6627                           ;main.c: 186:             if (newsec == 0x30)
  6628  006F  3030               	movlw	48
  6629  0070  066F               	xorwf	main@newsec,w
  6630  0071  1D03               	btfss	3,2
  6631  0072  28B0               	goto	l5962
  6632                           
  6633                           ;main.c: 187:             {;main.c: 188:                 DisplayBuf[0] = 0;
  6634  0073  01B0               	clrf	_DisplayBuf
  6635                           
  6636                           ;main.c: 189:                 DisplayBuf[2] = 0;
  6637  0074  01B2               	clrf	_DisplayBuf+2
  6638                           
  6639                           ;main.c: 190:                 DisplayBuf[5] = 0;
  6640  0075  01B5               	clrf	_DisplayBuf+5
  6641                           
  6642                           ;main.c: 191:                 for (spincount=41; spincount--;)
  6643  0076  3029               	movlw	41
  6644  0077  00EB               	movwf	??_main
  6645  0078  086B               	movf	??_main,w
  6646  0079  00ED               	movwf	main@spincount
  6647  007A                     l5958:
  6648  007A  3001               	movlw	1
  6649  007B  0140               	movlb	0	; select bank0
  6650  007C  02ED               	subwf	main@spincount,f
  6651  007D  0A6D               	incf	main@spincount,w
  6652  007E  1903               	btfsc	3,2
  6653  007F  28AC               	goto	l5960
  6654                           
  6655                           ;main.c: 192:                 {;main.c: 193:                     for (Pos=8; Pos--;)
  6656  0080  3008               	movlw	8
  6657  0081  00EB               	movwf	??_main
  6658  0082  086B               	movf	??_main,w
  6659  0083  00CB               	movwf	_Pos
  6660  0084                     l5952:
  6661  0084  3001               	movlw	1
  6662  0085  02CB               	subwf	_Pos,f
  6663  0086  0A4B               	incf	_Pos,w
  6664  0087  1903               	btfsc	3,2
  6665  0088  289F               	goto	l5954
  6666                           
  6667                           ;main.c: 194:                     {;main.c: 195:                         DisplayBuf[Pos]
      +                          ++;
  6668  0089  3001               	movlw	1
  6669  008A  00EB               	movwf	??_main
  6670  008B  084B               	movf	_Pos,w
  6671  008C  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
  6672  008D  0086               	movwf	6
  6673  008E  0187               	clrf	7
  6674  008F  086B               	movf	??_main,w
  6675  0090  0781               	addwf	1,f
  6676                           
  6677                           ;main.c: 196:                         if (DisplayBuf[Pos] == 10)
  6678  0091  084B               	movf	_Pos,w
  6679  0092  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
  6680  0093  0086               	movwf	6
  6681  0094  0187               	clrf	7
  6682  0095  300A               	movlw	10
  6683  0096  0601               	xorwf	1,w
  6684  0097  1D03               	btfss	3,2
  6685  0098  2884               	goto	l5952
  6686                           
  6687                           ;main.c: 197:                             DisplayBuf[Pos] = 0;
  6688  0099  084B               	movf	_Pos,w
  6689  009A  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
  6690  009B  0086               	movwf	6
  6691  009C  0187               	clrf	7
  6692  009D  0181               	clrf	1
  6693  009E  2884               	goto	l5952
  6694  009F                     l5954:
  6695                           
  6696                           ;main.c: 199:                     Loader();
  6697  009F  318F  270F  3180   	fcall	_Loader
  6698                           
  6699                           ;main.c: 200:                     _delay(16000);
  6700  00A2  3015               	movlw	21
  6701  00A3  0140               	movlb	0	; select bank0
  6702  00A4  00EB               	movwf	??_main
  6703  00A5  30C6               	movlw	198
  6704  00A6                     u4607:
  6705  00A6  0B89               	decfsz	9,f
  6706  00A7  28A6               	goto	u4607
  6707  00A8  0BEB               	decfsz	??_main,f
  6708  00A9  28A6               	goto	u4607
  6709  00AA  0000               	nop
  6710  00AB  287A               	goto	l5958
  6711  00AC                     l5960:
  6712                           
  6713                           ;main.c: 202:                 DateDisplay();
  6714  00AC  3186  262C  3180   	fcall	_DateDisplay
  6715                           
  6716                           ;main.c: 203:             }
  6717  00AF  291C               	goto	l6010
  6718  00B0                     l5962:
  6719  00B0  3059               	movlw	89
  6720  00B1  066F               	xorwf	main@newsec,w
  6721  00B2  1D03               	btfss	3,2
  6722  00B3  291C               	goto	l6010
  6723                           
  6724                           ;main.c: 205:             {;main.c: 206:                 DisplayBufSave();
  6725  00B4  318D  2535  3180   	fcall	_DisplayBufSave
  6726                           
  6727                           ;main.c: 207:                 for (shift=8; shift--;)
  6728  00B7  3008               	movlw	8
  6729  00B8  00EB               	movwf	??_main
  6730  00B9  086B               	movf	??_main,w
  6731  00BA  00EE               	movwf	main@shift
  6732  00BB                     l5986:
  6733  00BB  3001               	movlw	1
  6734  00BC  0140               	movlb	0	; select bank0
  6735  00BD  02EE               	subwf	main@shift,f
  6736  00BE  0A6E               	incf	main@shift,w
  6737  00BF  1903               	btfsc	3,2
  6738  00C0  28E8               	goto	l5988
  6739                           
  6740                           ;main.c: 208:                 {;main.c: 209:                     for (Pos=0; Pos<8; Pos+
      +                          +)
  6741  00C1  01CB               	clrf	_Pos
  6742  00C2                     l5970:
  6743  00C2  3008               	movlw	8
  6744  00C3  024B               	subwf	_Pos,w
  6745  00C4  1803               	btfsc	3,0
  6746  00C5  28D7               	goto	l5980
  6747                           
  6748                           ;main.c: 210:                     {;main.c: 211:                         DisplayBuf[Pos]
      +                           = DisplayBuf[Pos + 1];
  6749  00C6  084B               	movf	_Pos,w
  6750  00C7  3E31               	addlw	(low ((_DisplayBuf| 0+1)))& (0+255)
  6751  00C8  0086               	movwf	6
  6752  00C9  0187               	clrf	7
  6753  00CA  0801               	movf	1,w
  6754  00CB  00EB               	movwf	??_main
  6755  00CC  084B               	movf	_Pos,w
  6756  00CD  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
  6757  00CE  0086               	movwf	6
  6758  00CF  0187               	clrf	7
  6759  00D0  086B               	movf	??_main,w
  6760  00D1  0081               	movwf	1
  6761                           
  6762                           ;main.c: 212:                     }
  6763  00D2  3001               	movlw	1
  6764  00D3  00EB               	movwf	??_main
  6765  00D4  086B               	movf	??_main,w
  6766  00D5  07CB               	addwf	_Pos,f
  6767  00D6  28C2               	goto	l5970
  6768  00D7                     l5980:
  6769                           
  6770                           ;main.c: 213:                     DisplayBuf[7] = 10;
  6771  00D7  300A               	movlw	10
  6772  00D8  00EB               	movwf	??_main
  6773  00D9  086B               	movf	??_main,w
  6774  00DA  00B7               	movwf	_DisplayBuf+7
  6775                           
  6776                           ;main.c: 214:                     Loader();
  6777  00DB  318F  270F  3180   	fcall	_Loader
  6778                           
  6779                           ;main.c: 215:                     _delay(40000);
  6780  00DE  3034               	movlw	52
  6781  00DF  0140               	movlb	0	; select bank0
  6782  00E0  00EB               	movwf	??_main
  6783  00E1  30F1               	movlw	241
  6784  00E2                     u4617:
  6785  00E2  0B89               	decfsz	9,f
  6786  00E3  28E2               	goto	u4617
  6787  00E4  0BEB               	decfsz	??_main,f
  6788  00E5  28E2               	goto	u4617
  6789  00E6  3200               	nop2
  6790  00E7  28BB               	goto	l5986
  6791  00E8                     l5988:
  6792                           
  6793                           ;main.c: 217:                 for (shift=8; shift--;)
  6794  00E8  3008               	movlw	8
  6795  00E9  00EB               	movwf	??_main
  6796  00EA  086B               	movf	??_main,w
  6797  00EB  00EE               	movwf	main@shift
  6798  00EC                     l6008:
  6799  00EC  3001               	movlw	1
  6800  00ED  02EE               	subwf	main@shift,f
  6801  00EE  0A6E               	incf	main@shift,w
  6802  00EF  1903               	btfsc	3,2
  6803  00F0  291C               	goto	l6010
  6804                           
  6805                           ;main.c: 218:                 {;main.c: 219:                     DisplayBuf[7] = Display
      +                          Save[shift];
  6806  00F1  086E               	movf	main@shift,w
  6807  00F2  3E20               	addlw	(low (_DisplaySave| 0))& (0+255)
  6808  00F3  0086               	movwf	6
  6809  00F4  0187               	clrf	7
  6810  00F5  0801               	movf	1,w
  6811  00F6  00EB               	movwf	??_main
  6812  00F7  086B               	movf	??_main,w
  6813  00F8  00B7               	movwf	_DisplayBuf+7
  6814                           
  6815                           ;main.c: 220:                     Loader();
  6816  00F9  318F  270F  3180   	fcall	_Loader
  6817                           
  6818                           ;main.c: 221:                     _delay(40000);
  6819  00FC  3034               	movlw	52
  6820  00FD  0140               	movlb	0	; select bank0
  6821  00FE  00EB               	movwf	??_main
  6822  00FF  30F1               	movlw	241
  6823  0100                     u4627:
  6824  0100  0B89               	decfsz	9,f
  6825  0101  2900               	goto	u4627
  6826  0102  0BEB               	decfsz	??_main,f
  6827  0103  2900               	goto	u4627
  6828  0104  3200               	nop2
  6829                           
  6830                           ;main.c: 222:                     for (Pos=0; Pos<8; Pos++)
  6831  0105  0140               	movlb	0	; select bank0
  6832  0106  01CB               	clrf	_Pos
  6833  0107                     l5998:
  6834  0107  3008               	movlw	8
  6835  0108  024B               	subwf	_Pos,w
  6836  0109  1803               	btfsc	3,0
  6837  010A  28EC               	goto	l6008
  6838                           
  6839                           ;main.c: 223:                     {;main.c: 224:                         DisplayBuf[Pos]
      +                           = DisplayBuf[Pos + 1];
  6840  010B  084B               	movf	_Pos,w
  6841  010C  3E31               	addlw	(low ((_DisplayBuf| 0+1)))& (0+255)
  6842  010D  0086               	movwf	6
  6843  010E  0187               	clrf	7
  6844  010F  0801               	movf	1,w
  6845  0110  00EB               	movwf	??_main
  6846  0111  084B               	movf	_Pos,w
  6847  0112  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
  6848  0113  0086               	movwf	6
  6849  0114  0187               	clrf	7
  6850  0115  086B               	movf	??_main,w
  6851  0116  0081               	movwf	1
  6852                           
  6853                           ;main.c: 225:                     }
  6854  0117  3001               	movlw	1
  6855  0118  00EB               	movwf	??_main
  6856  0119  086B               	movf	??_main,w
  6857  011A  07CB               	addwf	_Pos,f
  6858  011B  2907               	goto	l5998
  6859  011C                     l6010:
  6860                           
  6861                           ;main.c: 228:             BCD2Bin(I2CRead(0x01));
  6862  011C  3001               	movlw	1
  6863  011D  318E  2685  3180   	fcall	_I2CRead
  6864  0120  318C  24D4  3180   	fcall	_BCD2Bin
  6865                           
  6866                           ;main.c: 229:             SplitLoad(3);
  6867  0123  3003               	movlw	3
  6868  0124  318C  24AF  3180   	fcall	_SplitLoad
  6869                           
  6870                           ;main.c: 230:             Temp = I2CRead(0x02);
  6871  0127  3002               	movlw	2
  6872  0128  318E  2685  3180   	fcall	_I2CRead
  6873  012B  0140               	movlb	0	; select bank0
  6874  012C  00EB               	movwf	??_main
  6875  012D  086B               	movf	??_main,w
  6876  012E  00C7               	movwf	_Temp
  6877                           
  6878                           ;main.c: 231:             BCD2Bin(Temp);
  6879  012F  0847               	movf	_Temp,w
  6880  0130  318C  24D4  3180   	fcall	_BCD2Bin
  6881                           
  6882                           ;main.c: 232:             if (Temp == BlankStart)
  6883  0133  0847               	movf	_Temp,w
  6884  0134  0649               	xorwf	_BlankStart,w
  6885  0135  1D03               	skipz
  6886  0136  293B               	goto	l6022
  6887                           
  6888                           ;main.c: 233:                 TubesOff();
  6889  0137  318B  23F1  3180   	fcall	_TubesOff
  6890  013A  2942               	goto	l6026
  6891  013B                     l6022:
  6892  013B  0847               	movf	_Temp,w
  6893  013C  0648               	xorwf	_BlankEnd,w
  6894  013D  1D03               	skipz
  6895  013E  2942               	goto	l6026
  6896                           
  6897                           ;main.c: 235:                 TubesOn();
  6898  013F  318E  2661  3180   	fcall	_TubesOn
  6899  0142                     l6026:
  6900                           
  6901                           ;main.c: 236:             SplitLoad(0);
  6902  0142  3000               	movlw	0
  6903  0143  318C  24AF  3180   	fcall	_SplitLoad
  6904                           
  6905                           ;main.c: 237:             if (HourType == 1)
  6906  0146  0350               	decf	_HourType,w
  6907  0147  1D03               	btfss	3,2
  6908  0148  2958               	goto	l551
  6909                           
  6910                           ;main.c: 238:             {;main.c: 239:                 if (Temp > 0x12)
  6911  0149  3013               	movlw	19
  6912  014A  0247               	subwf	_Temp,w
  6913  014B  1C03               	skipc
  6914  014C  2951               	goto	l552
  6915                           
  6916                           ;main.c: 240:                 {;main.c: 241:                     DisplayBuf[0] -= 1;
  6917  014D  3001               	movlw	1
  6918  014E  02B0               	subwf	_DisplayBuf,f
  6919                           
  6920                           ;main.c: 242:                     DisplayBuf[1] -= 2;
  6921  014F  3002               	movlw	2
  6922  0150  02B1               	subwf	_DisplayBuf+1,f
  6923  0151                     l552:	
  6924                           ;main.c: 243:                 }
  6925                           
  6926                           
  6927                           ;main.c: 244:                 if (DisplayBuf[0] == 0)
  6928  0151  0830               	movf	_DisplayBuf,w
  6929  0152  1D03               	btfss	3,2
  6930  0153  2958               	goto	l551
  6931                           
  6932                           ;main.c: 245:                 {;main.c: 246:                     DisplayBuf[0] = 10;
  6933  0154  300A               	movlw	10
  6934  0155  00EB               	movwf	??_main
  6935  0156  086B               	movf	??_main,w
  6936  0157  00B0               	movwf	_DisplayBuf
  6937  0158                     l551:	
  6938                           ;main.c: 248:             }
  6939                           
  6940                           
  6941                           ;main.c: 249:             DisplayBuf[2] = 0x52;
  6942  0158  3052               	movlw	82
  6943  0159  00EB               	movwf	??_main
  6944  015A  086B               	movf	??_main,w
  6945  015B  00B2               	movwf	_DisplayBuf+2
  6946                           
  6947                           ;main.c: 250:             DisplayBuf[5] = 0x52;
  6948  015C  3052               	movlw	82
  6949  015D  00EB               	movwf	??_main
  6950  015E  086B               	movf	??_main,w
  6951  015F  00B5               	movwf	_DisplayBuf+5
  6952                           
  6953                           ;main.c: 251:             if (DisplayBuf[7] & 1)
  6954  0160  1C37               	btfss	_DisplayBuf+7,0
  6955  0161  296A               	goto	l6040
  6956                           
  6957                           ;main.c: 252:             {;main.c: 253:                 DisplayBuf[2] = 0x4C;
  6958  0162  304C               	movlw	76
  6959  0163  00EB               	movwf	??_main
  6960  0164  086B               	movf	??_main,w
  6961  0165  00B2               	movwf	_DisplayBuf+2
  6962                           
  6963                           ;main.c: 254:                 DisplayBuf[5] = 0x4C;
  6964  0166  304C               	movlw	76
  6965  0167  00EB               	movwf	??_main
  6966  0168  086B               	movf	??_main,w
  6967  0169  00B5               	movwf	_DisplayBuf+5
  6968  016A                     l6040:
  6969                           
  6970                           ;main.c: 256:             if (TimeAdj != 0)
  6971  016A  083A               	movf	_TimeAdj,w
  6972  016B  043B               	iorwf	_TimeAdj+1,w
  6973  016C  1903               	btfsc	3,2
  6974  016D  2993               	goto	l6058
  6975                           
  6976                           ;main.c: 257:             {;main.c: 258:                 TimeAdj--;
  6977  016E  3001               	movlw	1
  6978  016F  02BA               	subwf	_TimeAdj,f
  6979  0170  3000               	movlw	0
  6980  0171  3BBB               	subwfb	_TimeAdj+1,f
  6981                           
  6982                           ;main.c: 259:                 if (TimeAdj == 0)
  6983  0172  083A               	movf	_TimeAdj,w
  6984  0173  043B               	iorwf	_TimeAdj+1,w
  6985  0174  1D03               	btfss	3,2
  6986  0175  2993               	goto	l6058
  6987  0176                     l6048:
  6988  0176  3000               	movlw	0
  6989  0177  318E  2685  3180   	fcall	_I2CRead
  6990  017A  3A01               	xorlw	1
  6991  017B  1D03               	skipz
  6992  017C  2976               	goto	l6048
  6993                           
  6994                           ;main.c: 262:                     if (TimeFast == 1)
  6995  017D  0140               	movlb	0	; select bank0
  6996  017E  034A               	decf	_TimeFast,w
  6997  017F  1D03               	btfss	3,2
  6998  0180  2983               	goto	l6054
  6999                           
  7000                           ;main.c: 263:                         I2CWrite(0x00, 0b00000000);
  7001  0181  01E0               	clrf	I2CWrite@data
  7002  0182  2987               	goto	L1
  7003  0183                     l6054:
  7004                           
  7005                           ;main.c: 265:                         I2CWrite(0x00, 0b00000010);
  7006  0183  3002               	movlw	2
  7007  0184  00EB               	movwf	??_main
  7008  0185  086B               	movf	??_main,w
  7009  0186  00E0               	movwf	I2CWrite@data
  7010  0187                     L1:
  7011  0187  3000               	movlw	0
  7012  0188  318D  250D  3180   	fcall	_I2CWrite
  7013                           
  7014                           ;main.c: 266:                     TimeAdj = TimeAdjStore;
  7015  018B  307D               	movlw	(low _TimeAdjStore)& (0+255)
  7016  018C  318C  24FA  3180   	fcall	___eetoi
  7017  018F  0877               	movf	?___eetoi+1,w
  7018  0190  00BB               	movwf	_TimeAdj+1
  7019  0191  0876               	movf	?___eetoi,w
  7020  0192  00BA               	movwf	_TimeAdj
  7021  0193                     l6058:
  7022                           
  7023                           ;main.c: 269:             if ((DisplayBuf[3]|DisplayBuf[4]|DisplayBuf[6]|DisplayBuf[7]) 
      +                          == 0)
  7024  0193  0833               	movf	_DisplayBuf+3,w
  7025  0194  0434               	iorwf	_DisplayBuf+4,w
  7026  0195  0436               	iorwf	_DisplayBuf+6,w
  7027  0196  0437               	iorwf	_DisplayBuf+7,w
  7028  0197  1D03               	btfss	3,2
  7029  0198  299F               	goto	l6064
  7030                           
  7031                           ;main.c: 270:             {;main.c: 271:                 DisplayBufSave();
  7032  0199  318D  2535  3180   	fcall	_DisplayBufSave
  7033                           
  7034                           ;main.c: 272:                 FixedWL();
  7035  019C  3185  25B9  3180   	fcall	_FixedWL
  7036  019F                     l6064:
  7037                           
  7038                           ;main.c: 274:             Loader();
  7039  019F  318F  270F  3180   	fcall	_Loader
  7040                           
  7041                           ;main.c: 275:             _delay(16000);
  7042  01A2  3015               	movlw	21
  7043  01A3  0140               	movlb	0	; select bank0
  7044  01A4  00EB               	movwf	??_main
  7045  01A5  30C6               	movlw	198
  7046  01A6                     u4637:
  7047  01A6  0B89               	decfsz	9,f
  7048  01A7  29A6               	goto	u4637
  7049  01A8  0BEB               	decfsz	??_main,f
  7050  01A9  29A6               	goto	u4637
  7051  01AA  0000               	nop
  7052  01AB  284B               	goto	l5924
  7053  01AC                     __end_of_main:
  7054                           
  7055                           	psect	text1
  7056  0BF1                     __ptext1:	
  7057 ;; *************** function _TubesOff *****************
  7058 ;; Defined at:
  7059 ;;		line 42 in file "Subroutines.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;		None
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;		None
  7064 ;; Return value:  Size  Location     Type
  7065 ;;                  1    wreg      void 
  7066 ;; Registers used:
  7067 ;;		None
  7068 ;; Tracked objects:
  7069 ;;		On entry : 3F/0
  7070 ;;		On exit  : 3F/0
  7071 ;;		Unchanged: 0/0
  7072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7073 ;;      Params:         0       0       0       0       0       0       0       0
  7074 ;;      Locals:         0       0       0       0       0       0       0       0
  7075 ;;      Temps:          0       0       0       0       0       0       0       0
  7076 ;;      Totals:         0       0       0       0       0       0       0       0
  7077 ;;Total ram usage:        0 bytes
  7078 ;; Hardware stack levels used: 1
  7079 ;; Hardware stack levels required when called: 4
  7080 ;; This function calls:
  7081 ;;		Nothing
  7082 ;; This function is called by:
  7083 ;;		_main
  7084 ;; This function uses a non-reentrant model
  7085 ;;
  7086                           
  7087                           
  7088                           ;psect for function _TubesOff
  7089  0BF1                     _TubesOff:
  7090                           
  7091                           ;Subroutines.c: 44:     PWM6CONbits.PWM6EN = 0;
  7092                           
  7093                           ;incstack = 0
  7094                           ; Regs used in _TubesOff: []
  7095  0BF1  0147               	movlb	7	; select bank7
  7096  0BF2  138E               	bcf	14,7	;volatile
  7097                           
  7098                           ;Subroutines.c: 45:     LATCbits.LATC4 = 0;
  7099  0BF3  0140               	movlb	0	; select bank0
  7100  0BF4  121A               	bcf	26,4	;volatile
  7101                           
  7102                           ;Subroutines.c: 46:     LATCbits.LATC7 = 0;
  7103  0BF5  139A               	bcf	26,7	;volatile
  7104  0BF6  0008               	return
  7105  0BF7                     __end_of_TubesOff:
  7106                           
  7107                           	psect	text2
  7108  04BA                     __ptext2:	
  7109 ;; *************** function _Startup *****************
  7110 ;; Defined at:
  7111 ;;		line 125 in file "main.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;		None
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;		None
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  1    wreg      void 
  7118 ;; Registers used:
  7119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7120 ;; Tracked objects:
  7121 ;;		On entry : B3F/0
  7122 ;;		On exit  : 3F/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7125 ;;      Params:         0       0       0       0       0       0       0       0
  7126 ;;      Locals:         0       0       0       0       0       0       0       0
  7127 ;;      Temps:          0       1       0       0       0       0       0       0
  7128 ;;      Totals:         0       1       0       0       0       0       0       0
  7129 ;;Total ram usage:        1 bytes
  7130 ;; Hardware stack levels used: 1
  7131 ;; Hardware stack levels required when called: 8
  7132 ;; This function calls:
  7133 ;;		_EmptyTubes
  7134 ;;		_I2CRead
  7135 ;;		_I2CWrite
  7136 ;;		_Loader
  7137 ;;		_SYSTEM_Initialize
  7138 ;;		_TMR0_StartTimer
  7139 ;;		_TubesOn
  7140 ;;		___eetoc
  7141 ;;		___eetoi
  7142 ;; This function is called by:
  7143 ;;		_main
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           
  7148                           ;psect for function _Startup
  7149  04BA                     _Startup:
  7150                           
  7151                           ;main.c: 128:     SYSTEM_Initialize();
  7152                           
  7153                           ;incstack = 0
  7154                           ; Regs used in _Startup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7155  04BA  318D  2579  3184   	fcall	_SYSTEM_Initialize
  7156                           
  7157                           ;main.c: 129:     TMR0_StartTimer();
  7158  04BD  3180  2002  3184   	fcall	_TMR0_StartTimer
  7159                           
  7160                           ;main.c: 134:     (INTCONbits.PEIE = 1);
  7161  04C0  170B               	bsf	11,6	;volatile
  7162                           
  7163                           ;main.c: 137:     TimeFast = TimeFastStore;
  7164  04C1  307C               	movlw	(low _TimeFastStore)& (0+255)
  7165  04C2  318C  2469  3184   	fcall	___eetoc
  7166  04C5  0140               	movlb	0	; select bank0
  7167  04C6  00E1               	movwf	??_Startup
  7168  04C7  0861               	movf	??_Startup,w
  7169  04C8  00CA               	movwf	_TimeFast
  7170                           
  7171                           ;main.c: 138:     TimeAdj = TimeAdjStore;
  7172  04C9  307D               	movlw	(low _TimeAdjStore)& (0+255)
  7173  04CA  318C  24FA  3184   	fcall	___eetoi
  7174  04CD  0877               	movf	?___eetoi+1,w
  7175  04CE  00BB               	movwf	_TimeAdj+1
  7176  04CF  0876               	movf	?___eetoi,w
  7177  04D0  00BA               	movwf	_TimeAdj
  7178                           
  7179                           ;main.c: 139:     DateFormat = DateFormatStore;
  7180  04D1  307F               	movlw	(low _DateFormatStore)& (0+255)
  7181  04D2  318C  2469  3184   	fcall	___eetoc
  7182  04D5  0140               	movlb	0	; select bank0
  7183  04D6  00E1               	movwf	??_Startup
  7184  04D7  0861               	movf	??_Startup,w
  7185  04D8  00D2               	movwf	_DateFormat
  7186                           
  7187                           ;main.c: 140:     Brightness = BrightnessStore;
  7188  04D9  307B               	movlw	(low _BrightnessStore)& (0+255)
  7189  04DA  318C  2469  3184   	fcall	___eetoc
  7190  04DD  0140               	movlb	0	; select bank0
  7191  04DE  00E1               	movwf	??_Startup
  7192  04DF  0861               	movf	??_Startup,w
  7193  04E0  00D1               	movwf	_Brightness
  7194                           
  7195                           ;main.c: 141:     HourType = HourTypeStore;
  7196  04E1  307A               	movlw	(low _HourTypeStore)& (0+255)
  7197  04E2  318C  2469  3184   	fcall	___eetoc
  7198  04E5  0140               	movlb	0	; select bank0
  7199  04E6  00E1               	movwf	??_Startup
  7200  04E7  0861               	movf	??_Startup,w
  7201  04E8  00D0               	movwf	_HourType
  7202                           
  7203                           ;main.c: 142:     BlankStart = BlankStartStore;
  7204  04E9  3079               	movlw	(low _BlankStartStore)& (0+255)
  7205  04EA  318C  2469  3184   	fcall	___eetoc
  7206  04ED  0140               	movlb	0	; select bank0
  7207  04EE  00E1               	movwf	??_Startup
  7208  04EF  0861               	movf	??_Startup,w
  7209  04F0  00C9               	movwf	_BlankStart
  7210                           
  7211                           ;main.c: 143:     BlankEnd = BlankEndStore;
  7212  04F1  3078               	movlw	(low _BlankEndStore)& (0+255)
  7213  04F2  318C  2469  3184   	fcall	___eetoc
  7214  04F5  0140               	movlb	0	; select bank0
  7215  04F6  00E1               	movwf	??_Startup
  7216  04F7  0861               	movf	??_Startup,w
  7217  04F8  00C8               	movwf	_BlankEnd
  7218                           
  7219                           ;main.c: 146:     if (I2CRead(0x0F) == 0b11001000)
  7220  04F9  300F               	movlw	15
  7221  04FA  318E  2685  3184   	fcall	_I2CRead
  7222  04FD  3AC8               	xorlw	200
  7223  04FE  1D03               	skipz
  7224  04FF  2D36               	goto	l5806
  7225                           
  7226                           ;main.c: 147:     {;main.c: 148:         I2CWrite(0x0F, 0b01001000);
  7227  0500  3048               	movlw	72
  7228  0501  0140               	movlb	0	; select bank0
  7229  0502  00E1               	movwf	??_Startup
  7230  0503  0861               	movf	??_Startup,w
  7231  0504  00E0               	movwf	I2CWrite@data
  7232  0505  300F               	movlw	15
  7233  0506  318D  250D  3184   	fcall	_I2CWrite
  7234                           
  7235                           ;main.c: 149:         I2CWrite(0x01, 0x30);
  7236  0509  3030               	movlw	48
  7237  050A  0140               	movlb	0	; select bank0
  7238  050B  00E1               	movwf	??_Startup
  7239  050C  0861               	movf	??_Startup,w
  7240  050D  00E0               	movwf	I2CWrite@data
  7241  050E  3001               	movlw	1
  7242  050F  318D  250D  3184   	fcall	_I2CWrite
  7243                           
  7244                           ;main.c: 150:         I2CWrite(0x02, 0x12);
  7245  0512  3012               	movlw	18
  7246  0513  0140               	movlb	0	; select bank0
  7247  0514  00E1               	movwf	??_Startup
  7248  0515  0861               	movf	??_Startup,w
  7249  0516  00E0               	movwf	I2CWrite@data
  7250  0517  3002               	movlw	2
  7251  0518  318D  250D  3184   	fcall	_I2CWrite
  7252                           
  7253                           ;main.c: 151:         I2CWrite(0x04, 0x28);
  7254  051B  3028               	movlw	40
  7255  051C  0140               	movlb	0	; select bank0
  7256  051D  00E1               	movwf	??_Startup
  7257  051E  0861               	movf	??_Startup,w
  7258  051F  00E0               	movwf	I2CWrite@data
  7259  0520  3004               	movlw	4
  7260  0521  318D  250D  3184   	fcall	_I2CWrite
  7261                           
  7262                           ;main.c: 152:         I2CWrite(0x05, 0x7);
  7263  0524  3007               	movlw	7
  7264  0525  0140               	movlb	0	; select bank0
  7265  0526  00E1               	movwf	??_Startup
  7266  0527  0861               	movf	??_Startup,w
  7267  0528  00E0               	movwf	I2CWrite@data
  7268  0529  3005               	movlw	5
  7269  052A  318D  250D  3184   	fcall	_I2CWrite
  7270                           
  7271                           ;main.c: 153:         I2CWrite(0x06, 0x10);
  7272  052D  3010               	movlw	16
  7273  052E  0140               	movlb	0	; select bank0
  7274  052F  00E1               	movwf	??_Startup
  7275  0530  0861               	movf	??_Startup,w
  7276  0531  00E0               	movwf	I2CWrite@data
  7277  0532  3006               	movlw	6
  7278  0533  318D  250D  3184   	fcall	_I2CWrite
  7279  0536                     l5806:
  7280                           
  7281                           ;main.c: 157:     EmptyTubes();
  7282  0536  318C  24C1  3184   	fcall	_EmptyTubes
  7283                           
  7284                           ;main.c: 158:     Loader();
  7285  0539  318F  270F  3184   	fcall	_Loader
  7286                           
  7287                           ;main.c: 159:     TubesOn();
  7288  053C  318E  2661         	fcall	_TubesOn
  7289                           
  7290                           ;main.c: 161:     StartupDone = 1;
  7291  053E  147C               	bsf	_StartupDone/(0+8),_StartupDone& (0+7)
  7292  053F  0008               	return
  7293  0540                     __end_of_Startup:
  7294                           
  7295                           	psect	text3
  7296  0CFA                     __ptext3:	
  7297 ;; *************** function ___eetoi *****************
  7298 ;; Defined at:
  7299 ;;		line 112 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;  addr            1    wreg     PTR eeprom void 
  7302 ;;		 -> TimeAdjStore(2), 
  7303 ;; Auto vars:     Size  Location     Type
  7304 ;;  addr            1    0[BANK0 ] PTR eeprom void 
  7305 ;;		 -> TimeAdjStore(2), 
  7306 ;;  data            2    1[BANK0 ] unsigned int 
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  2    6[COMMON] unsigned int 
  7309 ;; Registers used:
  7310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7311 ;; Tracked objects:
  7312 ;;		On entry : 3C/3
  7313 ;;		On exit  : 3F/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7316 ;;      Params:         2       0       0       0       0       0       0       0
  7317 ;;      Locals:         0       3       0       0       0       0       0       0
  7318 ;;      Temps:          2       0       0       0       0       0       0       0
  7319 ;;      Totals:         4       3       0       0       0       0       0       0
  7320 ;;Total ram usage:        7 bytes
  7321 ;; Hardware stack levels used: 1
  7322 ;; Hardware stack levels required when called: 5
  7323 ;; This function calls:
  7324 ;;		___eecpymem
  7325 ;; This function is called by:
  7326 ;;		_Startup
  7327 ;;		_main
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           
  7332                           ;psect for function ___eetoi
  7333  0CFA                     ___eetoi:
  7334                           
  7335                           ;incstack = 0
  7336                           ; Regs used in ___eetoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7337                           ;___eetoi@addr stored from wreg
  7338  0CFA  0140               	movlb	0	; select bank0
  7339  0CFB  00D3               	movwf	___eetoi@addr
  7340                           
  7341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 112: __eetoi(__eep
      +                          rom void *addr);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 113
      +                          : {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 114:  unsigned 
      +                          int data;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 115:  __e
      +                          ecpymem((unsigned char *) &data,addr,2);
  7342  0CFC  0853               	movf	___eetoi@addr,w
  7343  0CFD  00F8               	movwf	??___eetoi
  7344  0CFE  0878               	movf	??___eetoi,w
  7345  0CFF  00F1               	movwf	___eecpymem@from
  7346  0D00  3002               	movlw	2
  7347  0D01  00F9               	movwf	??___eetoi+1
  7348  0D02  0879               	movf	??___eetoi+1,w
  7349  0D03  00F2               	movwf	___eecpymem@size
  7350  0D04  3054               	movlw	(low (___eetoi@data| 0))& (0+255)
  7351  0D05  318E  263E         	fcall	___eecpymem
  7352                           
  7353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 116:  return data;
  7354  0D07  0140               	movlb	0	; select bank0
  7355  0D08  0855               	movf	___eetoi@data+1,w
  7356  0D09  00F7               	movwf	?___eetoi+1
  7357  0D0A  0854               	movf	___eetoi@data,w
  7358  0D0B  00F6               	movwf	?___eetoi
  7359  0D0C  0008               	return
  7360  0D0D                     __end_of___eetoi:
  7361                           
  7362                           	psect	text4
  7363  0C69                     __ptext4:	
  7364 ;; *************** function ___eetoc *****************
  7365 ;; Defined at:
  7366 ;;		line 104 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;  addr            1    wreg     PTR eeprom void 
  7369 ;;		 -> BlankEndStore(1), BlankStartStore(1), HourTypeStore(1), BrightnessStore(1), 
  7370 ;;		 -> DateFormatStore(1), TimeFastStore(1), 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;  addr            1    8[COMMON] PTR eeprom void 
  7373 ;;		 -> BlankEndStore(1), BlankStartStore(1), HourTypeStore(1), BrightnessStore(1), 
  7374 ;;		 -> DateFormatStore(1), TimeFastStore(1), 
  7375 ;;  data            1    7[COMMON] unsigned char 
  7376 ;; Return value:  Size  Location     Type
  7377 ;;                  1    wreg      unsigned char 
  7378 ;; Registers used:
  7379 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7380 ;; Tracked objects:
  7381 ;;		On entry : 34/B
  7382 ;;		On exit  : 3F/10
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7385 ;;      Params:         0       0       0       0       0       0       0       0
  7386 ;;      Locals:         2       0       0       0       0       0       0       0
  7387 ;;      Temps:          1       0       0       0       0       0       0       0
  7388 ;;      Totals:         3       0       0       0       0       0       0       0
  7389 ;;Total ram usage:        3 bytes
  7390 ;; Hardware stack levels used: 1
  7391 ;; Hardware stack levels required when called: 5
  7392 ;; This function calls:
  7393 ;;		___eecpymem
  7394 ;; This function is called by:
  7395 ;;		_Startup
  7396 ;; This function uses a non-reentrant model
  7397 ;;
  7398                           
  7399                           
  7400                           ;psect for function ___eetoc
  7401  0C69                     ___eetoc:
  7402                           
  7403                           ;incstack = 0
  7404                           ; Regs used in ___eetoc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7405                           ;___eetoc@addr stored from wreg
  7406  0C69  00F8               	movwf	___eetoc@addr
  7407                           
  7408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 104: __eetoc(__eep
      +                          rom void *addr);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 105
      +                          : {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 106:  unsigned 
      +                          char data;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 107:  __
      +                          eecpymem((unsigned char *) &data,addr,1);
  7409  0C6A  0878               	movf	___eetoc@addr,w
  7410  0C6B  00F6               	movwf	??___eetoc
  7411  0C6C  0876               	movf	??___eetoc,w
  7412  0C6D  00F1               	movwf	___eecpymem@from
  7413  0C6E  01F2               	clrf	___eecpymem@size
  7414  0C6F  0AF2               	incf	___eecpymem@size,f
  7415  0C70  3077               	movlw	(low (___eetoc@data| 0))& (0+255)
  7416  0C71  318E  263E         	fcall	___eecpymem
  7417                           
  7418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 108:  return data;
  7419  0C73  0877               	movf	___eetoc@data,w
  7420  0C74  0008               	return
  7421  0C75                     __end_of___eetoc:
  7422                           
  7423                           	psect	text5
  7424  0E3E                     __ptext5:	
  7425 ;; *************** function ___eecpymem *****************
  7426 ;; Defined at:
  7427 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  to              1    wreg     PTR volatile unsigned ch
  7430 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7431 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7432 ;;  from            1    1[COMMON] PTR eeprom unsigned char
  7433 ;;		 -> BlankEndStore(1), BlankStartStore(1), HourTypeStore(1), BrightnessStore(1), 
  7434 ;;		 -> DateFormatStore(1), TimeAdjStore(2), TimeFastStore(1), 
  7435 ;;  size            1    2[COMMON] unsigned char 
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  to              1    5[COMMON] PTR volatile unsigned ch
  7438 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7439 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7440 ;;  cp              1    4[COMMON] PTR volatile unsigned ch
  7441 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7442 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  1    wreg      void 
  7445 ;; Registers used:
  7446 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7447 ;; Tracked objects:
  7448 ;;		On entry : 34/0
  7449 ;;		On exit  : 3F/10
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7452 ;;      Params:         2       0       0       0       0       0       0       0
  7453 ;;      Locals:         2       0       0       0       0       0       0       0
  7454 ;;      Temps:          1       0       0       0       0       0       0       0
  7455 ;;      Totals:         5       0       0       0       0       0       0       0
  7456 ;;Total ram usage:        5 bytes
  7457 ;; Hardware stack levels used: 1
  7458 ;; Hardware stack levels required when called: 4
  7459 ;; This function calls:
  7460 ;;		Nothing
  7461 ;; This function is called by:
  7462 ;;		___eetoc
  7463 ;;		___eetoi
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467                           
  7468                           ;psect for function ___eecpymem
  7469  0E3E                     ___eecpymem:
  7470                           
  7471                           ;incstack = 0
  7472                           ; Regs used in ___eecpymem: [wreg+fsr1l+fsr1h+status,2+status,0]
  7473                           ;___eecpymem@to stored from wreg
  7474  0E3E  00F5               	movwf	___eecpymem@to
  7475                           
  7476                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 6: __eecpymem(vola
      +                          tile unsigned char *to, __eeprom unsigned char * from, unsigned char size);C:\Program Fi
      +                          les\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 6: };C:\Program Files\Microchip\
      +                          xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 6: ;C:\Program Files\Microchip\xc8\v2.32\pic\s
      +                          ources\c99\pic\__eeprom.c: 6: ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\
      +                          __eeprom.c: 6: };C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 7:
      +                           {
  7477  0E3F  0875               	movf	___eecpymem@to,w
  7478  0E40  00F3               	movwf	??___eecpymem
  7479  0E41  0873               	movf	??___eecpymem,w
  7480  0E42  00F4               	movwf	___eecpymem@cp
  7481  0E43                     l1535:	
  7482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 24:  };C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 24: __fltoee(__eeprom void *ad
      +                          dr, double data)
  7483                           
  7484                           
  7485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 22:  while (NVMCON
      +                          1bits.WR) {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 22: 
  7486  0E43  0150               	movlb	16	; select bank16
  7487  0E44  189E               	btfsc	30,1	;volsfr
  7488  0E45  2E43               	goto	l1535
  7489                           
  7490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 25:  NVMCON1bits.N
      +                          VMREGS = 1;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 25: {
  7491  0E46  171E               	bsf	30,6	;volsfr
  7492                           
  7493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 26:  NVMADRL = (un
      +                          signed char) from;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 
      +                          26:  __memcpyee(addr,(unsigned char *) &data,4);
  7494  0E47  0871               	movf	___eecpymem@from,w
  7495  0E48  009A               	movwf	26	;volatile
  7496                           
  7497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 27:  NVMADRH = 0x7
      +                          0;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 27:  return data
      +                          ;
  7498  0E49  3070               	movlw	112
  7499  0E4A  009B               	movwf	27	;volatile
  7500  0E4B                     l5542:	
  7501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 28:  while (size--
      +                          ) {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 28: }
  7502                           
  7503                           
  7504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 28:  while (size--
      +                          ) {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 28: }
  7505  0E4B  3001               	movlw	1
  7506  0E4C  02F2               	subwf	___eecpymem@size,f
  7507  0E4D  0A72               	incf	___eecpymem@size,w
  7508  0E4E  1903               	btfsc	3,2
  7509  0E4F  0008               	return
  7510                           
  7511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 29:   NVMCON1bits.
      +                          RD = 1;
  7512  0E50  141E               	bsf	30,0	;volsfr
  7513                           
  7514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 30:   *cp++ = NVMD
      +                          ATL;
  7515  0E51  081C               	movf	28,w	;volatile
  7516  0E52  00F3               	movwf	??___eecpymem
  7517  0E53  0874               	movf	___eecpymem@cp,w
  7518  0E54  0086               	movwf	6
  7519  0E55  0187               	clrf	7
  7520  0E56  0873               	movf	??___eecpymem,w
  7521  0E57  0081               	movwf	1
  7522  0E58  3001               	movlw	1
  7523  0E59  00F3               	movwf	??___eecpymem
  7524  0E5A  0873               	movf	??___eecpymem,w
  7525  0E5B  07F4               	addwf	___eecpymem@cp,f
  7526                           
  7527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\pic\__eeprom.c: 31:   NVMADRL++;
  7528  0E5C  3001               	movlw	1
  7529  0E5D  00F3               	movwf	??___eecpymem
  7530  0E5E  0873               	movf	??___eecpymem,w
  7531  0E5F  079A               	addwf	26,f	;volatile
  7532  0E60  2E4B               	goto	l5542
  7533  0E61                     __end_of___eecpymem:
  7534                           
  7535                           	psect	text6
  7536  0E61                     __ptext6:	
  7537 ;; *************** function _TubesOn *****************
  7538 ;; Defined at:
  7539 ;;		line 49 in file "Subroutines.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;		None
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;		None
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  1    wreg      void 
  7546 ;; Registers used:
  7547 ;;		wreg, status,2, status,0, pclath, cstack
  7548 ;; Tracked objects:
  7549 ;;		On entry : 3F/0
  7550 ;;		On exit  : 3F/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7553 ;;      Params:         0       0       0       0       0       0       0       0
  7554 ;;      Locals:         0       0       0       0       0       0       0       0
  7555 ;;      Temps:          0       2       0       0       0       0       0       0
  7556 ;;      Totals:         0       2       0       0       0       0       0       0
  7557 ;;Total ram usage:        2 bytes
  7558 ;; Hardware stack levels used: 1
  7559 ;; Hardware stack levels required when called: 5
  7560 ;; This function calls:
  7561 ;;		_PWM6_LoadDutyValue
  7562 ;;		___awdiv
  7563 ;;		___wmul
  7564 ;; This function is called by:
  7565 ;;		_Startup
  7566 ;;		_main
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           
  7571                           ;psect for function _TubesOn
  7572  0E61                     _TubesOn:
  7573                           
  7574                           ;Subroutines.c: 51:     PWM6_LoadDutyValue(((5190 * Brightness) / 100));
  7575                           
  7576                           ;incstack = 0
  7577                           ; Regs used in _TubesOn: [wreg+status,2+status,0+pclath+cstack]
  7578  0E61  3064               	movlw	100
  7579  0E62  00F7               	movwf	___awdiv@divisor
  7580  0E63  3000               	movlw	0
  7581  0E64  00F8               	movwf	___awdiv@divisor+1
  7582  0E65  0851               	movf	_Brightness,w
  7583  0E66  00DB               	movwf	??_TubesOn
  7584  0E67  01DC               	clrf	??_TubesOn+1
  7585  0E68  085B               	movf	??_TubesOn,w
  7586  0E69  00F1               	movwf	___wmul@multiplier
  7587  0E6A  085C               	movf	??_TubesOn+1,w
  7588  0E6B  00F2               	movwf	___wmul@multiplier+1
  7589  0E6C  3046               	movlw	70
  7590  0E6D  00F3               	movwf	___wmul@multiplicand
  7591  0E6E  3014               	movlw	20
  7592  0E6F  00F4               	movwf	___wmul@multiplicand+1
  7593  0E70  318D  25AB  318E   	fcall	___wmul
  7594  0E73  0872               	movf	?___wmul+1,w
  7595  0E74  00FA               	movwf	___awdiv@dividend+1
  7596  0E75  0871               	movf	?___wmul,w
  7597  0E76  00F9               	movwf	___awdiv@dividend
  7598  0E77  3187  2700  318E   	fcall	___awdiv
  7599  0E7A  0878               	movf	?___awdiv+1,w
  7600  0E7B  00D8               	movwf	PWM6_LoadDutyValue@dutyValue+1
  7601  0E7C  0877               	movf	?___awdiv,w
  7602  0E7D  00D7               	movwf	PWM6_LoadDutyValue@dutyValue
  7603  0E7E  318D  2561         	fcall	_PWM6_LoadDutyValue
  7604                           
  7605                           ;Subroutines.c: 52:     PWM6CONbits.PWM6EN = 1;
  7606  0E80  178E               	bsf	14,7	;volatile
  7607                           
  7608                           ;Subroutines.c: 53:     LATCbits.LATC4 = 1;
  7609  0E81  0140               	movlb	0	; select bank0
  7610  0E82  161A               	bsf	26,4	;volatile
  7611                           
  7612                           ;Subroutines.c: 54:     LATCbits.LATC7 = 1;
  7613  0E83  179A               	bsf	26,7	;volatile
  7614  0E84  0008               	return
  7615  0E85                     __end_of_TubesOn:
  7616                           
  7617                           	psect	text7
  7618  0002                     __ptext7:	
  7619 ;; *************** function _TMR0_StartTimer *****************
  7620 ;; Defined at:
  7621 ;;		line 88 in file "mcc_generated_files/tmr0.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;		None
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;		None
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      void 
  7628 ;; Registers used:
  7629 ;;		None
  7630 ;; Tracked objects:
  7631 ;;		On entry : 3F/B
  7632 ;;		On exit  : 3F/B
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7635 ;;      Params:         0       0       0       0       0       0       0       0
  7636 ;;      Locals:         0       0       0       0       0       0       0       0
  7637 ;;      Temps:          0       0       0       0       0       0       0       0
  7638 ;;      Totals:         0       0       0       0       0       0       0       0
  7639 ;;Total ram usage:        0 bytes
  7640 ;; Hardware stack levels used: 1
  7641 ;; Hardware stack levels required when called: 4
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_Startup
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           
  7650                           ;psect for function _TMR0_StartTimer
  7651  0002                     _TMR0_StartTimer:
  7652                           
  7653                           ;mcc_generated_files/tmr0.c: 91:     T0CON0bits.T0EN = 1;
  7654                           
  7655                           ;incstack = 0
  7656                           ; Regs used in _TMR0_StartTimer: []
  7657  0002  179E               	bsf	30,7	;volatile
  7658  0003  0008               	return
  7659  0004                     __end_of_TMR0_StartTimer:
  7660                           
  7661                           	psect	text8
  7662  0D79                     __ptext8:	
  7663 ;; *************** function _SYSTEM_Initialize *****************
  7664 ;; Defined at:
  7665 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;		None
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;		None
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  1    wreg      void 
  7672 ;; Registers used:
  7673 ;;		wreg, status,2, status,0, pclath, cstack
  7674 ;; Tracked objects:
  7675 ;;		On entry : B3F/0
  7676 ;;		On exit  : 3F/B
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7679 ;;      Params:         0       0       0       0       0       0       0       0
  7680 ;;      Locals:         0       0       0       0       0       0       0       0
  7681 ;;      Temps:          0       0       0       0       0       0       0       0
  7682 ;;      Totals:         0       0       0       0       0       0       0       0
  7683 ;;Total ram usage:        0 bytes
  7684 ;; Hardware stack levels used: 1
  7685 ;; Hardware stack levels required when called: 6
  7686 ;; This function calls:
  7687 ;;		_I2C1_Initialize
  7688 ;;		_OSCILLATOR_Initialize
  7689 ;;		_PIN_MANAGER_Initialize
  7690 ;;		_PMD_Initialize
  7691 ;;		_PWM6_Initialize
  7692 ;;		_TMR0_Initialize
  7693 ;;		_TMR2_Initialize
  7694 ;;		_TMR4_Initialize
  7695 ;; This function is called by:
  7696 ;;		_Startup
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           
  7701                           ;psect for function _SYSTEM_Initialize
  7702  0D79                     _SYSTEM_Initialize:
  7703                           
  7704                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  7705                           
  7706                           ;incstack = 0
  7707                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7708  0D79  318C  2430  318D   	fcall	_PMD_Initialize
  7709                           
  7710                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  7711  0D7C  318C  2414  318D   	fcall	_I2C1_Initialize
  7712                           
  7713                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7714  0D7F  3187  279A  318D   	fcall	_PIN_MANAGER_Initialize
  7715                           
  7716                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7717  0D82  318C  241D  318D   	fcall	_OSCILLATOR_Initialize
  7718                           
  7719                           ;mcc_generated_files/mcc.c: 56:     PWM6_Initialize();
  7720  0D85  318C  245D  318D   	fcall	_PWM6_Initialize
  7721                           
  7722                           ;mcc_generated_files/mcc.c: 57:     TMR4_Initialize();
  7723  0D88  318D  254B  318D   	fcall	_TMR4_Initialize
  7724                           
  7725                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  7726  0D8B  318C  2481  318D   	fcall	_TMR2_Initialize
  7727                           
  7728                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  7729  0D8E  318D  2521         	fcall	_TMR0_Initialize
  7730  0D90  0008               	return
  7731  0D91                     __end_of_SYSTEM_Initialize:
  7732                           
  7733                           	psect	text9
  7734  0D4B                     __ptext9:	
  7735 ;; *************** function _TMR4_Initialize *****************
  7736 ;; Defined at:
  7737 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;		None
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;		None
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1    wreg      void 
  7744 ;; Registers used:
  7745 ;;		wreg, status,2, status,0, pclath, cstack
  7746 ;; Tracked objects:
  7747 ;;		On entry : B3F/4
  7748 ;;		On exit  : B3F/5
  7749 ;;		Unchanged: B00/0
  7750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7751 ;;      Params:         0       0       0       0       0       0       0       0
  7752 ;;      Locals:         0       0       0       0       0       0       0       0
  7753 ;;      Temps:          0       0       0       0       0       0       0       0
  7754 ;;      Totals:         0       0       0       0       0       0       0       0
  7755 ;;Total ram usage:        0 bytes
  7756 ;; Hardware stack levels used: 1
  7757 ;; Hardware stack levels required when called: 5
  7758 ;; This function calls:
  7759 ;;		_TMR4_SetInterruptHandler
  7760 ;; This function is called by:
  7761 ;;		_SYSTEM_Initialize
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           
  7766                           ;psect for function _TMR4_Initialize
  7767  0D4B                     _TMR4_Initialize:
  7768                           
  7769                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x03;
  7770                           
  7771                           ;incstack = 0
  7772                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7773  0D4B  3003               	movlw	3
  7774  0D4C  0145               	movlb	5	; select bank5
  7775  0D4D  0096               	movwf	22	;volatile
  7776                           
  7777                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x20;
  7778  0D4E  3020               	movlw	32
  7779  0D4F  0095               	movwf	21	;volatile
  7780                           
  7781                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
  7782  0D50  0197               	clrf	23	;volatile
  7783                           
  7784                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0xF9;
  7785  0D51  30F9               	movlw	249
  7786  0D52  0093               	movwf	19	;volatile
  7787                           
  7788                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
  7789  0D53  0192               	clrf	18	;volatile
  7790                           
  7791                           ;mcc_generated_files/tmr4.c: 84:     PIR4bits.TMR4IF = 0;
  7792  0D54  014E               	movlb	14	; select bank14
  7793  0D55  1190               	bcf	16,3	;volatile
  7794                           
  7795                           ;mcc_generated_files/tmr4.c: 87:     PIE4bits.TMR4IE = 1;
  7796  0D56  159A               	bsf	26,3	;volatile
  7797                           
  7798                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  7799  0D57  30E1               	movlw	low _TMR4_DefaultInterruptHandler
  7800  0D58  00F1               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  7801  0D59  300B               	movlw	high _TMR4_DefaultInterruptHandler
  7802  0D5A  00F2               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  7803  0D5B  318B  23EB         	fcall	_TMR4_SetInterruptHandler
  7804                           
  7805                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0x40;
  7806  0D5D  3040               	movlw	64
  7807  0D5E  0145               	movlb	5	; select bank5
  7808  0D5F  0094               	movwf	20	;volatile
  7809  0D60  0008               	return
  7810  0D61                     __end_of_TMR4_Initialize:
  7811                           
  7812                           	psect	text10
  7813  0BEB                     __ptext10:	
  7814 ;; *************** function _TMR4_SetInterruptHandler *****************
  7815 ;; Defined at:
  7816 ;;		line 186 in file "mcc_generated_files/tmr4.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  7819 ;;		 -> TMR4_DefaultInterruptHandler(1), 
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;		None
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  1    wreg      void 
  7824 ;; Registers used:
  7825 ;;		wreg
  7826 ;; Tracked objects:
  7827 ;;		On entry : B3F/E
  7828 ;;		On exit  : B3F/0
  7829 ;;		Unchanged: B00/0
  7830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7831 ;;      Params:         2       0       0       0       0       0       0       0
  7832 ;;      Locals:         0       0       0       0       0       0       0       0
  7833 ;;      Temps:          0       0       0       0       0       0       0       0
  7834 ;;      Totals:         2       0       0       0       0       0       0       0
  7835 ;;Total ram usage:        2 bytes
  7836 ;; Hardware stack levels used: 1
  7837 ;; Hardware stack levels required when called: 4
  7838 ;; This function calls:
  7839 ;;		Nothing
  7840 ;; This function is called by:
  7841 ;;		_TMR4_Initialize
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           
  7846                           ;psect for function _TMR4_SetInterruptHandler
  7847  0BEB                     _TMR4_SetInterruptHandler:
  7848                           
  7849                           ;mcc_generated_files/tmr4.c: 187:     TMR4_InterruptHandler = InterruptHandler;
  7850                           
  7851                           ;incstack = 0
  7852                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  7853  0BEB  0872               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
  7854  0BEC  0140               	movlb	0	; select bank0
  7855  0BED  00BD               	movwf	_TMR4_InterruptHandler+1
  7856  0BEE  0871               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
  7857  0BEF  00BC               	movwf	_TMR4_InterruptHandler
  7858  0BF0  0008               	return
  7859  0BF1                     __end_of_TMR4_SetInterruptHandler:
  7860                           
  7861                           	psect	text11
  7862  0C81                     __ptext11:	
  7863 ;; *************** function _TMR2_Initialize *****************
  7864 ;; Defined at:
  7865 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;		None
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;		None
  7870 ;; Return value:  Size  Location     Type
  7871 ;;                  1    wreg      void 
  7872 ;; Registers used:
  7873 ;;		wreg, status,2
  7874 ;; Tracked objects:
  7875 ;;		On entry : B3F/5
  7876 ;;		On exit  : B3F/5
  7877 ;;		Unchanged: B00/0
  7878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7879 ;;      Params:         0       0       0       0       0       0       0       0
  7880 ;;      Locals:         0       0       0       0       0       0       0       0
  7881 ;;      Temps:          0       0       0       0       0       0       0       0
  7882 ;;      Totals:         0       0       0       0       0       0       0       0
  7883 ;;Total ram usage:        0 bytes
  7884 ;; Hardware stack levels used: 1
  7885 ;; Hardware stack levels required when called: 4
  7886 ;; This function calls:
  7887 ;;		Nothing
  7888 ;; This function is called by:
  7889 ;;		_SYSTEM_Initialize
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           
  7894                           ;psect for function _TMR2_Initialize
  7895  0C81                     _TMR2_Initialize:
  7896                           
  7897                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  7898                           
  7899                           ;incstack = 0
  7900                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  7901  0C81  3001               	movlw	1
  7902  0C82  0090               	movwf	16	;volatile
  7903                           
  7904                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x20;
  7905  0C83  3020               	movlw	32
  7906  0C84  008F               	movwf	15	;volatile
  7907                           
  7908                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  7909  0C85  0191               	clrf	17	;volatile
  7910                           
  7911                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x81;
  7912  0C86  3081               	movlw	129
  7913  0C87  008D               	movwf	13	;volatile
  7914                           
  7915                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  7916  0C88  018C               	clrf	12	;volatile
  7917                           
  7918                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  7919  0C89  014E               	movlb	14	; select bank14
  7920  0C8A  1090               	bcf	16,1	;volatile
  7921                           
  7922                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xA0;
  7923  0C8B  30A0               	movlw	160
  7924  0C8C  0145               	movlb	5	; select bank5
  7925  0C8D  008E               	movwf	14	;volatile
  7926  0C8E  0008               	return
  7927  0C8F                     __end_of_TMR2_Initialize:
  7928                           
  7929                           	psect	text12
  7930  0D21                     __ptext12:	
  7931 ;; *************** function _TMR0_Initialize *****************
  7932 ;; Defined at:
  7933 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;		None
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;		None
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  1    wreg      void 
  7940 ;; Registers used:
  7941 ;;		wreg
  7942 ;; Tracked objects:
  7943 ;;		On entry : 3F/5
  7944 ;;		On exit  : 3F/B
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7947 ;;      Params:         0       0       0       0       0       0       0       0
  7948 ;;      Locals:         0       0       0       0       0       0       0       0
  7949 ;;      Temps:          0       0       0       0       0       0       0       0
  7950 ;;      Totals:         0       0       0       0       0       0       0       0
  7951 ;;Total ram usage:        0 bytes
  7952 ;; Hardware stack levels used: 1
  7953 ;; Hardware stack levels required when called: 4
  7954 ;; This function calls:
  7955 ;;		Nothing
  7956 ;; This function is called by:
  7957 ;;		_SYSTEM_Initialize
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           
  7962                           ;psect for function _TMR0_Initialize
  7963  0D21                     _TMR0_Initialize:
  7964                           
  7965                           ;mcc_generated_files/tmr0.c: 70:     T0CON1 = 0x50;
  7966                           
  7967                           ;incstack = 0
  7968                           ; Regs used in _TMR0_Initialize: [wreg]
  7969  0D21  3050               	movlw	80
  7970  0D22  014B               	movlb	11	; select bank11
  7971  0D23  009F               	movwf	31	;volatile
  7972                           
  7973                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0xFE;
  7974  0D24  30FE               	movlw	254
  7975  0D25  009D               	movwf	29	;volatile
  7976                           
  7977                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0x0C;
  7978  0D26  300C               	movlw	12
  7979  0D27  009C               	movwf	28	;volatile
  7980                           
  7981                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  7982  0D28  081D               	movf	29,w	;volatile
  7983  0D29  0140               	movlb	0	; select bank0
  7984  0D2A  00C1               	movwf	_timer0ReloadVal16bit+1	;volatile
  7985  0D2B  014B               	movlb	11	; select bank11
  7986  0D2C  081C               	movf	28,w	;volatile
  7987  0D2D  0140               	movlb	0	; select bank0
  7988  0D2E  00C0               	movwf	_timer0ReloadVal16bit	;volatile
  7989                           
  7990                           ;mcc_generated_files/tmr0.c: 82:     PIR0bits.TMR0IF = 0;
  7991  0D2F  014E               	movlb	14	; select bank14
  7992  0D30  128C               	bcf	12,5	;volatile
  7993                           
  7994                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x90;
  7995  0D31  3090               	movlw	144
  7996  0D32  014B               	movlb	11	; select bank11
  7997  0D33  009E               	movwf	30	;volatile
  7998  0D34  0008               	return
  7999  0D35                     __end_of_TMR0_Initialize:
  8000                           
  8001                           	psect	text13
  8002  0C5D                     __ptext13:	
  8003 ;; *************** function _PWM6_Initialize *****************
  8004 ;; Defined at:
  8005 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;		None
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;		None
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  1    wreg      void 
  8012 ;; Registers used:
  8013 ;;		wreg, status,2, status,0
  8014 ;; Tracked objects:
  8015 ;;		On entry : B3F/11
  8016 ;;		On exit  : B3F/4
  8017 ;;		Unchanged: B00/0
  8018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8019 ;;      Params:         0       0       0       0       0       0       0       0
  8020 ;;      Locals:         0       0       0       0       0       0       0       0
  8021 ;;      Temps:          0       0       0       0       0       0       0       0
  8022 ;;      Totals:         0       0       0       0       0       0       0       0
  8023 ;;Total ram usage:        0 bytes
  8024 ;; Hardware stack levels used: 1
  8025 ;; Hardware stack levels required when called: 4
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_SYSTEM_Initialize
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           
  8034                           ;psect for function _PWM6_Initialize
  8035  0C5D                     _PWM6_Initialize:
  8036                           
  8037                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x00;
  8038                           
  8039                           ;incstack = 0
  8040                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  8041  0C5D  0147               	movlb	7	; select bank7
  8042  0C5E  018E               	clrf	14	;volatile
  8043                           
  8044                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x40;
  8045  0C5F  3040               	movlw	64
  8046  0C60  008D               	movwf	13	;volatile
  8047                           
  8048                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
  8049  0C61  30C0               	movlw	192
  8050  0C62  008C               	movwf	12	;volatile
  8051                           
  8052                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  8053  0C63  0144               	movlb	4	; select bank4
  8054  0C64  081F               	movf	31,w	;volatile
  8055  0C65  39F3               	andlw	-13
  8056  0C66  3804               	iorlw	4
  8057  0C67  009F               	movwf	31	;volatile
  8058  0C68  0008               	return
  8059  0C69                     __end_of_PWM6_Initialize:
  8060                           
  8061                           	psect	text14
  8062  0C30                     __ptext14:	
  8063 ;; *************** function _PMD_Initialize *****************
  8064 ;; Defined at:
  8065 ;;		line 76 in file "mcc_generated_files/mcc.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;		None
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;		None
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  1    wreg      void 
  8072 ;; Registers used:
  8073 ;;		status,2
  8074 ;; Tracked objects:
  8075 ;;		On entry : B3F/0
  8076 ;;		On exit  : B3F/F
  8077 ;;		Unchanged: B00/0
  8078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8079 ;;      Params:         0       0       0       0       0       0       0       0
  8080 ;;      Locals:         0       0       0       0       0       0       0       0
  8081 ;;      Temps:          0       0       0       0       0       0       0       0
  8082 ;;      Totals:         0       0       0       0       0       0       0       0
  8083 ;;Total ram usage:        0 bytes
  8084 ;; Hardware stack levels used: 1
  8085 ;; Hardware stack levels required when called: 4
  8086 ;; This function calls:
  8087 ;;		Nothing
  8088 ;; This function is called by:
  8089 ;;		_SYSTEM_Initialize
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           
  8094                           ;psect for function _PMD_Initialize
  8095  0C30                     _PMD_Initialize:
  8096                           
  8097                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
  8098                           
  8099                           ;incstack = 0
  8100                           ; Regs used in _PMD_Initialize: [status,2]
  8101  0C30  014F               	movlb	15	; select bank15
  8102  0C31  0196               	clrf	22	;volatile
  8103                           
  8104                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
  8105  0C32  0197               	clrf	23	;volatile
  8106                           
  8107                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
  8108  0C33  0198               	clrf	24	;volatile
  8109                           
  8110                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
  8111  0C34  0199               	clrf	25	;volatile
  8112                           
  8113                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
  8114  0C35  019A               	clrf	26	;volatile
  8115                           
  8116                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
  8117  0C36  019B               	clrf	27	;volatile
  8118                           
  8119                           ;mcc_generated_files/mcc.c: 91:     PMD6 = 0x00;
  8120  0C37  019C               	clrf	28	;volatile
  8121                           
  8122                           ;mcc_generated_files/mcc.c: 93:     PMD7 = 0x00;
  8123  0C38  019D               	clrf	29	;volatile
  8124  0C39  0008               	return
  8125  0C3A                     __end_of_PMD_Initialize:
  8126                           
  8127                           	psect	text15
  8128  079A                     __ptext15:	
  8129 ;; *************** function _PIN_MANAGER_Initialize *****************
  8130 ;; Defined at:
  8131 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8132 ;; Parameters:    Size  Location     Type
  8133 ;;		None
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;		None
  8136 ;; Return value:  Size  Location     Type
  8137 ;;                  1    wreg      void 
  8138 ;; Registers used:
  8139 ;;		wreg, status,2
  8140 ;; Tracked objects:
  8141 ;;		On entry : B3F/3
  8142 ;;		On exit  : B3F/0
  8143 ;;		Unchanged: B00/0
  8144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8145 ;;      Params:         0       0       0       0       0       0       0       0
  8146 ;;      Locals:         0       0       0       0       0       0       0       0
  8147 ;;      Temps:          0       0       0       0       0       0       0       0
  8148 ;;      Totals:         0       0       0       0       0       0       0       0
  8149 ;;Total ram usage:        0 bytes
  8150 ;; Hardware stack levels used: 1
  8151 ;; Hardware stack levels required when called: 4
  8152 ;; This function calls:
  8153 ;;		Nothing
  8154 ;; This function is called by:
  8155 ;;		_SYSTEM_Initialize
  8156 ;; This function uses a non-reentrant model
  8157 ;;
  8158                           
  8159                           
  8160                           ;psect for function _PIN_MANAGER_Initialize
  8161  079A                     _PIN_MANAGER_Initialize:
  8162                           
  8163                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8164                           
  8165                           ;incstack = 0
  8166                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8167  079A  0140               	movlb	0	; select bank0
  8168  079B  0198               	clrf	24	;volatile
  8169                           
  8170                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8171  079C  0199               	clrf	25	;volatile
  8172                           
  8173                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8174  079D  019A               	clrf	26	;volatile
  8175                           
  8176                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x0B;
  8177  079E  300B               	movlw	11
  8178  079F  0092               	movwf	18	;volatile
  8179                           
  8180                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x50;
  8181  07A0  3050               	movlw	80
  8182  07A1  0093               	movwf	19	;volatile
  8183                           
  8184                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x03;
  8185  07A2  3003               	movlw	3
  8186  07A3  0094               	movwf	20	;volatile
  8187                           
  8188                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFC;
  8189  07A4  30FC               	movlw	252
  8190  07A5  017E               	movlb	62	; select bank62
  8191  07A6  00CE               	movwf	78	;volatile
  8192                           
  8193                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xA0;
  8194  07A7  30A0               	movlw	160
  8195  07A8  00C3               	movwf	67	;volatile
  8196                           
  8197                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
  8198  07A9  3037               	movlw	55
  8199  07AA  00B8               	movwf	56	;volatile
  8200                           
  8201                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8202  07AB  01C4               	clrf	68	;volatile
  8203                           
  8204                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  8205  07AC  01B9               	clrf	57	;volatile
  8206                           
  8207                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  8208  07AD  01CF               	clrf	79	;volatile
  8209                           
  8210                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8211  07AE  01BA               	clrf	58	;volatile
  8212                           
  8213                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8214  07AF  01C5               	clrf	69	;volatile
  8215                           
  8216                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8217  07B0  01D0               	clrf	80	;volatile
  8218                           
  8219                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  8220  07B1  3037               	movlw	55
  8221  07B2  00BB               	movwf	59	;volatile
  8222                           
  8223                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  8224  07B3  30F0               	movlw	240
  8225  07B4  00C6               	movwf	70	;volatile
  8226                           
  8227                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  8228  07B5  30FF               	movlw	255
  8229  07B6  00D1               	movwf	81	;volatile
  8230                           
  8231                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  8232  07B7  303F               	movlw	63
  8233  07B8  00BC               	movwf	60	;volatile
  8234                           
  8235                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
  8236  07B9  30F0               	movlw	240
  8237  07BA  00C7               	movwf	71	;volatile
  8238                           
  8239                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
  8240  07BB  30FF               	movlw	255
  8241  07BC  00D2               	movwf	82	;volatile
  8242                           
  8243                           ;mcc_generated_files/pin_manager.c: 110:     IOCCFbits.IOCCF0 = 0;
  8244  07BD  1055               	bcf	85,0	;volatile
  8245                           
  8246                           ;mcc_generated_files/pin_manager.c: 112:     IOCCFbits.IOCCF1 = 0;
  8247  07BE  10D5               	bcf	85,1	;volatile
  8248                           
  8249                           ;mcc_generated_files/pin_manager.c: 114:     IOCCNbits.IOCCN0 = 0;
  8250  07BF  1054               	bcf	84,0	;volatile
  8251                           
  8252                           ;mcc_generated_files/pin_manager.c: 116:     IOCCNbits.IOCCN1 = 0;
  8253  07C0  10D4               	bcf	84,1	;volatile
  8254                           
  8255                           ;mcc_generated_files/pin_manager.c: 118:     IOCCPbits.IOCCP0 = 1;
  8256  07C1  1453               	bsf	83,0	;volatile
  8257                           
  8258                           ;mcc_generated_files/pin_manager.c: 120:     IOCCPbits.IOCCP1 = 1;
  8259  07C2  14D3               	bsf	83,1	;volatile
  8260                           
  8261                           ;mcc_generated_files/pin_manager.c: 127:     PIE0bits.IOCIE = 1;
  8262  07C3  014E               	movlb	14	; select bank14
  8263  07C4  1616               	bsf	22,4	;volatile
  8264                           
  8265                           ;mcc_generated_files/pin_manager.c: 130:     SSP1CLKPPS = 0x0C;
  8266  07C5  300C               	movlw	12
  8267  07C6  017D               	movlb	61	; select bank61
  8268  07C7  00C5               	movwf	69	;volatile
  8269                           
  8270                           ;mcc_generated_files/pin_manager.c: 131:     RB6PPS = 0x14;
  8271  07C8  3014               	movlw	20
  8272  07C9  017E               	movlb	62	; select bank62
  8273  07CA  009E               	movwf	30	;volatile
  8274                           
  8275                           ;mcc_generated_files/pin_manager.c: 132:     RC4PPS = 0x0D;
  8276  07CB  300D               	movlw	13
  8277  07CC  00A4               	movwf	36	;volatile
  8278                           
  8279                           ;mcc_generated_files/pin_manager.c: 133:     RB4PPS = 0x13;
  8280  07CD  3013               	movlw	19
  8281  07CE  009C               	movwf	28	;volatile
  8282                           
  8283                           ;mcc_generated_files/pin_manager.c: 134:     SSP1DATPPS = 0x0E;
  8284  07CF  300E               	movlw	14
  8285  07D0  017D               	movlb	61	; select bank61
  8286  07D1  00C6               	movwf	70	;volatile
  8287  07D2  0140               	movlb	0	; select bank0
  8288  07D3  1118               	bcf	24,2	;volatile
  8289  07D4  1218               	bcf	24,4	;volatile
  8290  07D5  1298               	bcf	24,5	;volatile
  8291  07D6  1299               	bcf	25,5	;volatile
  8292  07D7  1399               	bcf	25,7	;volatile
  8293                           
  8294                           ;mcc_generated_files/pin_manager.c: 142:     LATCbits.LATC0 = 0;
  8295  07D8  101A               	bcf	26,0	;volatile
  8296                           
  8297                           ;mcc_generated_files/pin_manager.c: 143:     LATCbits.LATC1 = 0;
  8298  07D9  109A               	bcf	26,1	;volatile
  8299                           
  8300                           ;mcc_generated_files/pin_manager.c: 144:     LATCbits.LATC4 = 0;
  8301  07DA  121A               	bcf	26,4	;volatile
  8302                           
  8303                           ;mcc_generated_files/pin_manager.c: 145:     LATCbits.LATC6 = 0;
  8304  07DB  131A               	bcf	26,6	;volatile
  8305                           
  8306                           ;mcc_generated_files/pin_manager.c: 146:     LATCbits.LATC3 = 0;
  8307  07DC  119A               	bcf	26,3	;volatile
  8308                           
  8309                           ;mcc_generated_files/pin_manager.c: 147:     LATCbits.LATC7 = 0;
  8310  07DD  139A               	bcf	26,7	;volatile
  8311  07DE  0008               	return
  8312  07DF                     __end_of_PIN_MANAGER_Initialize:
  8313                           
  8314                           	psect	text16
  8315  0C1D                     __ptext16:	
  8316 ;; *************** function _OSCILLATOR_Initialize *****************
  8317 ;; Defined at:
  8318 ;;		line 62 in file "mcc_generated_files/mcc.c"
  8319 ;; Parameters:    Size  Location     Type
  8320 ;;		None
  8321 ;; Auto vars:     Size  Location     Type
  8322 ;;		None
  8323 ;; Return value:  Size  Location     Type
  8324 ;;                  1    wreg      void 
  8325 ;; Registers used:
  8326 ;;		wreg, status,2
  8327 ;; Tracked objects:
  8328 ;;		On entry : B3F/0
  8329 ;;		On exit  : B3F/11
  8330 ;;		Unchanged: B00/0
  8331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8332 ;;      Params:         0       0       0       0       0       0       0       0
  8333 ;;      Locals:         0       0       0       0       0       0       0       0
  8334 ;;      Temps:          0       0       0       0       0       0       0       0
  8335 ;;      Totals:         0       0       0       0       0       0       0       0
  8336 ;;Total ram usage:        0 bytes
  8337 ;; Hardware stack levels used: 1
  8338 ;; Hardware stack levels required when called: 4
  8339 ;; This function calls:
  8340 ;;		Nothing
  8341 ;; This function is called by:
  8342 ;;		_SYSTEM_Initialize
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346                           
  8347                           ;psect for function _OSCILLATOR_Initialize
  8348  0C1D                     _OSCILLATOR_Initialize:
  8349                           
  8350                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
  8351                           
  8352                           ;incstack = 0
  8353                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8354  0C1D  3060               	movlw	96
  8355  0C1E  0151               	movlb	17	; select bank17
  8356  0C1F  008D               	movwf	13	;volatile
  8357                           
  8358                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
  8359  0C20  018F               	clrf	15	;volatile
  8360                           
  8361                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
  8362  0C21  0191               	clrf	17	;volatile
  8363                           
  8364                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x02;
  8365  0C22  3002               	movlw	2
  8366  0C23  0093               	movwf	19	;volatile
  8367                           
  8368                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  8369  0C24  0192               	clrf	18	;volatile
  8370  0C25  0008               	return
  8371  0C26                     __end_of_OSCILLATOR_Initialize:
  8372                           
  8373                           	psect	text17
  8374  0C14                     __ptext17:	
  8375 ;; *************** function _I2C1_Initialize *****************
  8376 ;; Defined at:
  8377 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;		None
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;		None
  8382 ;; Return value:  Size  Location     Type
  8383 ;;                  1    wreg      void 
  8384 ;; Registers used:
  8385 ;;		wreg, status,2
  8386 ;; Tracked objects:
  8387 ;;		On entry : B3F/F
  8388 ;;		On exit  : B3F/3
  8389 ;;		Unchanged: B00/0
  8390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8391 ;;      Params:         0       0       0       0       0       0       0       0
  8392 ;;      Locals:         0       0       0       0       0       0       0       0
  8393 ;;      Temps:          0       0       0       0       0       0       0       0
  8394 ;;      Totals:         0       0       0       0       0       0       0       0
  8395 ;;Total ram usage:        0 bytes
  8396 ;; Hardware stack levels used: 1
  8397 ;; Hardware stack levels required when called: 4
  8398 ;; This function calls:
  8399 ;;		Nothing
  8400 ;; This function is called by:
  8401 ;;		_SYSTEM_Initialize
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           
  8406                           ;psect for function _I2C1_Initialize
  8407  0C14                     _I2C1_Initialize:
  8408                           
  8409                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
  8410                           
  8411                           ;incstack = 0
  8412                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  8413  0C14  0143               	movlb	3	; select bank3
  8414  0C15  018F               	clrf	15	;volatile
  8415                           
  8416                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
  8417  0C16  3008               	movlw	8
  8418  0C17  0090               	movwf	16	;volatile
  8419                           
  8420                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
  8421  0C18  0191               	clrf	17	;volatile
  8422                           
  8423                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x09;
  8424  0C19  3009               	movlw	9
  8425  0C1A  008D               	movwf	13	;volatile
  8426                           
  8427                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  8428  0C1B  1290               	bcf	16,5	;volatile
  8429  0C1C  0008               	return
  8430  0C1D                     __end_of_I2C1_Initialize:
  8431                           
  8432                           	psect	text18
  8433  062C                     __ptext18:	
  8434 ;; *************** function _DateDisplay *****************
  8435 ;; Defined at:
  8436 ;;		line 280 in file "main.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;		None
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;		None
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  1    wreg      void 
  8443 ;; Registers used:
  8444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 3F/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8450 ;;      Params:         0       0       0       0       0       0       0       0
  8451 ;;      Locals:         0       0       0       0       0       0       0       0
  8452 ;;      Temps:          0       1       0       0       0       0       0       0
  8453 ;;      Totals:         0       1       0       0       0       0       0       0
  8454 ;;Total ram usage:        1 bytes
  8455 ;; Hardware stack levels used: 1
  8456 ;; Hardware stack levels required when called: 10
  8457 ;; This function calls:
  8458 ;;		_BCD2Bin
  8459 ;;		_I2CRead
  8460 ;;		_Loader
  8461 ;;		_Settings
  8462 ;;		_SplitLoad
  8463 ;; This function is called by:
  8464 ;;		_main
  8465 ;; This function uses a non-reentrant model
  8466 ;;
  8467                           
  8468                           
  8469                           ;psect for function _DateDisplay
  8470  062C                     _DateDisplay:
  8471                           
  8472                           ;main.c: 282:     GoDate = 0;
  8473                           
  8474                           ;incstack = 0
  8475                           ; Regs used in _DateDisplay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8476  062C  127C               	bcf	_GoDate/(0+8),_GoDate& (0+7)
  8477                           
  8478                           ;main.c: 283:     (INTCONbits.GIE = 0);
  8479  062D  138B               	bcf	11,7	;volatile
  8480                           
  8481                           ;main.c: 284:     BCD2Bin(I2CRead(0x04));
  8482  062E  3004               	movlw	4
  8483  062F  318E  2685  3186   	fcall	_I2CRead
  8484  0632  318C  24D4  3186   	fcall	_BCD2Bin
  8485                           
  8486                           ;main.c: 285:     SplitLoad(3);
  8487  0635  3003               	movlw	3
  8488  0636  318C  24AF  3186   	fcall	_SplitLoad
  8489                           
  8490                           ;main.c: 286:     BCD2Bin(I2CRead(0x05));
  8491  0639  3005               	movlw	5
  8492  063A  318E  2685  3186   	fcall	_I2CRead
  8493  063D  318C  24D4  3186   	fcall	_BCD2Bin
  8494                           
  8495                           ;main.c: 287:     SplitLoad(0);
  8496  0640  3000               	movlw	0
  8497  0641  318C  24AF  3186   	fcall	_SplitLoad
  8498                           
  8499                           ;main.c: 288:     BCD2Bin(I2CRead(0x06));
  8500  0644  3006               	movlw	6
  8501  0645  318E  2685  3186   	fcall	_I2CRead
  8502  0648  318C  24D4  3186   	fcall	_BCD2Bin
  8503                           
  8504                           ;main.c: 289:     SplitLoad(6);
  8505  064B  3006               	movlw	6
  8506  064C  318C  24AF  3186   	fcall	_SplitLoad
  8507                           
  8508                           ;main.c: 290:     DisplayBuf[2] = 10;
  8509  064F  300A               	movlw	10
  8510  0650  00EA               	movwf	??_DateDisplay
  8511  0651  086A               	movf	??_DateDisplay,w
  8512  0652  00B2               	movwf	_DisplayBuf+2
  8513                           
  8514                           ;main.c: 291:     DisplayBuf[5] = 10;
  8515  0653  300A               	movlw	10
  8516  0654  00EA               	movwf	??_DateDisplay
  8517  0655  086A               	movf	??_DateDisplay,w
  8518  0656  00B5               	movwf	_DisplayBuf+5
  8519                           
  8520                           ;main.c: 292:     if (DateFormat == 1)
  8521  0657  0352               	decf	_DateFormat,w
  8522  0658  1D03               	btfss	3,2
  8523  0659  2E72               	goto	l569
  8524                           
  8525                           ;main.c: 293:     {;main.c: 294:         Temp = DisplayBuf[0];
  8526  065A  0830               	movf	_DisplayBuf,w
  8527  065B  00EA               	movwf	??_DateDisplay
  8528  065C  086A               	movf	??_DateDisplay,w
  8529  065D  00C7               	movwf	_Temp
  8530                           
  8531                           ;main.c: 295:         Pos = DisplayBuf[1];
  8532  065E  0831               	movf	_DisplayBuf+1,w
  8533  065F  00EA               	movwf	??_DateDisplay
  8534  0660  086A               	movf	??_DateDisplay,w
  8535  0661  00CB               	movwf	_Pos
  8536                           
  8537                           ;main.c: 296:         DisplayBuf[0] = DisplayBuf[3];
  8538  0662  0833               	movf	_DisplayBuf+3,w
  8539  0663  00EA               	movwf	??_DateDisplay
  8540  0664  086A               	movf	??_DateDisplay,w
  8541  0665  00B0               	movwf	_DisplayBuf
  8542                           
  8543                           ;main.c: 297:         DisplayBuf[1] = DisplayBuf[4];
  8544  0666  0834               	movf	_DisplayBuf+4,w
  8545  0667  00EA               	movwf	??_DateDisplay
  8546  0668  086A               	movf	??_DateDisplay,w
  8547  0669  00B1               	movwf	_DisplayBuf+1
  8548                           
  8549                           ;main.c: 298:         DisplayBuf[3] = Temp;
  8550  066A  0847               	movf	_Temp,w
  8551  066B  00EA               	movwf	??_DateDisplay
  8552  066C  086A               	movf	??_DateDisplay,w
  8553  066D  00B3               	movwf	_DisplayBuf+3
  8554                           
  8555                           ;main.c: 299:         DisplayBuf[4] = Pos;
  8556  066E  084B               	movf	_Pos,w
  8557  066F  00EA               	movwf	??_DateDisplay
  8558  0670  086A               	movf	??_DateDisplay,w
  8559  0671  00B4               	movwf	_DisplayBuf+4
  8560  0672                     l569:
  8561  0672  188E               	btfsc	14,1	;volatile
  8562  0673  2E72               	goto	l569
  8563                           
  8564                           ;main.c: 302:     Loader();
  8565  0674  318F  270F  3186   	fcall	_Loader
  8566                           
  8567                           ;main.c: 303:     _delay(16000);
  8568  0677  3015               	movlw	21
  8569  0678  0140               	movlb	0	; select bank0
  8570  0679  00EA               	movwf	??_DateDisplay
  8571  067A  30C6               	movlw	198
  8572  067B                     u4647:
  8573  067B  0B89               	decfsz	9,f
  8574  067C  2E7B               	goto	u4647
  8575  067D  0BEA               	decfsz	??_DateDisplay,f
  8576  067E  2E7B               	goto	u4647
  8577  067F  0000               	nop
  8578                           
  8579                           ;main.c: 304:     for (Pos=121; Pos--;)
  8580  0680  3079               	movlw	121
  8581  0681  0140               	movlb	0	; select bank0
  8582  0682  00EA               	movwf	??_DateDisplay
  8583  0683  086A               	movf	??_DateDisplay,w
  8584  0684  00CB               	movwf	_Pos
  8585  0685                     l5844:
  8586  0685  3001               	movlw	1
  8587  0686  0140               	movlb	0	; select bank0
  8588  0687  02CB               	subwf	_Pos,f
  8589  0688  0A4B               	incf	_Pos,w
  8590  0689  1903               	btfsc	3,2
  8591  068A  0008               	return
  8592                           
  8593                           ;main.c: 305:     {;main.c: 306:         if (PORTCbits.RC1)
  8594  068B  1C8E               	btfss	14,1	;volatile
  8595  068C  2E90               	goto	l5842
  8596                           
  8597                           ;main.c: 307:             Settings();
  8598  068D  3181  21AC  3186   	fcall	_Settings
  8599  0690                     l5842:
  8600                           
  8601                           ;main.c: 308:         _delay(16000);
  8602  0690  3015               	movlw	21
  8603  0691  0140               	movlb	0	; select bank0
  8604  0692  00EA               	movwf	??_DateDisplay
  8605  0693  30C6               	movlw	198
  8606  0694                     u4657:
  8607  0694  0B89               	decfsz	9,f
  8608  0695  2E94               	goto	u4657
  8609  0696  0BEA               	decfsz	??_DateDisplay,f
  8610  0697  2E94               	goto	u4657
  8611  0698  0000               	nop
  8612  0699  2E85               	goto	l5844
  8613  069A                     __end_of_DateDisplay:
  8614                           
  8615                           	psect	text19
  8616  01AC                     __ptext19:	
  8617 ;; *************** function _Settings *****************
  8618 ;; Defined at:
  8619 ;;		line 375 in file "main.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;		None
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      void 
  8626 ;; Registers used:
  8627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 3F/0
  8630 ;;		On exit  : 2F/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8633 ;;      Params:         0       0       0       0       0       0       0       0
  8634 ;;      Locals:         0       0       0       0       0       0       0       0
  8635 ;;      Temps:          0       2       0       0       0       0       0       0
  8636 ;;      Totals:         0       2       0       0       0       0       0       0
  8637 ;;Total ram usage:        2 bytes
  8638 ;; Hardware stack levels used: 1
  8639 ;; Hardware stack levels required when called: 9
  8640 ;; This function calls:
  8641 ;;		_BCDSetInc
  8642 ;;		_EEPROM_Write
  8643 ;;		_EmptyTubes
  8644 ;;		_Loader
  8645 ;;		_OtherSetInc
  8646 ;;		_TubeValuePicker
  8647 ;;		___wmul
  8648 ;; This function is called by:
  8649 ;;		_DateDisplay
  8650 ;; This function uses a non-reentrant model
  8651 ;;
  8652                           
  8653                           
  8654                           ;psect for function _Settings
  8655  01AC                     _Settings:
  8656                           
  8657                           ;main.c: 377:     (INTCONbits.GIE = 0);
  8658                           
  8659                           ;incstack = 0
  8660                           ; Regs used in _Settings: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8661  01AC  138B               	bcf	11,7	;volatile
  8662                           
  8663                           ;main.c: 378:     EmptyTubes();
  8664  01AD  318C  24C1  3181   	fcall	_EmptyTubes
  8665                           
  8666                           ;main.c: 379:     DisplayBuf[4] = 1;
  8667  01B0  01B4               	clrf	_DisplayBuf+4
  8668  01B1  0AB4               	incf	_DisplayBuf+4,f
  8669                           
  8670                           ;main.c: 380:     DisplayBuf[5] = 0x4C;
  8671  01B2  304C               	movlw	76
  8672  01B3  00E8               	movwf	??_Settings
  8673  01B4  0868               	movf	??_Settings,w
  8674  01B5  00B5               	movwf	_DisplayBuf+5
  8675                           
  8676                           ;main.c: 381:     DisplayBuf[6] = 0;
  8677  01B6  01B6               	clrf	_DisplayBuf+6
  8678                           
  8679                           ;main.c: 382:     DisplayBuf[7] = 0;
  8680  01B7  01B7               	clrf	_DisplayBuf+7
  8681                           
  8682                           ;main.c: 383:     Loader();
  8683  01B8  318F  270F  3181   	fcall	_Loader
  8684  01BB                     l607:	
  8685                           ;main.c: 384:     while (PORTCbits.RC1){}
  8686                           
  8687  01BB  188E               	btfsc	14,1	;volatile
  8688  01BC  29BB               	goto	l607
  8689                           
  8690                           ;main.c: 385:     _delay(16000);
  8691  01BD  3015               	movlw	21
  8692  01BE  0140               	movlb	0	; select bank0
  8693  01BF  00E8               	movwf	??_Settings
  8694  01C0  30C6               	movlw	198
  8695  01C1                     u4667:
  8696  01C1  0B89               	decfsz	9,f
  8697  01C2  29C1               	goto	u4667
  8698  01C3  0BE8               	decfsz	??_Settings,f
  8699  01C4  29C1               	goto	u4667
  8700  01C5  0000               	nop
  8701                           
  8702                           ;main.c: 386:     EmptyTubes();
  8703  01C6  318C  24C1  3181   	fcall	_EmptyTubes
  8704                           
  8705                           ;main.c: 387:     DisplayBuf[0] = 0;
  8706  01C9  01B0               	clrf	_DisplayBuf
  8707                           
  8708                           ;main.c: 388:     DisplayBuf[1] = 1;
  8709  01CA  01B1               	clrf	_DisplayBuf+1
  8710  01CB  0AB1               	incf	_DisplayBuf+1,f
  8711                           
  8712                           ;main.c: 389:     BCDSetInc(0x23, 0, 0x02);
  8713  01CC  01E1               	clrf	BCDSetInc@min
  8714  01CD  3002               	movlw	2
  8715  01CE  00E8               	movwf	??_Settings
  8716  01CF  0868               	movf	??_Settings,w
  8717  01D0  00E2               	movwf	BCDSetInc@i2creg
  8718  01D1  3023               	movlw	35
  8719  01D2  3184  2424  3181   	fcall	_BCDSetInc
  8720                           
  8721                           ;main.c: 390:     DisplayBuf[1]++;
  8722  01D5  3001               	movlw	1
  8723  01D6  0140               	movlb	0	; select bank0
  8724  01D7  00E8               	movwf	??_Settings
  8725  01D8  0868               	movf	??_Settings,w
  8726  01D9  07B1               	addwf	_DisplayBuf+1,f
  8727                           
  8728                           ;main.c: 391:     BCDSetInc(0x59, 0, 0x01);
  8729  01DA  01E1               	clrf	BCDSetInc@min
  8730  01DB  01E2               	clrf	BCDSetInc@i2creg
  8731  01DC  0AE2               	incf	BCDSetInc@i2creg,f
  8732  01DD  3059               	movlw	89
  8733  01DE  3184  2424  3181   	fcall	_BCDSetInc
  8734                           
  8735                           ;main.c: 392:     DisplayBuf[1]++;
  8736  01E1  3001               	movlw	1
  8737  01E2  0140               	movlb	0	; select bank0
  8738  01E3  00E8               	movwf	??_Settings
  8739  01E4  0868               	movf	??_Settings,w
  8740  01E5  07B1               	addwf	_DisplayBuf+1,f
  8741                           
  8742                           ;main.c: 393:     OtherSetInc(1, 0, &HourTypeStore, &HourType);
  8743  01E6  01E0               	clrf	OtherSetInc@min
  8744  01E7  307A               	movlw	(low _HourTypeStore)& (0+255)
  8745  01E8  00E8               	movwf	??_Settings
  8746  01E9  0868               	movf	??_Settings,w
  8747  01EA  00E1               	movwf	OtherSetInc@eeaddr
  8748  01EB  3050               	movlw	(low (_HourType| 0))& (0+255)
  8749  01EC  00E9               	movwf	??_Settings+1
  8750  01ED  0869               	movf	??_Settings+1,w
  8751  01EE  00E2               	movwf	OtherSetInc@value
  8752  01EF  3001               	movlw	1
  8753  01F0  3183  2388  3181   	fcall	_OtherSetInc
  8754                           
  8755                           ;main.c: 394:     DisplayBuf[1]++;
  8756  01F3  3001               	movlw	1
  8757  01F4  0140               	movlb	0	; select bank0
  8758  01F5  00E8               	movwf	??_Settings
  8759  01F6  0868               	movf	??_Settings,w
  8760  01F7  07B1               	addwf	_DisplayBuf+1,f
  8761                           
  8762                           ;main.c: 395:     BCDSetInc(0x31, 0x1, 0x04);
  8763  01F8  01E1               	clrf	BCDSetInc@min
  8764  01F9  0AE1               	incf	BCDSetInc@min,f
  8765  01FA  3004               	movlw	4
  8766  01FB  00E8               	movwf	??_Settings
  8767  01FC  0868               	movf	??_Settings,w
  8768  01FD  00E2               	movwf	BCDSetInc@i2creg
  8769  01FE  3031               	movlw	49
  8770  01FF  3184  2424  3181   	fcall	_BCDSetInc
  8771                           
  8772                           ;main.c: 396:     DisplayBuf[1]++;
  8773  0202  3001               	movlw	1
  8774  0203  0140               	movlb	0	; select bank0
  8775  0204  00E8               	movwf	??_Settings
  8776  0205  0868               	movf	??_Settings,w
  8777  0206  07B1               	addwf	_DisplayBuf+1,f
  8778                           
  8779                           ;main.c: 397:     BCDSetInc(0x12, 0x1, 0x05);
  8780  0207  01E1               	clrf	BCDSetInc@min
  8781  0208  0AE1               	incf	BCDSetInc@min,f
  8782  0209  3005               	movlw	5
  8783  020A  00E8               	movwf	??_Settings
  8784  020B  0868               	movf	??_Settings,w
  8785  020C  00E2               	movwf	BCDSetInc@i2creg
  8786  020D  3012               	movlw	18
  8787  020E  3184  2424  3181   	fcall	_BCDSetInc
  8788                           
  8789                           ;main.c: 398:     DisplayBuf[1]++;
  8790  0211  3001               	movlw	1
  8791  0212  0140               	movlb	0	; select bank0
  8792  0213  00E8               	movwf	??_Settings
  8793  0214  0868               	movf	??_Settings,w
  8794  0215  07B1               	addwf	_DisplayBuf+1,f
  8795                           
  8796                           ;main.c: 399:     BCDSetInc(0x99, 0, 0x05);
  8797  0216  01E1               	clrf	BCDSetInc@min
  8798  0217  3005               	movlw	5
  8799  0218  00E8               	movwf	??_Settings
  8800  0219  0868               	movf	??_Settings,w
  8801  021A  00E2               	movwf	BCDSetInc@i2creg
  8802  021B  3099               	movlw	153
  8803  021C  3184  2424  3181   	fcall	_BCDSetInc
  8804                           
  8805                           ;main.c: 400:     DisplayBuf[1]++;
  8806  021F  3001               	movlw	1
  8807  0220  0140               	movlb	0	; select bank0
  8808  0221  00E8               	movwf	??_Settings
  8809  0222  0868               	movf	??_Settings,w
  8810  0223  07B1               	addwf	_DisplayBuf+1,f
  8811                           
  8812                           ;main.c: 401:     OtherSetInc(1, 0, &DateFormatStore, &DateFormat);
  8813  0224  01E0               	clrf	OtherSetInc@min
  8814  0225  307F               	movlw	(low _DateFormatStore)& (0+255)
  8815  0226  00E8               	movwf	??_Settings
  8816  0227  0868               	movf	??_Settings,w
  8817  0228  00E1               	movwf	OtherSetInc@eeaddr
  8818  0229  3052               	movlw	(low (_DateFormat| 0))& (0+255)
  8819  022A  00E9               	movwf	??_Settings+1
  8820  022B  0869               	movf	??_Settings+1,w
  8821  022C  00E2               	movwf	OtherSetInc@value
  8822  022D  3001               	movlw	1
  8823  022E  3183  2388  3181   	fcall	_OtherSetInc
  8824                           
  8825                           ;main.c: 402:     DisplayBuf[1]++;
  8826  0231  3001               	movlw	1
  8827  0232  0140               	movlb	0	; select bank0
  8828  0233  00E8               	movwf	??_Settings
  8829  0234  0868               	movf	??_Settings,w
  8830  0235  07B1               	addwf	_DisplayBuf+1,f
  8831                           
  8832                           ;main.c: 403:     BCDSetInc(0x23, 0, 0x14);
  8833  0236  01E1               	clrf	BCDSetInc@min
  8834  0237  3014               	movlw	20
  8835  0238  00E8               	movwf	??_Settings
  8836  0239  0868               	movf	??_Settings,w
  8837  023A  00E2               	movwf	BCDSetInc@i2creg
  8838  023B  3023               	movlw	35
  8839  023C  3184  2424  3181   	fcall	_BCDSetInc
  8840                           
  8841                           ;main.c: 404:     EEPROM_Write(&BlankStartStore, BlankStart);
  8842  023F  0140               	movlb	0	; select bank0
  8843  0240  0849               	movf	_BlankStart,w
  8844  0241  00E8               	movwf	??_Settings
  8845  0242  0868               	movf	??_Settings,w
  8846  0243  00F1               	movwf	EEPROM_Write@data
  8847  0244  3079               	movlw	(low _BlankStartStore)& (0+255)
  8848  0245  318D  25FF  3181   	fcall	_EEPROM_Write
  8849                           
  8850                           ;main.c: 405:     DisplayBuf[1]++;
  8851  0248  3001               	movlw	1
  8852  0249  0140               	movlb	0	; select bank0
  8853  024A  00E8               	movwf	??_Settings
  8854  024B  0868               	movf	??_Settings,w
  8855  024C  07B1               	addwf	_DisplayBuf+1,f
  8856                           
  8857                           ;main.c: 406:     BCDSetInc(0x23, 0, 0x15);
  8858  024D  01E1               	clrf	BCDSetInc@min
  8859  024E  3015               	movlw	21
  8860  024F  00E8               	movwf	??_Settings
  8861  0250  0868               	movf	??_Settings,w
  8862  0251  00E2               	movwf	BCDSetInc@i2creg
  8863  0252  3023               	movlw	35
  8864  0253  3184  2424  3181   	fcall	_BCDSetInc
  8865                           
  8866                           ;main.c: 407:     EEPROM_Write(&BlankEndStore, BlankEnd);
  8867  0256  0140               	movlb	0	; select bank0
  8868  0257  0848               	movf	_BlankEnd,w
  8869  0258  00E8               	movwf	??_Settings
  8870  0259  0868               	movf	??_Settings,w
  8871  025A  00F1               	movwf	EEPROM_Write@data
  8872  025B  3078               	movlw	(low _BlankEndStore)& (0+255)
  8873  025C  318D  25FF  3181   	fcall	_EEPROM_Write
  8874                           
  8875                           ;main.c: 408:     DisplayBuf[0]++;
  8876  025F  3001               	movlw	1
  8877  0260  0140               	movlb	0	; select bank0
  8878  0261  00E8               	movwf	??_Settings
  8879  0262  0868               	movf	??_Settings,w
  8880  0263  07B0               	addwf	_DisplayBuf,f
  8881                           
  8882                           ;main.c: 409:     DisplayBuf[1] = 0;
  8883  0264  01B1               	clrf	_DisplayBuf+1
  8884                           
  8885                           ;main.c: 410:     DisplayBuf[2] = 0x52;
  8886  0265  3052               	movlw	82
  8887  0266  00E8               	movwf	??_Settings
  8888  0267  0868               	movf	??_Settings,w
  8889  0268  00B2               	movwf	_DisplayBuf+2
  8890                           
  8891                           ;main.c: 411:     if (TimeFast == 0)
  8892  0269  084A               	movf	_TimeFast,w
  8893  026A  1D03               	btfss	3,2
  8894  026B  2A70               	goto	l5656
  8895                           
  8896                           ;main.c: 412:         DisplayBuf[2] = 10;
  8897  026C  300A               	movlw	10
  8898  026D  00E8               	movwf	??_Settings
  8899  026E  0868               	movf	??_Settings,w
  8900  026F  00B2               	movwf	_DisplayBuf+2
  8901  0270                     l5656:
  8902                           
  8903                           ;main.c: 413:     TimeSet = 1;
  8904  0270  14FC               	bsf	_TimeSet/(0+8),_TimeSet& (0+7)
  8905                           
  8906                           ;main.c: 414:     DisplayBuf[3] = 0;
  8907  0271  01B3               	clrf	_DisplayBuf+3
  8908                           
  8909                           ;main.c: 415:     DisplayBuf[4] = 0;
  8910  0272  01B4               	clrf	_DisplayBuf+4
  8911                           
  8912                           ;main.c: 416:     DisplayBuf[5] = 0;
  8913  0273  01B5               	clrf	_DisplayBuf+5
  8914                           
  8915                           ;main.c: 417:     DisplayBuf[6] = 0;
  8916  0274  01B6               	clrf	_DisplayBuf+6
  8917                           
  8918                           ;main.c: 418:     DisplayBuf[7] = 0;
  8919  0275  01B7               	clrf	_DisplayBuf+7
  8920                           
  8921                           ;main.c: 419:     TubeValuePicker(3);
  8922  0276  3003               	movlw	3
  8923  0277  3186  269A  3181   	fcall	_TubeValuePicker
  8924                           
  8925                           ;main.c: 420:     TimeSet = 0;
  8926  027A  10FC               	bcf	_TimeSet/(0+8),_TimeSet& (0+7)
  8927                           
  8928                           ;main.c: 421:     if (DisplayBuf[2] == 0x52)
  8929  027B  3052               	movlw	82
  8930  027C  0632               	xorwf	_DisplayBuf+2,w
  8931  027D  1D03               	btfss	3,2
  8932  027E  2A82               	goto	l5676
  8933                           
  8934                           ;main.c: 422:         TimeFast = 1;
  8935  027F  01CA               	clrf	_TimeFast
  8936  0280  0ACA               	incf	_TimeFast,f
  8937  0281  2A83               	goto	l612
  8938  0282                     l5676:
  8939                           
  8940                           ;main.c: 424:         TimeFast = 0;
  8941  0282  01CA               	clrf	_TimeFast
  8942  0283                     l612:
  8943                           
  8944                           ;main.c: 425:     TimeAdj = 0;
  8945  0283  01BA               	clrf	_TimeAdj
  8946  0284  01BB               	clrf	_TimeAdj+1
  8947                           
  8948                           ;main.c: 426:     for (Pos=3; Pos<8; Pos++)
  8949  0285  3003               	movlw	3
  8950  0286  00E8               	movwf	??_Settings
  8951  0287  0868               	movf	??_Settings,w
  8952  0288  00CB               	movwf	_Pos
  8953                           
  8954                           ;main.c: 432:             break;
  8955  0289  2A8E               	goto	l5680
  8956  028A                     l5692:
  8957                           
  8958                           ;main.c: 434:     }
  8959  028A  3001               	movlw	1
  8960  028B  00E8               	movwf	??_Settings
  8961  028C  0868               	movf	??_Settings,w
  8962  028D  07CB               	addwf	_Pos,f
  8963  028E                     l5680:
  8964  028E  3008               	movlw	8
  8965  028F  024B               	subwf	_Pos,w
  8966  0290  1803               	btfsc	3,0
  8967  0291  2AB9               	goto	l5696
  8968                           
  8969                           ;main.c: 427:     {;main.c: 428:         TimeAdj = (TimeAdj * 10) + DisplayBuf[Pos];
  8970  0292  084B               	movf	_Pos,w
  8971  0293  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
  8972  0294  0086               	movwf	6
  8973  0295  0187               	clrf	7
  8974  0296  0801               	movf	1,w
  8975  0297  00E8               	movwf	??_Settings
  8976  0298  01E9               	clrf	??_Settings+1
  8977  0299  083B               	movf	_TimeAdj+1,w
  8978  029A  00F2               	movwf	___wmul@multiplier+1
  8979  029B  083A               	movf	_TimeAdj,w
  8980  029C  00F1               	movwf	___wmul@multiplier
  8981  029D  300A               	movlw	10
  8982  029E  00F3               	movwf	___wmul@multiplicand
  8983  029F  3000               	movlw	0
  8984  02A0  00F4               	movwf	___wmul@multiplicand+1
  8985  02A1  318D  25AB  3181   	fcall	___wmul
  8986  02A4  0868               	movf	??_Settings,w
  8987  02A5  0771               	addwf	?___wmul,w
  8988  02A6  00BA               	movwf	_TimeAdj
  8989  02A7  0869               	movf	??_Settings+1,w
  8990  02A8  3D72               	addwfc	?___wmul+1,w
  8991  02A9  00BB               	movwf	_TimeAdj+1
  8992                           
  8993                           ;main.c: 429:         if (Pos == 6 && TimeAdj > 6554)
  8994  02AA  3006               	movlw	6
  8995  02AB  064B               	xorwf	_Pos,w
  8996  02AC  1D03               	btfss	3,2
  8997  02AD  2A8A               	goto	l5692
  8998  02AE  3019               	movlw	25
  8999  02AF  023B               	subwf	_TimeAdj+1,w
  9000  02B0  309B               	movlw	155
  9001  02B1  1903               	skipnz
  9002  02B2  023A               	subwf	_TimeAdj,w
  9003  02B3  1C03               	skipc
  9004  02B4  2A8A               	goto	l5692
  9005                           
  9006                           ;main.c: 430:         {;main.c: 431:             TimeAdj = 0xffff;
  9007  02B5  30FF               	movlw	255
  9008  02B6  00BA               	movwf	_TimeAdj
  9009  02B7  30FF               	movlw	255
  9010  02B8  00BB               	movwf	_TimeAdj+1
  9011  02B9                     l5696:
  9012                           
  9013                           ;main.c: 435:     EEPROM_Write(&TimeFastStore, TimeFast);
  9014  02B9  084A               	movf	_TimeFast,w
  9015  02BA  00E8               	movwf	??_Settings
  9016  02BB  0868               	movf	??_Settings,w
  9017  02BC  00F1               	movwf	EEPROM_Write@data
  9018  02BD  307C               	movlw	(low _TimeFastStore)& (0+255)
  9019  02BE  318D  25FF  3181   	fcall	_EEPROM_Write
  9020                           
  9021                           ;main.c: 436:     EEPROM_Write(&TimeAdjStore, (TimeAdj & 0x00FF));
  9022  02C1  0140               	movlb	0	; select bank0
  9023  02C2  083A               	movf	_TimeAdj,w
  9024  02C3  00E8               	movwf	??_Settings
  9025  02C4  0868               	movf	??_Settings,w
  9026  02C5  00F1               	movwf	EEPROM_Write@data
  9027  02C6  307D               	movlw	(low _TimeAdjStore)& (0+255)
  9028  02C7  318D  25FF  3181   	fcall	_EEPROM_Write
  9029                           
  9030                           ;main.c: 437:     EEPROM_Write((&TimeAdjStore + 1), ((TimeAdj >> 8) & 0x00FF));
  9031  02CA  0140               	movlb	0	; select bank0
  9032  02CB  083B               	movf	_TimeAdj+1,w
  9033  02CC  00E8               	movwf	??_Settings
  9034  02CD  0868               	movf	??_Settings,w
  9035  02CE  00F1               	movwf	EEPROM_Write@data
  9036  02CF  307F               	movlw	(low (_TimeAdjStore+2))& (0+255)
  9037  02D0  318D  25FF  3181   	fcall	_EEPROM_Write
  9038                           
  9039                           ;main.c: 438:     DisplayBuf[1]++;
  9040  02D3  3001               	movlw	1
  9041  02D4  0140               	movlb	0	; select bank0
  9042  02D5  00E8               	movwf	??_Settings
  9043  02D6  0868               	movf	??_Settings,w
  9044  02D7  07B1               	addwf	_DisplayBuf+1,f
  9045                           
  9046                           ;main.c: 439:     OtherSetInc(10, 1, &BrightnessStore, &Brightness);
  9047  02D8  01E0               	clrf	OtherSetInc@min
  9048  02D9  0AE0               	incf	OtherSetInc@min,f
  9049  02DA  307B               	movlw	(low _BrightnessStore)& (0+255)
  9050  02DB  00E8               	movwf	??_Settings
  9051  02DC  0868               	movf	??_Settings,w
  9052  02DD  00E1               	movwf	OtherSetInc@eeaddr
  9053  02DE  3051               	movlw	(low (_Brightness| 0))& (0+255)
  9054  02DF  00E9               	movwf	??_Settings+1
  9055  02E0  0869               	movf	??_Settings+1,w
  9056  02E1  00E2               	movwf	OtherSetInc@value
  9057  02E2  300A               	movlw	10
  9058  02E3  3183  2388         	fcall	_OtherSetInc
  9059  02E5  0008               	return
  9060  02E6                     __end_of_Settings:
  9061                           
  9062                           	psect	text20
  9063  0388                     __ptext20:	
  9064 ;; *************** function _OtherSetInc *****************
  9065 ;; Defined at:
  9066 ;;		line 303 in file "Subroutines.c"
  9067 ;; Parameters:    Size  Location     Type
  9068 ;;  max             1    wreg     unsigned char 
  9069 ;;  min             1   13[BANK0 ] unsigned char 
  9070 ;;  eeaddr          1   14[BANK0 ] PTR unsigned char 
  9071 ;;		 -> HourTypeStore(1), BrightnessStore(1), DateFormatStore(1), 
  9072 ;;  value           1   15[BANK0 ] PTR unsigned char 
  9073 ;;		 -> HourType(1), Brightness(1), DateFormat(1), 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;  max             1   20[BANK0 ] unsigned char 
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  1    wreg      void 
  9078 ;; Registers used:
  9079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9080 ;; Tracked objects:
  9081 ;;		On entry : 3F/0
  9082 ;;		On exit  : 2F/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9085 ;;      Params:         0       3       0       0       0       0       0       0
  9086 ;;      Locals:         0       1       0       0       0       0       0       0
  9087 ;;      Temps:          0       4       0       0       0       0       0       0
  9088 ;;      Totals:         0       8       0       0       0       0       0       0
  9089 ;;Total ram usage:        8 bytes
  9090 ;; Hardware stack levels used: 1
  9091 ;; Hardware stack levels required when called: 6
  9092 ;; This function calls:
  9093 ;;		_Buttons
  9094 ;;		_EEPROM_Write
  9095 ;;		_Loader
  9096 ;;		_NumSplit
  9097 ;;		_PWM6_LoadDutyValue
  9098 ;;		_SplitLoad
  9099 ;;		___awdiv
  9100 ;;		___wmul
  9101 ;; This function is called by:
  9102 ;;		_Settings
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106                           
  9107                           ;psect for function _OtherSetInc
  9108  0388                     _OtherSetInc:
  9109                           
  9110                           ;incstack = 0
  9111                           ; Regs used in _OtherSetInc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9112                           ;OtherSetInc@max stored from wreg
  9113  0388  00E7               	movwf	OtherSetInc@max
  9114                           
  9115                           ;Subroutines.c: 303: void OtherSetInc(uint8_t max, uint8_t min, uint8_t *eeaddr, uint8_t
      +                           *value);Subroutines.c: 304: {;Subroutines.c: 305:     OldSet = *value;
  9116  0389  0862               	movf	OtherSetInc@value,w
  9117  038A  0086               	movwf	6
  9118  038B  0187               	clrf	7
  9119  038C  0801               	movf	1,w
  9120  038D  00E3               	movwf	??_OtherSetInc
  9121  038E  0863               	movf	??_OtherSetInc,w
  9122  038F  00C6               	movwf	_OldSet
  9123  0390                     l5466:
  9124                           
  9125                           ;Subroutines.c: 307:     {;Subroutines.c: 308:         if (eeaddr == &HourTypeStore)
  9126  0390  0140               	movlb	0	; select bank0
  9127  0391  0861               	movf	OtherSetInc@eeaddr,w
  9128  0392  3A7A               	xorlw	(low _HourTypeStore)& (0+255)
  9129  0393  1D03               	skipz
  9130  0394  2BA7               	goto	l5476
  9131                           
  9132                           ;Subroutines.c: 309:         {;Subroutines.c: 310:             DisplayBuf[6] = 1;
  9133  0395  01B6               	clrf	_DisplayBuf+6
  9134  0396  0AB6               	incf	_DisplayBuf+6,f
  9135                           
  9136                           ;Subroutines.c: 311:             DisplayBuf[7] = 2;
  9137  0397  3002               	movlw	2
  9138  0398  00E3               	movwf	??_OtherSetInc
  9139  0399  0863               	movf	??_OtherSetInc,w
  9140  039A  00B7               	movwf	_DisplayBuf+7
  9141                           
  9142                           ;Subroutines.c: 312:             if (HourType == 0)
  9143  039B  0850               	movf	_HourType,w
  9144  039C  1D03               	btfss	3,2
  9145  039D  2BAF               	goto	l5480
  9146                           
  9147                           ;Subroutines.c: 313:             {;Subroutines.c: 314:                 DisplayBuf[6] = 2
      +                          ;
  9148  039E  3002               	movlw	2
  9149  039F  00E3               	movwf	??_OtherSetInc
  9150  03A0  0863               	movf	??_OtherSetInc,w
  9151  03A1  00B6               	movwf	_DisplayBuf+6
  9152                           
  9153                           ;Subroutines.c: 315:                 DisplayBuf[7] = 4;
  9154  03A2  3004               	movlw	4
  9155  03A3  00E3               	movwf	??_OtherSetInc
  9156  03A4  0863               	movf	??_OtherSetInc,w
  9157  03A5  00B7               	movwf	_DisplayBuf+7
  9158  03A6  2BAF               	goto	l5480
  9159  03A7                     l5476:
  9160                           
  9161                           ;Subroutines.c: 319:         {;Subroutines.c: 320:             NumSplit(value);
  9162  03A7  0862               	movf	OtherSetInc@value,w
  9163  03A8  318C  249E  3183   	fcall	_NumSplit
  9164                           
  9165                           ;Subroutines.c: 321:             SplitLoad(6);
  9166  03AB  3006               	movlw	6
  9167  03AC  318C  24AF  3183   	fcall	_SplitLoad
  9168  03AF                     l5480:
  9169                           
  9170                           ;Subroutines.c: 323:         Loader();
  9171  03AF  318F  270F  3183   	fcall	_Loader
  9172                           
  9173                           ;Subroutines.c: 324:         Temp = Buttons();
  9174  03B2  318F  2745  3183   	fcall	_Buttons
  9175  03B5  00E3               	movwf	??_OtherSetInc
  9176  03B6  0863               	movf	??_OtherSetInc,w
  9177  03B7  00C7               	movwf	_Temp
  9178                           
  9179                           ;Subroutines.c: 325:         if (Temp == 3)
  9180  03B8  3003               	movlw	3
  9181  03B9  0647               	xorwf	_Temp,w
  9182  03BA  1903               	btfsc	3,2
  9183  03BB  2C12               	goto	l5508
  9184  03BC  0347               	decf	_Temp,w
  9185  03BD  1D03               	btfss	3,2
  9186  03BE  2BCF               	goto	l5498
  9187                           
  9188                           ;Subroutines.c: 328:         {;Subroutines.c: 329:             (*value)++;
  9189  03BF  3001               	movlw	1
  9190  03C0  00E3               	movwf	??_OtherSetInc
  9191  03C1  0862               	movf	OtherSetInc@value,w
  9192  03C2  0086               	movwf	6
  9193  03C3  0187               	clrf	7
  9194  03C4  0863               	movf	??_OtherSetInc,w
  9195  03C5  0781               	addwf	1,f
  9196                           
  9197                           ;Subroutines.c: 330:             if (*value > max)
  9198  03C6  0862               	movf	OtherSetInc@value,w
  9199  03C7  0086               	movwf	6
  9200  03C8  0187               	clrf	7
  9201  03C9  0801               	movf	1,w
  9202  03CA  0267               	subwf	OtherSetInc@max,w
  9203  03CB  1803               	skipnc
  9204  03CC  2BED               	goto	l5504
  9205                           
  9206                           ;Subroutines.c: 331:                 *value = min;
  9207  03CD  0860               	movf	OtherSetInc@min,w
  9208  03CE  2BE1               	goto	L2
  9209  03CF                     l5498:
  9210                           
  9211                           ;Subroutines.c: 334:         {;Subroutines.c: 335:             if (*value - min == 0)
  9212  03CF  0862               	movf	OtherSetInc@value,w
  9213  03D0  0086               	movwf	6
  9214  03D1  0187               	clrf	7
  9215  03D2  0801               	movf	1,w
  9216  03D3  00E3               	movwf	??_OtherSetInc
  9217  03D4  01E4               	clrf	??_OtherSetInc+1
  9218  03D5  0864               	movf	??_OtherSetInc+1,w
  9219  03D6  00E6               	movwf	??_OtherSetInc+3
  9220  03D7  0860               	movf	OtherSetInc@min,w
  9221  03D8  0263               	subwf	??_OtherSetInc,w
  9222  03D9  00E5               	movwf	??_OtherSetInc+2
  9223  03DA  1C03               	skipc
  9224  03DB  03E6               	decf	??_OtherSetInc+3,f
  9225  03DC  0865               	movf	??_OtherSetInc+2,w
  9226  03DD  0466               	iorwf	??_OtherSetInc+3,w
  9227  03DE  1D03               	btfss	3,2
  9228  03DF  2BE8               	goto	l5502
  9229                           
  9230                           ;Subroutines.c: 336:                 *value = max;
  9231  03E0  0867               	movf	OtherSetInc@max,w
  9232  03E1                     L2:
  9233  03E1  00E3               	movwf	??_OtherSetInc
  9234  03E2  0862               	movf	OtherSetInc@value,w
  9235  03E3  0086               	movwf	6
  9236  03E4  0187               	clrf	7
  9237  03E5  0863               	movf	??_OtherSetInc,w
  9238  03E6  0081               	movwf	1
  9239  03E7  2BED               	goto	l5504
  9240  03E8                     l5502:
  9241                           
  9242                           ;Subroutines.c: 338:                 (*value)--;
  9243  03E8  0862               	movf	OtherSetInc@value,w
  9244  03E9  0086               	movwf	6
  9245  03EA  0187               	clrf	7
  9246  03EB  3001               	movlw	1
  9247  03EC  0281               	subwf	1,f
  9248  03ED                     l5504:
  9249                           
  9250                           ;Subroutines.c: 340:         if (eeaddr == &BrightnessStore)
  9251  03ED  0861               	movf	OtherSetInc@eeaddr,w
  9252  03EE  3A7B               	xorlw	(low _BrightnessStore)& (0+255)
  9253  03EF  1D03               	skipz
  9254  03F0  2B90               	goto	l5466
  9255                           
  9256                           ;Subroutines.c: 341:             PWM6_LoadDutyValue(((5190 * (Brightness)) / 100));
  9257  03F1  3064               	movlw	100
  9258  03F2  00F7               	movwf	___awdiv@divisor
  9259  03F3  3000               	movlw	0
  9260  03F4  00F8               	movwf	___awdiv@divisor+1
  9261  03F5  0851               	movf	_Brightness,w
  9262  03F6  00E3               	movwf	??_OtherSetInc
  9263  03F7  01E4               	clrf	??_OtherSetInc+1
  9264  03F8  0863               	movf	??_OtherSetInc,w
  9265  03F9  00F1               	movwf	___wmul@multiplier
  9266  03FA  0864               	movf	??_OtherSetInc+1,w
  9267  03FB  00F2               	movwf	___wmul@multiplier+1
  9268  03FC  3046               	movlw	70
  9269  03FD  00F3               	movwf	___wmul@multiplicand
  9270  03FE  3014               	movlw	20
  9271  03FF  00F4               	movwf	___wmul@multiplicand+1
  9272  0400  318D  25AB  3183   	fcall	___wmul
  9273  0403  0872               	movf	?___wmul+1,w
  9274  0404  00FA               	movwf	___awdiv@dividend+1
  9275  0405  0871               	movf	?___wmul,w
  9276  0406  00F9               	movwf	___awdiv@dividend
  9277  0407  3187  2700  3183   	fcall	___awdiv
  9278  040A  0878               	movf	?___awdiv+1,w
  9279  040B  00D8               	movwf	PWM6_LoadDutyValue@dutyValue+1
  9280  040C  0877               	movf	?___awdiv,w
  9281  040D  00D7               	movwf	PWM6_LoadDutyValue@dutyValue
  9282  040E  318D  2561  3183   	fcall	_PWM6_LoadDutyValue
  9283  0411  2B90               	goto	l5466
  9284  0412                     l5508:
  9285                           
  9286                           ;Subroutines.c: 343:     if (*value != OldSet)
  9287  0412  0862               	movf	OtherSetInc@value,w
  9288  0413  0086               	movwf	6
  9289  0414  0187               	clrf	7
  9290  0415  0801               	movf	1,w
  9291  0416  0646               	xorwf	_OldSet,w
  9292  0417  1903               	skipnz
  9293  0418  0008               	return
  9294                           
  9295                           ;Subroutines.c: 344:         EEPROM_Write(eeaddr, *value);
  9296  0419  0862               	movf	OtherSetInc@value,w
  9297  041A  0086               	movwf	6
  9298  041B  0187               	clrf	7
  9299  041C  0801               	movf	1,w
  9300  041D  00E3               	movwf	??_OtherSetInc
  9301  041E  0863               	movf	??_OtherSetInc,w
  9302  041F  00F1               	movwf	EEPROM_Write@data
  9303  0420  0861               	movf	OtherSetInc@eeaddr,w
  9304  0421  318D  25FF         	fcall	_EEPROM_Write
  9305  0423  0008               	return
  9306  0424                     __end_of_OtherSetInc:
  9307                           
  9308                           	psect	text21
  9309  0DAB                     __ptext21:	
  9310 ;; *************** function ___wmul *****************
  9311 ;; Defined at:
  9312 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;  multiplier      2    1[COMMON] unsigned int 
  9315 ;;  multiplicand    2    3[COMMON] unsigned int 
  9316 ;; Auto vars:     Size  Location     Type
  9317 ;;  product         2    5[COMMON] unsigned int 
  9318 ;; Return value:  Size  Location     Type
  9319 ;;                  2    1[COMMON] unsigned int 
  9320 ;; Registers used:
  9321 ;;		wreg, status,2, status,0
  9322 ;; Tracked objects:
  9323 ;;		On entry : 3F/0
  9324 ;;		On exit  : 3F/0
  9325 ;;		Unchanged: 3F/0
  9326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9327 ;;      Params:         4       0       0       0       0       0       0       0
  9328 ;;      Locals:         2       0       0       0       0       0       0       0
  9329 ;;      Temps:          0       0       0       0       0       0       0       0
  9330 ;;      Totals:         6       0       0       0       0       0       0       0
  9331 ;;Total ram usage:        6 bytes
  9332 ;; Hardware stack levels used: 1
  9333 ;; Hardware stack levels required when called: 4
  9334 ;; This function calls:
  9335 ;;		Nothing
  9336 ;; This function is called by:
  9337 ;;		_Settings
  9338 ;;		_TubesOn
  9339 ;;		_OtherSetInc
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343                           
  9344                           ;psect for function ___wmul
  9345  0DAB                     ___wmul:
  9346                           
  9347                           ;incstack = 0
  9348                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9349  0DAB  01F5               	clrf	___wmul@product
  9350  0DAC  01F6               	clrf	___wmul@product+1
  9351  0DAD                     l5266:
  9352  0DAD  1C71               	btfss	___wmul@multiplier,0
  9353  0DAE  2DB3               	goto	l1668
  9354  0DAF  0873               	movf	___wmul@multiplicand,w
  9355  0DB0  07F5               	addwf	___wmul@product,f
  9356  0DB1  0874               	movf	___wmul@multiplicand+1,w
  9357  0DB2  3DF6               	addwfc	___wmul@product+1,f
  9358  0DB3                     l1668:
  9359  0DB3  3001               	movlw	1
  9360  0DB4                     u3435:
  9361  0DB4  35F3               	lslf	___wmul@multiplicand,f
  9362  0DB5  0DF4               	rlf	___wmul@multiplicand+1,f
  9363  0DB6  0B89               	decfsz	9,f
  9364  0DB7  2DB4               	goto	u3435
  9365  0DB8  3001               	movlw	1
  9366  0DB9                     u3445:
  9367  0DB9  36F2               	lsrf	___wmul@multiplier+1,f
  9368  0DBA  0CF1               	rrf	___wmul@multiplier,f
  9369  0DBB  0B89               	decfsz	9,f
  9370  0DBC  2DB9               	goto	u3445
  9371  0DBD  0871               	movf	___wmul@multiplier,w
  9372  0DBE  0472               	iorwf	___wmul@multiplier+1,w
  9373  0DBF  1D03               	btfss	3,2
  9374  0DC0  2DAD               	goto	l5266
  9375  0DC1  0876               	movf	___wmul@product+1,w
  9376  0DC2  00F2               	movwf	?___wmul+1
  9377  0DC3  0875               	movf	___wmul@product,w
  9378  0DC4  00F1               	movwf	?___wmul
  9379  0DC5  0008               	return
  9380  0DC6                     __end_of___wmul:
  9381                           
  9382                           	psect	text22
  9383  0700                     __ptext22:	
  9384 ;; *************** function ___awdiv *****************
  9385 ;; Defined at:
  9386 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  9387 ;; Parameters:    Size  Location     Type
  9388 ;;  divisor         2    7[COMMON] int 
  9389 ;;  dividend        2    9[COMMON] int 
  9390 ;; Auto vars:     Size  Location     Type
  9391 ;;  quotient        2    2[BANK0 ] int 
  9392 ;;  sign            1    1[BANK0 ] unsigned char 
  9393 ;;  counter         1    0[BANK0 ] unsigned char 
  9394 ;; Return value:  Size  Location     Type
  9395 ;;                  2    7[COMMON] int 
  9396 ;; Registers used:
  9397 ;;		wreg, status,2, status,0
  9398 ;; Tracked objects:
  9399 ;;		On entry : 3F/0
  9400 ;;		On exit  : 3F/0
  9401 ;;		Unchanged: 0/0
  9402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9403 ;;      Params:         4       0       0       0       0       0       0       0
  9404 ;;      Locals:         0       4       0       0       0       0       0       0
  9405 ;;      Temps:          1       0       0       0       0       0       0       0
  9406 ;;      Totals:         5       4       0       0       0       0       0       0
  9407 ;;Total ram usage:        9 bytes
  9408 ;; Hardware stack levels used: 1
  9409 ;; Hardware stack levels required when called: 4
  9410 ;; This function calls:
  9411 ;;		Nothing
  9412 ;; This function is called by:
  9413 ;;		_TubesOn
  9414 ;;		_OtherSetInc
  9415 ;; This function uses a non-reentrant model
  9416 ;;
  9417                           
  9418                           
  9419                           ;psect for function ___awdiv
  9420  0700                     ___awdiv:
  9421                           
  9422                           ;incstack = 0
  9423                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9424  0700  01D4               	clrf	___awdiv@sign
  9425  0701  1FF8               	btfss	___awdiv@divisor+1,7
  9426  0702  2F0A               	goto	l5286
  9427  0703  09F7               	comf	___awdiv@divisor,f
  9428  0704  09F8               	comf	___awdiv@divisor+1,f
  9429  0705  0AF7               	incf	___awdiv@divisor,f
  9430  0706  1903               	skipnz
  9431  0707  0AF8               	incf	___awdiv@divisor+1,f
  9432  0708  01D4               	clrf	___awdiv@sign
  9433  0709  0AD4               	incf	___awdiv@sign,f
  9434  070A                     l5286:
  9435  070A  1FFA               	btfss	___awdiv@dividend+1,7
  9436  070B  2F15               	goto	l5292
  9437  070C  09F9               	comf	___awdiv@dividend,f
  9438  070D  09FA               	comf	___awdiv@dividend+1,f
  9439  070E  0AF9               	incf	___awdiv@dividend,f
  9440  070F  1903               	skipnz
  9441  0710  0AFA               	incf	___awdiv@dividend+1,f
  9442  0711  3001               	movlw	1
  9443  0712  00FB               	movwf	??___awdiv
  9444  0713  087B               	movf	??___awdiv,w
  9445  0714  06D4               	xorwf	___awdiv@sign,f
  9446  0715                     l5292:
  9447  0715  01D5               	clrf	___awdiv@quotient
  9448  0716  01D6               	clrf	___awdiv@quotient+1
  9449  0717  0877               	movf	___awdiv@divisor,w
  9450  0718  0478               	iorwf	___awdiv@divisor+1,w
  9451  0719  1903               	btfsc	3,2
  9452  071A  2F44               	goto	l5314
  9453  071B  01D3               	clrf	___awdiv@counter
  9454  071C  0AD3               	incf	___awdiv@counter,f
  9455  071D                     l5302:
  9456  071D  1BF8               	btfsc	___awdiv@divisor+1,7
  9457  071E  2F29               	goto	l5304
  9458  071F  3001               	movlw	1
  9459  0720                     u3495:
  9460  0720  35F7               	lslf	___awdiv@divisor,f
  9461  0721  0DF8               	rlf	___awdiv@divisor+1,f
  9462  0722  0B89               	decfsz	9,f
  9463  0723  2F20               	goto	u3495
  9464  0724  3001               	movlw	1
  9465  0725  00FB               	movwf	??___awdiv
  9466  0726  087B               	movf	??___awdiv,w
  9467  0727  07D3               	addwf	___awdiv@counter,f
  9468  0728  2F1D               	goto	l5302
  9469  0729                     l5304:
  9470  0729  3001               	movlw	1
  9471  072A                     u3515:
  9472  072A  35D5               	lslf	___awdiv@quotient,f
  9473  072B  0DD6               	rlf	___awdiv@quotient+1,f
  9474  072C  0B89               	decfsz	9,f
  9475  072D  2F2A               	goto	u3515
  9476  072E  0878               	movf	___awdiv@divisor+1,w
  9477  072F  027A               	subwf	___awdiv@dividend+1,w
  9478  0730  1D03               	skipz
  9479  0731  2F34               	goto	u3525
  9480  0732  0877               	movf	___awdiv@divisor,w
  9481  0733  0279               	subwf	___awdiv@dividend,w
  9482  0734                     u3525:
  9483  0734  1C03               	skipc
  9484  0735  2F3B               	goto	l5310
  9485  0736  0877               	movf	___awdiv@divisor,w
  9486  0737  02F9               	subwf	___awdiv@dividend,f
  9487  0738  0878               	movf	___awdiv@divisor+1,w
  9488  0739  3BFA               	subwfb	___awdiv@dividend+1,f
  9489  073A  1455               	bsf	___awdiv@quotient,0
  9490  073B                     l5310:
  9491  073B  3001               	movlw	1
  9492  073C                     u3535:
  9493  073C  36F8               	lsrf	___awdiv@divisor+1,f
  9494  073D  0CF7               	rrf	___awdiv@divisor,f
  9495  073E  0B89               	decfsz	9,f
  9496  073F  2F3C               	goto	u3535
  9497  0740  3001               	movlw	1
  9498  0741  02D3               	subwf	___awdiv@counter,f
  9499  0742  1D03               	btfss	3,2
  9500  0743  2F29               	goto	l5304
  9501  0744                     l5314:
  9502  0744  0854               	movf	___awdiv@sign,w
  9503  0745  1903               	btfsc	3,2
  9504  0746  2F4C               	goto	l5318
  9505  0747  09D5               	comf	___awdiv@quotient,f
  9506  0748  09D6               	comf	___awdiv@quotient+1,f
  9507  0749  0AD5               	incf	___awdiv@quotient,f
  9508  074A  1903               	skipnz
  9509  074B  0AD6               	incf	___awdiv@quotient+1,f
  9510  074C                     l5318:
  9511  074C  0856               	movf	___awdiv@quotient+1,w
  9512  074D  00F8               	movwf	?___awdiv+1
  9513  074E  0855               	movf	___awdiv@quotient,w
  9514  074F  00F7               	movwf	?___awdiv
  9515  0750  0008               	return
  9516  0751                     __end_of___awdiv:
  9517                           
  9518                           	psect	text23
  9519  0C9E                     __ptext23:	
  9520 ;; *************** function _NumSplit *****************
  9521 ;; Defined at:
  9522 ;;		line 457 in file "Subroutines.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;  input           1    wreg     unsigned char 
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;  input           1    2[COMMON] unsigned char 
  9527 ;; Return value:  Size  Location     Type
  9528 ;;                  1    wreg      void 
  9529 ;; Registers used:
  9530 ;;		wreg, status,2, status,0
  9531 ;; Tracked objects:
  9532 ;;		On entry : 3F/0
  9533 ;;		On exit  : 3F/0
  9534 ;;		Unchanged: 0/0
  9535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9536 ;;      Params:         0       0       0       0       0       0       0       0
  9537 ;;      Locals:         1       0       0       0       0       0       0       0
  9538 ;;      Temps:          1       0       0       0       0       0       0       0
  9539 ;;      Totals:         2       0       0       0       0       0       0       0
  9540 ;;Total ram usage:        2 bytes
  9541 ;; Hardware stack levels used: 1
  9542 ;; Hardware stack levels required when called: 4
  9543 ;; This function calls:
  9544 ;;		Nothing
  9545 ;; This function is called by:
  9546 ;;		_OtherSetInc
  9547 ;; This function uses a non-reentrant model
  9548 ;;
  9549                           
  9550                           
  9551                           ;psect for function _NumSplit
  9552  0C9E                     _NumSplit:
  9553                           
  9554                           ;incstack = 0
  9555                           ; Regs used in _NumSplit: [wreg+status,2+status,0]
  9556                           ;NumSplit@input stored from wreg
  9557  0C9E  00F2               	movwf	NumSplit@input
  9558                           
  9559                           ;Subroutines.c: 457: void NumSplit(uint8_t input);Subroutines.c: 458: {;Subroutines.c: 4
      +                          59:     BCDSplit[1] = input;
  9560  0C9F  0872               	movf	NumSplit@input,w
  9561  0CA0  00F1               	movwf	??_NumSplit
  9562  0CA1  0871               	movf	??_NumSplit,w
  9563  0CA2  00B9               	movwf	_BCDSplit+1
  9564                           
  9565                           ;Subroutines.c: 460:     BCDSplit[0] = 0;
  9566  0CA3  01B8               	clrf	_BCDSplit
  9567  0CA4                     l5256:	
  9568                           ;Subroutines.c: 461:     while(BCDSplit[1] >= 10)
  9569                           
  9570                           
  9571                           ;Subroutines.c: 461:     while(BCDSplit[1] >= 10)
  9572  0CA4  300A               	movlw	10
  9573  0CA5  0239               	subwf	_BCDSplit+1,w
  9574  0CA6  1C03               	btfss	3,0
  9575  0CA7  0008               	return
  9576                           
  9577                           ;Subroutines.c: 462:     {;Subroutines.c: 463:         BCDSplit[0]++;
  9578  0CA8  3001               	movlw	1
  9579  0CA9  00F1               	movwf	??_NumSplit
  9580  0CAA  0871               	movf	??_NumSplit,w
  9581  0CAB  07B8               	addwf	_BCDSplit,f
  9582                           
  9583                           ;Subroutines.c: 464:         BCDSplit[1] -= 10;
  9584  0CAC  300A               	movlw	10
  9585  0CAD  02B9               	subwf	_BCDSplit+1,f
  9586  0CAE  2CA4               	goto	l5256
  9587  0CAF                     __end_of_NumSplit:
  9588                           
  9589                           	psect	text24
  9590  0DFF                     __ptext24:	
  9591 ;; *************** function _EEPROM_Write *****************
  9592 ;; Defined at:
  9593 ;;		line 358 in file "Subroutines.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  addr            1    wreg     unsigned char 
  9596 ;;  data            1    1[COMMON] unsigned char 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  addr            1    2[COMMON] unsigned char 
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  1    wreg      void 
  9601 ;; Registers used:
  9602 ;;		wreg, status,2
  9603 ;; Tracked objects:
  9604 ;;		On entry : 3F/0
  9605 ;;		On exit  : 3F/10
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9608 ;;      Params:         1       0       0       0       0       0       0       0
  9609 ;;      Locals:         1       0       0       0       0       0       0       0
  9610 ;;      Temps:          0       0       0       0       0       0       0       0
  9611 ;;      Totals:         2       0       0       0       0       0       0       0
  9612 ;;Total ram usage:        2 bytes
  9613 ;; Hardware stack levels used: 1
  9614 ;; Hardware stack levels required when called: 4
  9615 ;; This function calls:
  9616 ;;		Nothing
  9617 ;; This function is called by:
  9618 ;;		_Settings
  9619 ;;		_OtherSetInc
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           
  9624                           ;psect for function _EEPROM_Write
  9625  0DFF                     _EEPROM_Write:
  9626                           
  9627                           ;incstack = 0
  9628                           ; Regs used in _EEPROM_Write: [wreg+status,2]
  9629                           ;EEPROM_Write@addr stored from wreg
  9630  0DFF  00F2               	movwf	EEPROM_Write@addr
  9631  0E00                     l918:	
  9632                           ;Subroutines.c: 358: void EEPROM_Write(uint8_t addr, uint8_t data);Subroutines.c: 359: {
      +                          ;Subroutines.c: 360:     while (NVMCON1bits.WR){}
  9633                           
  9634  0E00  0150               	movlb	16	; select bank16
  9635  0E01  189E               	btfsc	30,1	;volsfr
  9636  0E02  2E00               	goto	l918
  9637                           
  9638                           ;Subroutines.c: 361:  NVMCON1bits.NVMREGS = 1;
  9639  0E03  171E               	bsf	30,6	;volsfr
  9640                           
  9641                           ;Subroutines.c: 362:  NVMADRL = (addr) & 0xFFu;
  9642  0E04  0872               	movf	EEPROM_Write@addr,w
  9643  0E05  009A               	movwf	26	;volatile
  9644                           
  9645                           ;Subroutines.c: 363:  NVMADRH = 0x70;
  9646  0E06  3070               	movlw	112
  9647  0E07  009B               	movwf	27	;volatile
  9648                           
  9649                           ;Subroutines.c: 364:  NVMDATH = 0;
  9650  0E08  019D               	clrf	29	;volatile
  9651                           
  9652                           ;Subroutines.c: 365:  NVMDATL = (data) & 0xFFu;
  9653  0E09  0871               	movf	EEPROM_Write@data,w
  9654  0E0A  009C               	movwf	28	;volatile
  9655                           
  9656                           ;Subroutines.c: 366:  STATUSbits.CARRY = 0;
  9657  0E0B  1003               	bcf	3,0	;volatile
  9658                           
  9659                           ;Subroutines.c: 367:  if (INTCONbits.GIE)
  9660  0E0C  1B8B               	btfsc	11,7	;volatile
  9661                           
  9662                           ;Subroutines.c: 368:     {;Subroutines.c: 369:   STATUSbits.CARRY = 1;
  9663  0E0D  1403               	bsf	3,0	;volatile
  9664                           
  9665                           ;Subroutines.c: 371:  INTCONbits.GIE = 0;
  9666                           
  9667                           ;Subroutines.c: 370:  }
  9668  0E0E  138B               	bcf	11,7	;volatile
  9669                           
  9670                           ;Subroutines.c: 372:  NVMCON1bits.WREN = 1;
  9671  0E0F  151E               	bsf	30,2	;volsfr
  9672                           
  9673                           ;Subroutines.c: 373:  NVMCON2 = 0x55;
  9674  0E10  3055               	movlw	85
  9675  0E11  009F               	movwf	31	;volsfr
  9676                           
  9677                           ;Subroutines.c: 374:  NVMCON2 = 0xAA;
  9678  0E12  30AA               	movlw	170
  9679  0E13  009F               	movwf	31	;volsfr
  9680                           
  9681                           ;Subroutines.c: 375:  NVMCON1bits.WR = 1;
  9682  0E14  149E               	bsf	30,1	;volsfr
  9683  0E15                     l922:	
  9684                           ;Subroutines.c: 376:  while (NVMCON1bits.WR){}
  9685                           
  9686  0E15  189E               	btfsc	30,1	;volsfr
  9687  0E16  2E15               	goto	l922
  9688                           
  9689                           ;Subroutines.c: 377:  NVMCON1bits.WREN = 0;
  9690  0E17  111E               	bcf	30,2	;volsfr
  9691                           
  9692                           ;Subroutines.c: 378:  if (STATUSbits.CARRY)
  9693  0E18  1C03               	btfss	3,0	;volatile
  9694  0E19  0008               	return
  9695                           
  9696                           ;Subroutines.c: 379:     {;Subroutines.c: 380:   INTCONbits.GIE = 1;
  9697  0E1A  178B               	bsf	11,7	;volatile
  9698  0E1B  0008               	return
  9699  0E1C                     __end_of_EEPROM_Write:
  9700                           
  9701                           	psect	text25
  9702  0424                     __ptext25:	
  9703 ;; *************** function _BCDSetInc *****************
  9704 ;; Defined at:
  9705 ;;		line 247 in file "Subroutines.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;  max             1    wreg     unsigned char 
  9708 ;;  min             1   14[BANK0 ] unsigned char 
  9709 ;;  i2creg          1   15[BANK0 ] unsigned char 
  9710 ;; Auto vars:     Size  Location     Type
  9711 ;;  max             1   16[BANK0 ] unsigned char 
  9712 ;;  value           1   17[BANK0 ] unsigned char 
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  1    wreg      void 
  9715 ;; Registers used:
  9716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9717 ;; Tracked objects:
  9718 ;;		On entry : 3F/0
  9719 ;;		On exit  : 3C/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9722 ;;      Params:         0       2       0       0       0       0       0       0
  9723 ;;      Locals:         0       2       0       0       0       0       0       0
  9724 ;;      Temps:          4       0       0       0       0       0       0       0
  9725 ;;      Totals:         4       4       0       0       0       0       0       0
  9726 ;;Total ram usage:        8 bytes
  9727 ;; Hardware stack levels used: 1
  9728 ;; Hardware stack levels required when called: 8
  9729 ;; This function calls:
  9730 ;;		_BCD2Bin
  9731 ;;		_Buttons
  9732 ;;		_I2CRead
  9733 ;;		_I2CWrite
  9734 ;;		_Loader
  9735 ;;		_SplitLoad
  9736 ;; This function is called by:
  9737 ;;		_Settings
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           
  9742                           ;psect for function _BCDSetInc
  9743  0424                     _BCDSetInc:
  9744                           
  9745                           ;incstack = 0
  9746                           ; Regs used in _BCDSetInc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9747                           ;BCDSetInc@max stored from wreg
  9748  0424  00E3               	movwf	BCDSetInc@max
  9749                           
  9750                           ;Subroutines.c: 247: void BCDSetInc(uint8_t max, uint8_t min, uint8_t i2creg);Subroutine
      +                          s.c: 248: {;Subroutines.c: 249:     uint8_t value;;Subroutines.c: 251:     if (i2creg ==
      +                           0x14)
  9751  0425  3014               	movlw	20
  9752  0426  0662               	xorwf	BCDSetInc@i2creg,w
  9753  0427  1D03               	btfss	3,2
  9754  0428  2C2B               	goto	l5404
  9755                           
  9756                           ;Subroutines.c: 252:         value = BlankStart;
  9757  0429  0849               	movf	_BlankStart,w
  9758  042A  2C30               	goto	L6
  9759  042B                     l5404:
  9760  042B  3015               	movlw	21
  9761  042C  0662               	xorwf	BCDSetInc@i2creg,w
  9762  042D  1D03               	btfss	3,2
  9763  042E  2C33               	goto	l5408
  9764                           
  9765                           ;Subroutines.c: 254:         value = BlankEnd;
  9766  042F  0848               	movf	_BlankEnd,w
  9767  0430                     L6:
  9768  0430  00F7               	movwf	??_BCDSetInc
  9769  0431  0877               	movf	??_BCDSetInc,w
  9770  0432  2C3A               	goto	L3
  9771  0433                     l5408:
  9772                           
  9773                           ;Subroutines.c: 256:         value = I2CRead(i2creg);
  9774  0433  0862               	movf	BCDSetInc@i2creg,w
  9775  0434  318E  2685  3184   	fcall	_I2CRead
  9776  0437  00F7               	movwf	??_BCDSetInc
  9777  0438  0877               	movf	??_BCDSetInc,w
  9778  0439  0140               	movlb	0	; select bank0
  9779  043A                     L3:
  9780  043A  00E4               	movwf	BCDSetInc@value
  9781                           
  9782                           ;Subroutines.c: 257:     OldSet = value;
  9783  043B  0864               	movf	BCDSetInc@value,w
  9784  043C  00F7               	movwf	??_BCDSetInc
  9785  043D  0877               	movf	??_BCDSetInc,w
  9786  043E  00C6               	movwf	_OldSet
  9787  043F                     l5412:
  9788                           
  9789                           ;Subroutines.c: 259:     {;Subroutines.c: 260:         BCD2Bin(value);
  9790  043F  0864               	movf	BCDSetInc@value,w
  9791  0440  318C  24D4  3184   	fcall	_BCD2Bin
  9792                           
  9793                           ;Subroutines.c: 261:         SplitLoad(6);
  9794  0443  3006               	movlw	6
  9795  0444  318C  24AF  3184   	fcall	_SplitLoad
  9796                           
  9797                           ;Subroutines.c: 262:         Loader();
  9798  0447  318F  270F  3184   	fcall	_Loader
  9799                           
  9800                           ;Subroutines.c: 263:         _delay(16000);
  9801  044A  3015               	movlw	21
  9802  044B  00F7               	movwf	??_BCDSetInc
  9803  044C  30C6               	movlw	198
  9804  044D                     u4677:
  9805  044D  0B89               	decfsz	9,f
  9806  044E  2C4D               	goto	u4677
  9807  044F  0BF7               	decfsz	??_BCDSetInc,f
  9808  0450  2C4D               	goto	u4677
  9809  0451  3200               	nop2
  9810                           
  9811                           ;Subroutines.c: 264:         Temp = Buttons();
  9812  0452  318F  2745  3184   	fcall	_Buttons
  9813  0455  00F7               	movwf	??_BCDSetInc
  9814  0456  0877               	movf	??_BCDSetInc,w
  9815  0457  00C7               	movwf	_Temp
  9816                           
  9817                           ;Subroutines.c: 265:         if (Temp == 3)
  9818  0458  3003               	movlw	3
  9819  0459  0647               	xorwf	_Temp,w
  9820  045A  1903               	btfsc	3,2
  9821  045B  2C93               	goto	l5448
  9822  045C  0347               	decf	_Temp,w
  9823  045D  1D03               	btfss	3,2
  9824  045E  2C76               	goto	l5438
  9825                           
  9826                           ;Subroutines.c: 268:         {;Subroutines.c: 269:             value++;
  9827  045F  3001               	movlw	1
  9828  0460  00F7               	movwf	??_BCDSetInc
  9829  0461  0877               	movf	??_BCDSetInc,w
  9830  0462  07E4               	addwf	BCDSetInc@value,f
  9831                           
  9832                           ;Subroutines.c: 270:             if ((value & 0xF) == 0xA)
  9833  0463  300F               	movlw	15
  9834  0464  0564               	andwf	BCDSetInc@value,w
  9835  0465  00F7               	movwf	??_BCDSetInc
  9836  0466  300A               	movlw	10
  9837  0467  0677               	xorwf	??_BCDSetInc,w
  9838  0468  1D03               	btfss	3,2
  9839  0469  2C70               	goto	l5434
  9840                           
  9841                           ;Subroutines.c: 271:                 value = (value & 0xF0) + 10;
  9842  046A  0864               	movf	BCDSetInc@value,w
  9843  046B  39F0               	andlw	240
  9844  046C  3E0A               	addlw	10
  9845  046D  00F7               	movwf	??_BCDSetInc
  9846  046E  0877               	movf	??_BCDSetInc,w
  9847  046F  00E4               	movwf	BCDSetInc@value
  9848  0470                     l5434:
  9849                           
  9850                           ;Subroutines.c: 272:             if (value > max)
  9851  0470  0864               	movf	BCDSetInc@value,w
  9852  0471  0263               	subwf	BCDSetInc@max,w
  9853  0472  1803               	skipnc
  9854  0473  2C3F               	goto	l5412
  9855                           
  9856                           ;Subroutines.c: 273:                 value = min;
  9857  0474  0861               	movf	BCDSetInc@min,w
  9858  0475  2C8C               	goto	L5
  9859  0476                     l5438:
  9860                           
  9861                           ;Subroutines.c: 276:         {;Subroutines.c: 277:             if (value - min == 0)
  9862  0476  0864               	movf	BCDSetInc@value,w
  9863  0477  00F7               	movwf	??_BCDSetInc
  9864  0478  01F8               	clrf	??_BCDSetInc+1
  9865  0479  0878               	movf	??_BCDSetInc+1,w
  9866  047A  00FA               	movwf	??_BCDSetInc+3
  9867  047B  0861               	movf	BCDSetInc@min,w
  9868  047C  0277               	subwf	??_BCDSetInc,w
  9869  047D  00F9               	movwf	??_BCDSetInc+2
  9870  047E  1C03               	skipc
  9871  047F  03FA               	decf	??_BCDSetInc+3,f
  9872  0480  0879               	movf	??_BCDSetInc+2,w
  9873  0481  047A               	iorwf	??_BCDSetInc+3,w
  9874  0482  1D03               	btfss	3,2
  9875  0483  2C86               	goto	l5442
  9876                           
  9877                           ;Subroutines.c: 278:                 value = max;
  9878  0484  0863               	movf	BCDSetInc@max,w
  9879  0485  2C8C               	goto	L5
  9880  0486                     l5442:
  9881                           
  9882                           ;Subroutines.c: 280:             {;Subroutines.c: 281:                 if ((value & 0xF)
      +                           == 0)
  9883  0486  0864               	movf	BCDSetInc@value,w
  9884  0487  390F               	andlw	15
  9885  0488  1D03               	btfss	3,2
  9886  0489  2C90               	goto	l5446
  9887                           
  9888                           ;Subroutines.c: 282:                     value = (value + 9) - 10;
  9889  048A  0864               	movf	BCDSetInc@value,w
  9890  048B  3EFF               	addlw	255
  9891  048C                     L5:
  9892  048C  00F7               	movwf	??_BCDSetInc
  9893  048D  0877               	movf	??_BCDSetInc,w
  9894  048E  00E4               	movwf	BCDSetInc@value
  9895  048F  2C3F               	goto	l5412
  9896  0490                     l5446:
  9897                           
  9898                           ;Subroutines.c: 284:                     value--;
  9899  0490  3001               	movlw	1
  9900  0491  02E4               	subwf	BCDSetInc@value,f
  9901  0492  2C3F               	goto	l5412
  9902  0493                     l5448:
  9903                           
  9904                           ;Subroutines.c: 288:     if (value != OldSet)
  9905  0493  0864               	movf	BCDSetInc@value,w
  9906  0494  0646               	xorwf	_OldSet,w
  9907  0495  1903               	skipnz
  9908  0496  0008               	return
  9909                           
  9910                           ;Subroutines.c: 289:     {;Subroutines.c: 290:         if (i2creg == 0x14)
  9911  0497  3014               	movlw	20
  9912  0498  0662               	xorwf	BCDSetInc@i2creg,w
  9913  0499  1D03               	btfss	3,2
  9914  049A  2CA0               	goto	l5454
  9915                           
  9916                           ;Subroutines.c: 291:             BlankStart = value;
  9917  049B  0864               	movf	BCDSetInc@value,w
  9918  049C  00F7               	movwf	??_BCDSetInc
  9919  049D  0877               	movf	??_BCDSetInc,w
  9920  049E  00C9               	movwf	_BlankStart
  9921  049F  0008               	return
  9922  04A0                     l5454:
  9923  04A0  3015               	movlw	21
  9924  04A1  0662               	xorwf	BCDSetInc@i2creg,w
  9925  04A2  1D03               	btfss	3,2
  9926  04A3  2CA9               	goto	l5458
  9927                           
  9928                           ;Subroutines.c: 293:             BlankEnd = value;
  9929  04A4  0864               	movf	BCDSetInc@value,w
  9930  04A5  00F7               	movwf	??_BCDSetInc
  9931  04A6  0877               	movf	??_BCDSetInc,w
  9932  04A7  00C8               	movwf	_BlankEnd
  9933  04A8  0008               	return
  9934  04A9                     l5458:
  9935                           
  9936                           ;Subroutines.c: 295:         {;Subroutines.c: 296:             I2CWrite(i2creg, value);
  9937  04A9  0864               	movf	BCDSetInc@value,w
  9938  04AA  00F7               	movwf	??_BCDSetInc
  9939  04AB  0877               	movf	??_BCDSetInc,w
  9940  04AC  00E0               	movwf	I2CWrite@data
  9941  04AD  0862               	movf	BCDSetInc@i2creg,w
  9942  04AE  318D  250D  3184   	fcall	_I2CWrite
  9943                           
  9944                           ;Subroutines.c: 297:             if (i2creg == 0x01)
  9945  04B1  0140               	movlb	0	; select bank0
  9946  04B2  0362               	decf	BCDSetInc@i2creg,w
  9947  04B3  1D03               	btfss	3,2
  9948  04B4  0008               	return
  9949                           
  9950                           ;Subroutines.c: 298:                 I2CWrite(0x00, 0);
  9951  04B5  01E0               	clrf	I2CWrite@data
  9952  04B6  3000               	movlw	0
  9953  04B7  318D  250D         	fcall	_I2CWrite
  9954  04B9  0008               	return
  9955  04BA                     __end_of_BCDSetInc:
  9956                           
  9957                           	psect	text26
  9958  0CAF                     __ptext26:	
  9959 ;; *************** function _SplitLoad *****************
  9960 ;; Defined at:
  9961 ;;		line 11 in file "Subroutines.c"
  9962 ;; Parameters:    Size  Location     Type
  9963 ;;  first           1    wreg     unsigned char 
  9964 ;; Auto vars:     Size  Location     Type
  9965 ;;  first           1    2[COMMON] unsigned char 
  9966 ;; Return value:  Size  Location     Type
  9967 ;;                  1    wreg      void 
  9968 ;; Registers used:
  9969 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9970 ;; Tracked objects:
  9971 ;;		On entry : 3F/0
  9972 ;;		On exit  : 3F/0
  9973 ;;		Unchanged: 0/0
  9974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9975 ;;      Params:         0       0       0       0       0       0       0       0
  9976 ;;      Locals:         1       0       0       0       0       0       0       0
  9977 ;;      Temps:          1       0       0       0       0       0       0       0
  9978 ;;      Totals:         2       0       0       0       0       0       0       0
  9979 ;;Total ram usage:        2 bytes
  9980 ;; Hardware stack levels used: 1
  9981 ;; Hardware stack levels required when called: 4
  9982 ;; This function calls:
  9983 ;;		Nothing
  9984 ;; This function is called by:
  9985 ;;		_main
  9986 ;;		_DateDisplay
  9987 ;;		_BCDSetInc
  9988 ;;		_OtherSetInc
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           
  9993                           ;psect for function _SplitLoad
  9994  0CAF                     _SplitLoad:
  9995                           
  9996                           ;incstack = 0
  9997                           ; Regs used in _SplitLoad: [wreg+fsr1l+fsr1h+status,2+status,0]
  9998                           ;SplitLoad@first stored from wreg
  9999  0CAF  00F2               	movwf	SplitLoad@first
 10000                           
 10001                           ;Subroutines.c: 11: void SplitLoad(uint8_t first);Subroutines.c: 12: {;Subroutines.c: 13
      +                          :     DisplayBuf[first] = BCDSplit[0];
 10002  0CB0  0838               	movf	_BCDSplit,w
 10003  0CB1  00F1               	movwf	??_SplitLoad
 10004  0CB2  0872               	movf	SplitLoad@first,w
 10005  0CB3  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10006  0CB4  0086               	movwf	6
 10007  0CB5  0187               	clrf	7
 10008  0CB6  0871               	movf	??_SplitLoad,w
 10009  0CB7  0081               	movwf	1
 10010                           
 10011                           ;Subroutines.c: 14:     DisplayBuf[first + 1] = BCDSplit[1];
 10012  0CB8  0839               	movf	_BCDSplit+1,w
 10013  0CB9  00F1               	movwf	??_SplitLoad
 10014  0CBA  0872               	movf	SplitLoad@first,w
 10015  0CBB  3E31               	addlw	(low ((_DisplayBuf| 0+1)))& (0+255)
 10016  0CBC  0086               	movwf	6
 10017  0CBD  0187               	clrf	7
 10018  0CBE  0871               	movf	??_SplitLoad,w
 10019  0CBF  0081               	movwf	1
 10020  0CC0  0008               	return
 10021  0CC1                     __end_of_SplitLoad:
 10022                           
 10023                           	psect	text27
 10024  0D0D                     __ptext27:	
 10025 ;; *************** function _I2CWrite *****************
 10026 ;; Defined at:
 10027 ;;		line 407 in file "Subroutines.c"
 10028 ;; Parameters:    Size  Location     Type
 10029 ;;  reg             1    wreg     unsigned char 
 10030 ;;  data            1   13[BANK0 ] unsigned char 
 10031 ;; Auto vars:     Size  Location     Type
 10032 ;;  reg             1    4[COMMON] unsigned char 
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  1    wreg      void 
 10035 ;; Registers used:
 10036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10037 ;; Tracked objects:
 10038 ;;		On entry : 3F/0
 10039 ;;		On exit  : 3F/3
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10042 ;;      Params:         0       1       0       0       0       0       0       0
 10043 ;;      Locals:         1       0       0       0       0       0       0       0
 10044 ;;      Temps:          0       0       0       0       0       0       0       0
 10045 ;;      Totals:         1       1       0       0       0       0       0       0
 10046 ;;Total ram usage:        2 bytes
 10047 ;; Hardware stack levels used: 1
 10048 ;; Hardware stack levels required when called: 7
 10049 ;; This function calls:
 10050 ;;		_I2CClose
 10051 ;;		_I2CFail
 10052 ;;		_I2CIrqWait
 10053 ;;		_I2COpen
 10054 ;; This function is called by:
 10055 ;;		_Startup
 10056 ;;		_main
 10057 ;;		_BCDSetInc
 10058 ;; This function uses a non-reentrant model
 10059 ;;
 10060                           
 10061                           
 10062                           ;psect for function _I2CWrite
 10063  0D0D                     _I2CWrite:
 10064                           
 10065                           ;incstack = 0
 10066                           ; Regs used in _I2CWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10067                           ;I2CWrite@reg stored from wreg
 10068  0D0D  00F4               	movwf	I2CWrite@reg
 10069                           
 10070                           ;Subroutines.c: 407: void I2CWrite(uint8_t reg, uint8_t data);Subroutines.c: 408: {;Subr
      +                          outines.c: 409:     I2COpen(&reg);
 10071  0D0E  3074               	movlw	(low (I2CWrite@reg| 0))& (0+255)
 10072  0D0F  318D  25C6  318D   	fcall	_I2COpen
 10073                           
 10074                           ;Subroutines.c: 410:     SSP1BUF = data;
 10075  0D12  0140               	movlb	0	; select bank0
 10076  0D13  0860               	movf	I2CWrite@data,w
 10077  0D14  0143               	movlb	3	; select bank3
 10078  0D15  008C               	movwf	12	;volatile
 10079                           
 10080                           ;Subroutines.c: 411:     if (SSP1CON2bits.ACKSTAT)
 10081  0D16  1F11               	btfss	17,6	;volatile
 10082  0D17  2D1B               	goto	l5190
 10083                           
 10084                           ;Subroutines.c: 412:         I2CFail();
 10085  0D18  318C  24E7  318D   	fcall	_I2CFail
 10086  0D1B                     l5190:
 10087                           
 10088                           ;Subroutines.c: 413:     I2CIrqWait();
 10089  0D1B  318B  23E6  318D   	fcall	_I2CIrqWait
 10090                           
 10091                           ;Subroutines.c: 414:     I2CClose();
 10092  0D1E  318C  2403         	fcall	_I2CClose
 10093  0D20  0008               	return
 10094  0D21                     __end_of_I2CWrite:
 10095                           
 10096                           	psect	text28
 10097  0E85                     __ptext28:	
 10098 ;; *************** function _I2CRead *****************
 10099 ;; Defined at:
 10100 ;;		line 386 in file "Subroutines.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;  reg             1    wreg     unsigned char 
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  reg             1    5[COMMON] unsigned char 
 10105 ;;  receiveddata    1    6[COMMON] unsigned char 
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  1    wreg      unsigned char 
 10108 ;; Registers used:
 10109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10110 ;; Tracked objects:
 10111 ;;		On entry : 0/0
 10112 ;;		On exit  : 3F/3
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10115 ;;      Params:         0       0       0       0       0       0       0       0
 10116 ;;      Locals:         2       0       0       0       0       0       0       0
 10117 ;;      Temps:          1       0       0       0       0       0       0       0
 10118 ;;      Totals:         3       0       0       0       0       0       0       0
 10119 ;;Total ram usage:        3 bytes
 10120 ;; Hardware stack levels used: 1
 10121 ;; Hardware stack levels required when called: 7
 10122 ;; This function calls:
 10123 ;;		_I2CClose
 10124 ;;		_I2CFail
 10125 ;;		_I2CIrqWait
 10126 ;;		_I2COpen
 10127 ;; This function is called by:
 10128 ;;		_Startup
 10129 ;;		_main
 10130 ;;		_DateDisplay
 10131 ;;		_BCDSetInc
 10132 ;; This function uses a non-reentrant model
 10133 ;;
 10134                           
 10135                           
 10136                           ;psect for function _I2CRead
 10137  0E85                     _I2CRead:
 10138                           
 10139                           ;incstack = 0
 10140                           ; Regs used in _I2CRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10141                           ;I2CRead@reg stored from wreg
 10142  0E85  00F5               	movwf	I2CRead@reg
 10143                           
 10144                           ;Subroutines.c: 386: uint8_t I2CRead(uint8_t reg);Subroutines.c: 387: {;Subroutines.c: 3
      +                          88:     uint8_t receiveddata;;Subroutines.c: 390:     I2COpen(&reg);
 10145  0E86  3075               	movlw	(low (I2CRead@reg| 0))& (0+255)
 10146  0E87  318D  25C6  318E   	fcall	_I2COpen
 10147                           
 10148                           ;Subroutines.c: 391:     SSP1CON2bits.RSEN = 1;
 10149  0E8A  1491               	bsf	17,1	;volatile
 10150                           
 10151                           ;Subroutines.c: 392:     I2CIrqWait();
 10152  0E8B  318B  23E6  318E   	fcall	_I2CIrqWait
 10153                           
 10154                           ;Subroutines.c: 393:     SSP1BUF = (0b1101000 << 1 | 1);
 10155  0E8E  30D1               	movlw	209
 10156  0E8F  0143               	movlb	3	; select bank3
 10157  0E90  008C               	movwf	12	;volatile
 10158                           
 10159                           ;Subroutines.c: 394:     I2CIrqWait();
 10160  0E91  318B  23E6  318E   	fcall	_I2CIrqWait
 10161                           
 10162                           ;Subroutines.c: 395:     if (SSP1CON2bits.ACKSTAT)
 10163  0E94  0143               	movlb	3	; select bank3
 10164  0E95  1F11               	btfss	17,6	;volatile
 10165  0E96  2E9A               	goto	l5164
 10166                           
 10167                           ;Subroutines.c: 396:         I2CFail();
 10168  0E97  318C  24E7  318E   	fcall	_I2CFail
 10169  0E9A                     l5164:
 10170                           
 10171                           ;Subroutines.c: 397:     SSP1CON2bits.RCEN = 1;
 10172  0E9A  0143               	movlb	3	; select bank3
 10173  0E9B  1591               	bsf	17,3	;volatile
 10174                           
 10175                           ;Subroutines.c: 398:     I2CIrqWait();
 10176  0E9C  318B  23E6  318E   	fcall	_I2CIrqWait
 10177                           
 10178                           ;Subroutines.c: 399:     receiveddata = SSP1BUF;
 10179  0E9F  0143               	movlb	3	; select bank3
 10180  0EA0  080C               	movf	12,w	;volatile
 10181  0EA1  00F4               	movwf	??_I2CRead
 10182  0EA2  0874               	movf	??_I2CRead,w
 10183  0EA3  00F6               	movwf	I2CRead@receiveddata
 10184                           
 10185                           ;Subroutines.c: 400:     SSP1CON2bits.ACKDT = 1;
 10186  0EA4  1691               	bsf	17,5	;volatile
 10187                           
 10188                           ;Subroutines.c: 401:     SSP1CON2bits.ACKEN = 1;
 10189  0EA5  1611               	bsf	17,4	;volatile
 10190                           
 10191                           ;Subroutines.c: 402:     I2CIrqWait();
 10192  0EA6  318B  23E6  318E   	fcall	_I2CIrqWait
 10193                           
 10194                           ;Subroutines.c: 403:     I2CClose();
 10195  0EA9  318C  2403         	fcall	_I2CClose
 10196                           
 10197                           ;Subroutines.c: 404:     return receiveddata;
 10198  0EAB  0876               	movf	I2CRead@receiveddata,w
 10199  0EAC  0008               	return
 10200  0EAD                     __end_of_I2CRead:
 10201                           
 10202                           	psect	text29
 10203  0DC6                     __ptext29:	
 10204 ;; *************** function _I2COpen *****************
 10205 ;; Defined at:
 10206 ;;		line 417 in file "Subroutines.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;  regptr          1    wreg     PTR unsigned char 
 10209 ;;		 -> I2CWrite@reg(1), I2CRead@reg(1), 
 10210 ;; Auto vars:     Size  Location     Type
 10211 ;;  regptr          1    3[COMMON] PTR unsigned char 
 10212 ;;		 -> I2CWrite@reg(1), I2CRead@reg(1), 
 10213 ;; Return value:  Size  Location     Type
 10214 ;;                  1    wreg      void 
 10215 ;; Registers used:
 10216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10217 ;; Tracked objects:
 10218 ;;		On entry : 0/0
 10219 ;;		On exit  : 3F/3
 10220 ;;		Unchanged: 0/0
 10221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10222 ;;      Params:         0       0       0       0       0       0       0       0
 10223 ;;      Locals:         1       0       0       0       0       0       0       0
 10224 ;;      Temps:          0       0       0       0       0       0       0       0
 10225 ;;      Totals:         1       0       0       0       0       0       0       0
 10226 ;;Total ram usage:        1 bytes
 10227 ;; Hardware stack levels used: 1
 10228 ;; Hardware stack levels required when called: 6
 10229 ;; This function calls:
 10230 ;;		_I2CFail
 10231 ;;		_I2CIrqWait
 10232 ;; This function is called by:
 10233 ;;		_I2CRead
 10234 ;;		_I2CWrite
 10235 ;; This function uses a non-reentrant model
 10236 ;;
 10237                           
 10238                           
 10239                           ;psect for function _I2COpen
 10240  0DC6                     _I2COpen:
 10241                           
 10242                           ;incstack = 0
 10243                           ; Regs used in _I2COpen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10244                           ;I2COpen@regptr stored from wreg
 10245  0DC6  00F3               	movwf	I2COpen@regptr
 10246                           
 10247                           ;Subroutines.c: 417: void I2COpen(uint8_t *regptr);Subroutines.c: 418: {;Subroutines.c: 
      +                          419:     PIR3bits.SSP1IF = 0;
 10248  0DC7  014E               	movlb	14	; select bank14
 10249  0DC8  100F               	bcf	15,0	;volatile
 10250                           
 10251                           ;Subroutines.c: 420:     PIE3bits.SSP1IE = 1;
 10252  0DC9  1419               	bsf	25,0	;volatile
 10253                           
 10254                           ;Subroutines.c: 421:     SSP1CON1bits.SSPEN = 1;
 10255  0DCA  0143               	movlb	3	; select bank3
 10256  0DCB  1690               	bsf	16,5	;volatile
 10257                           
 10258                           ;Subroutines.c: 422:     SSP1CON2bits.SEN = 1;
 10259  0DCC  1411               	bsf	17,0	;volatile
 10260                           
 10261                           ;Subroutines.c: 423:     I2CIrqWait();
 10262  0DCD  318B  23E6  318D   	fcall	_I2CIrqWait
 10263                           
 10264                           ;Subroutines.c: 424:     SSP1BUF = (0b1101000 << 1);
 10265  0DD0  30D0               	movlw	208
 10266  0DD1  0143               	movlb	3	; select bank3
 10267  0DD2  008C               	movwf	12	;volatile
 10268                           
 10269                           ;Subroutines.c: 425:     I2CIrqWait();
 10270  0DD3  318B  23E6  318D   	fcall	_I2CIrqWait
 10271                           
 10272                           ;Subroutines.c: 426:     if (SSP1CON2bits.ACKSTAT)
 10273  0DD6  0143               	movlb	3	; select bank3
 10274  0DD7  1F11               	btfss	17,6	;volatile
 10275  0DD8  2DDB               	goto	l5124
 10276                           
 10277                           ;Subroutines.c: 427:         I2CFail();
 10278  0DD9  318C  24E7         	fcall	_I2CFail
 10279  0DDB                     l5124:
 10280                           
 10281                           ;Subroutines.c: 428:     SSP1BUF = *regptr;
 10282  0DDB  0873               	movf	I2COpen@regptr,w
 10283  0DDC  0086               	movwf	6
 10284  0DDD  0187               	clrf	7
 10285  0DDE  0801               	movf	1,w
 10286  0DDF  0143               	movlb	3	; select bank3
 10287  0DE0  008C               	movwf	12	;volatile
 10288  0DE1  0008               	return
 10289  0DE2                     __end_of_I2COpen:
 10290                           
 10291                           	psect	text30
 10292  0CE7                     __ptext30:	
 10293 ;; *************** function _I2CFail *****************
 10294 ;; Defined at:
 10295 ;;		line 445 in file "Subroutines.c"
 10296 ;; Parameters:    Size  Location     Type
 10297 ;;		None
 10298 ;; Auto vars:     Size  Location     Type
 10299 ;;		None
 10300 ;; Return value:  Size  Location     Type
 10301 ;;                  1    wreg      void 
 10302 ;; Registers used:
 10303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10304 ;; Tracked objects:
 10305 ;;		On entry : 3F/3
 10306 ;;		On exit  : 3C/0
 10307 ;;		Unchanged: 0/0
 10308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10309 ;;      Params:         0       0       0       0       0       0       0       0
 10310 ;;      Locals:         0       0       0       0       0       0       0       0
 10311 ;;      Temps:          1       0       0       0       0       0       0       0
 10312 ;;      Totals:         1       0       0       0       0       0       0       0
 10313 ;;Total ram usage:        1 bytes
 10314 ;; Hardware stack levels used: 1
 10315 ;; Hardware stack levels required when called: 5
 10316 ;; This function calls:
 10317 ;;		_EmptyTubes
 10318 ;;		_Loader
 10319 ;; This function is called by:
 10320 ;;		_I2CRead
 10321 ;;		_I2CWrite
 10322 ;;		_I2COpen
 10323 ;; This function uses a non-reentrant model
 10324 ;;
 10325                           
 10326                           
 10327                           ;psect for function _I2CFail
 10328  0CE7                     _I2CFail:
 10329                           
 10330                           ;Subroutines.c: 447:     EmptyTubes();
 10331                           
 10332                           ;incstack = 0
 10333                           ; Regs used in _I2CFail: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10334  0CE7  318C  24C1  318C   	fcall	_EmptyTubes
 10335                           
 10336                           ;Subroutines.c: 448:     DisplayBuf[5] = 6;
 10337  0CEA  3006               	movlw	6
 10338  0CEB  00F2               	movwf	??_I2CFail
 10339  0CEC  0872               	movf	??_I2CFail,w
 10340  0CED  00B5               	movwf	_DisplayBuf+5
 10341                           
 10342                           ;Subroutines.c: 449:     DisplayBuf[6] = 6;
 10343  0CEE  3006               	movlw	6
 10344  0CEF  00F2               	movwf	??_I2CFail
 10345  0CF0  0872               	movf	??_I2CFail,w
 10346  0CF1  00B6               	movwf	_DisplayBuf+6
 10347                           
 10348                           ;Subroutines.c: 450:     DisplayBuf[7] = 6;
 10349  0CF2  3006               	movlw	6
 10350  0CF3  00F2               	movwf	??_I2CFail
 10351  0CF4  0872               	movf	??_I2CFail,w
 10352  0CF5  00B7               	movwf	_DisplayBuf+7
 10353                           
 10354                           ;Subroutines.c: 451:     Loader();
 10355  0CF6  318F  270F  318C   	fcall	_Loader
 10356  0CF9                     l950:	
 10357                           ;Subroutines.c: 452:     while (1){}
 10358                           
 10359  0CF9  2CF9               	goto	l950
 10360  0CFA                     __end_of_I2CFail:
 10361                           
 10362                           	psect	text31
 10363  0C03                     __ptext31:	
 10364 ;; *************** function _I2CClose *****************
 10365 ;; Defined at:
 10366 ;;		line 431 in file "Subroutines.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;		None
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;		None
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  1    wreg      void 
 10373 ;; Registers used:
 10374 ;;		status,2, status,0, pclath, cstack
 10375 ;; Tracked objects:
 10376 ;;		On entry : 3F/E
 10377 ;;		On exit  : 3F/3
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10380 ;;      Params:         0       0       0       0       0       0       0       0
 10381 ;;      Locals:         0       0       0       0       0       0       0       0
 10382 ;;      Temps:          0       0       0       0       0       0       0       0
 10383 ;;      Totals:         0       0       0       0       0       0       0       0
 10384 ;;Total ram usage:        0 bytes
 10385 ;; Hardware stack levels used: 1
 10386 ;; Hardware stack levels required when called: 5
 10387 ;; This function calls:
 10388 ;;		_I2CIrqWait
 10389 ;; This function is called by:
 10390 ;;		_I2CRead
 10391 ;;		_I2CWrite
 10392 ;; This function uses a non-reentrant model
 10393 ;;
 10394                           
 10395                           
 10396                           ;psect for function _I2CClose
 10397  0C03                     _I2CClose:
 10398                           
 10399                           ;Subroutines.c: 433:     SSP1CON2bits.PEN = 1;
 10400                           
 10401                           ;incstack = 0
 10402                           ; Regs used in _I2CClose: [status,2+status,0+pclath+cstack]
 10403  0C03  0143               	movlb	3	; select bank3
 10404  0C04  1511               	bsf	17,2	;volatile
 10405                           
 10406                           ;Subroutines.c: 434:     I2CIrqWait();
 10407  0C05  318B  23E6         	fcall	_I2CIrqWait
 10408                           
 10409                           ;Subroutines.c: 435:     PIE3bits.SSP1IE = 0;
 10410  0C07  1019               	bcf	25,0	;volatile
 10411                           
 10412                           ;Subroutines.c: 436:     SSP1CON1bits.SSPEN = 0;
 10413  0C08  0143               	movlb	3	; select bank3
 10414  0C09  1290               	bcf	16,5	;volatile
 10415  0C0A  0008               	return
 10416  0C0B                     __end_of_I2CClose:
 10417                           
 10418                           	psect	text32
 10419  0BE6                     __ptext32:	
 10420 ;; *************** function _I2CIrqWait *****************
 10421 ;; Defined at:
 10422 ;;		line 439 in file "Subroutines.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;		None
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;		None
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  1    wreg      void 
 10429 ;; Registers used:
 10430 ;;		None
 10431 ;; Tracked objects:
 10432 ;;		On entry : 3C/3
 10433 ;;		On exit  : 3F/E
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10436 ;;      Params:         0       0       0       0       0       0       0       0
 10437 ;;      Locals:         0       0       0       0       0       0       0       0
 10438 ;;      Temps:          0       0       0       0       0       0       0       0
 10439 ;;      Totals:         0       0       0       0       0       0       0       0
 10440 ;;Total ram usage:        0 bytes
 10441 ;; Hardware stack levels used: 1
 10442 ;; Hardware stack levels required when called: 4
 10443 ;; This function calls:
 10444 ;;		Nothing
 10445 ;; This function is called by:
 10446 ;;		_I2CRead
 10447 ;;		_I2CWrite
 10448 ;;		_I2COpen
 10449 ;;		_I2CClose
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           
 10454                           ;psect for function _I2CIrqWait
 10455  0BE6                     _I2CIrqWait:
 10456  0BE6                     l944:	
 10457                           ;Subroutines.c: 441:     while (!PIR3bits.SSP1IF);
 10458                           
 10459                           ;incstack = 0
 10460                           ; Regs used in _I2CIrqWait: []
 10461                           
 10462  0BE6  014E               	movlb	14	; select bank14
 10463  0BE7  1C0F               	btfss	15,0	;volatile
 10464  0BE8  2BE6               	goto	l944
 10465                           
 10466                           ;Subroutines.c: 442:     PIR3bits.SSP1IF = 0;
 10467  0BE9  100F               	bcf	15,0	;volatile
 10468  0BEA  0008               	return
 10469  0BEB                     __end_of_I2CIrqWait:
 10470                           
 10471                           	psect	text33
 10472  0CD4                     __ptext33:	
 10473 ;; *************** function _BCD2Bin *****************
 10474 ;; Defined at:
 10475 ;;		line 510 in file "Subroutines.c"
 10476 ;; Parameters:    Size  Location     Type
 10477 ;;  input           1    wreg     unsigned char 
 10478 ;; Auto vars:     Size  Location     Type
 10479 ;;  input           1    2[COMMON] unsigned char 
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  1    wreg      void 
 10482 ;; Registers used:
 10483 ;;		wreg, status,2
 10484 ;; Tracked objects:
 10485 ;;		On entry : 3C/0
 10486 ;;		On exit  : 3F/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10489 ;;      Params:         0       0       0       0       0       0       0       0
 10490 ;;      Locals:         1       0       0       0       0       0       0       0
 10491 ;;      Temps:          1       0       0       0       0       0       0       0
 10492 ;;      Totals:         2       0       0       0       0       0       0       0
 10493 ;;Total ram usage:        2 bytes
 10494 ;; Hardware stack levels used: 1
 10495 ;; Hardware stack levels required when called: 4
 10496 ;; This function calls:
 10497 ;;		Nothing
 10498 ;; This function is called by:
 10499 ;;		_main
 10500 ;;		_DateDisplay
 10501 ;;		_BCDSetInc
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           
 10506                           ;psect for function _BCD2Bin
 10507  0CD4                     _BCD2Bin:
 10508                           
 10509                           ;incstack = 0
 10510                           ; Regs used in _BCD2Bin: [wreg+status,2]
 10511                           ;BCD2Bin@input stored from wreg
 10512  0CD4  00F2               	movwf	BCD2Bin@input
 10513                           
 10514                           ;Subroutines.c: 510: void BCD2Bin(uint8_t input);Subroutines.c: 511: {;Subroutines.c: 51
      +                          2:     BCDSplit[1] = input & 0xF;
 10515  0CD5  0872               	movf	BCD2Bin@input,w
 10516  0CD6  390F               	andlw	15
 10517  0CD7  00F1               	movwf	??_BCD2Bin
 10518  0CD8  0871               	movf	??_BCD2Bin,w
 10519  0CD9  0140               	movlb	0	; select bank0
 10520  0CDA  00B9               	movwf	_BCDSplit+1
 10521                           
 10522                           ;Subroutines.c: 513:     input = (input >> 4) | (input << 4);
 10523  0CDB  3004               	movlw	4
 10524  0CDC  00F1               	movwf	??_BCD2Bin
 10525  0CDD                     u3305:
 10526  0CDD  0C72               	rrf	BCD2Bin@input,w
 10527  0CDE  0CF2               	rrf	BCD2Bin@input,f
 10528  0CDF  0BF1               	decfsz	??_BCD2Bin,f
 10529  0CE0  2CDD               	goto	u3305
 10530                           
 10531                           ;Subroutines.c: 514:     BCDSplit[0] = input & 0xF;
 10532  0CE1  0872               	movf	BCD2Bin@input,w
 10533  0CE2  390F               	andlw	15
 10534  0CE3  00F1               	movwf	??_BCD2Bin
 10535  0CE4  0871               	movf	??_BCD2Bin,w
 10536  0CE5  00B8               	movwf	_BCDSplit
 10537  0CE6  0008               	return
 10538  0CE7                     __end_of_BCD2Bin:
 10539                           
 10540                           	psect	text34
 10541  0540                     __ptext34:	
 10542 ;; *************** function _DMDisplay *****************
 10543 ;; Defined at:
 10544 ;;		line 313 in file "main.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;		None
 10547 ;; Auto vars:     Size  Location     Type
 10548 ;;  seedadr         1   20[BANK0 ] unsigned char 
 10549 ;; Return value:  Size  Location     Type
 10550 ;;                  1    wreg      void 
 10551 ;; Registers used:
 10552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10553 ;; Tracked objects:
 10554 ;;		On entry : 0/0
 10555 ;;		On exit  : 3F/0
 10556 ;;		Unchanged: 0/0
 10557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10558 ;;      Params:         0       0       0       0       0       0       0       0
 10559 ;;      Locals:         0       1       0       0       0       0       0       0
 10560 ;;      Temps:          0       1       0       0       0       0       0       0
 10561 ;;      Totals:         0       2       0       0       0       0       0       0
 10562 ;;Total ram usage:        2 bytes
 10563 ;; Hardware stack levels used: 1
 10564 ;; Hardware stack levels required when called: 8
 10565 ;; This function calls:
 10566 ;;		_Buttons
 10567 ;;		_DisplayBufSave
 10568 ;;		_EEPROMBufferFill
 10569 ;;		_EmptyTubes
 10570 ;;		_FixedWL
 10571 ;;		_Loader
 10572 ;;		_RandomWL
 10573 ;;		_TubeValuePicker
 10574 ;; This function is called by:
 10575 ;;		_main
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           
 10580                           ;psect for function _DMDisplay
 10581  0540                     _DMDisplay:
 10582                           
 10583                           ;main.c: 317:     (INTCONbits.GIE = 0);
 10584                           
 10585                           ;incstack = 0
 10586                           ; Regs used in _DMDisplay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10587  0540  138B               	bcf	11,7	;volatile
 10588                           
 10589                           ;main.c: 318:     GoDM = 0;
 10590  0541  11FC               	bcf	_GoDM/(0+8),_GoDM& (0+7)
 10591                           
 10592                           ;main.c: 319:     EEPROMBufferFill(seedadr);
 10593  0542  3077               	movlw	119
 10594  0543  318D  2591  3185   	fcall	_EEPROMBufferFill
 10595                           
 10596                           ;main.c: 320:     Loader();
 10597  0546  318F  270F  3185   	fcall	_Loader
 10598                           
 10599                           ;main.c: 321:     seedadr = 0x07;
 10600  0549  3007               	movlw	7
 10601  054A  00E6               	movwf	??_DMDisplay
 10602  054B  0866               	movf	??_DMDisplay,w
 10603  054C  00E7               	movwf	DMDisplay@seedadr
 10604  054D  2D51               	goto	l5858
 10605  054E                     l5862:
 10606                           
 10607                           ;main.c: 326:             RandomWL();
 10608  054E  3182  22E6  3185   	fcall	_RandomWL
 10609  0551                     l5858:
 10610                           
 10611                           ;main.c: 323:     {;main.c: 324:         Temp = Buttons();
 10612  0551  318F  2745  3185   	fcall	_Buttons
 10613  0554  00E6               	movwf	??_DMDisplay
 10614  0555  0866               	movf	??_DMDisplay,w
 10615  0556  00C7               	movwf	_Temp
 10616                           
 10617                           ;main.c: 325:         if (Temp == 1)
 10618  0557  0347               	decf	_Temp,w
 10619  0558  1903               	btfsc	3,2
 10620  0559  2D4E               	goto	l5862
 10621  055A  3002               	movlw	2
 10622  055B  0647               	xorwf	_Temp,w
 10623  055C  1D03               	btfss	3,2
 10624  055D  0008               	return
 10625  055E                     l5866:
 10626                           
 10627                           ;main.c: 330:             {;main.c: 331:                 if (seedadr == 0x7F)
 10628  055E  307F               	movlw	127
 10629  055F  0667               	xorwf	DMDisplay@seedadr,w
 10630  0560  1903               	btfsc	3,2
 10631  0561  2D51               	goto	l5858
 10632                           
 10633                           ;main.c: 333:                 EEPROMBufferFill(seedadr);
 10634  0562  0867               	movf	DMDisplay@seedadr,w
 10635  0563  318D  2591  3185   	fcall	_EEPROMBufferFill
 10636                           
 10637                           ;main.c: 334:                 DisplayBufSave();
 10638  0566  318D  2535  3185   	fcall	_DisplayBufSave
 10639                           
 10640                           ;main.c: 335:                 FixedWL();
 10641  0569  3185  25B9  3185   	fcall	_FixedWL
 10642                           
 10643                           ;main.c: 336:                 seedadr += 8;
 10644  056C  3008               	movlw	8
 10645  056D  0140               	movlb	0	; select bank0
 10646  056E  00E6               	movwf	??_DMDisplay
 10647  056F  0866               	movf	??_DMDisplay,w
 10648  0570  07E7               	addwf	DMDisplay@seedadr,f
 10649                           
 10650                           ;main.c: 337:                 Temp = Buttons();
 10651  0571  318F  2745  3185   	fcall	_Buttons
 10652  0574  00E6               	movwf	??_DMDisplay
 10653  0575  0866               	movf	??_DMDisplay,w
 10654  0576  00C7               	movwf	_Temp
 10655                           
 10656                           ;main.c: 338:                 if (Temp == 1)
 10657  0577  0347               	decf	_Temp,w
 10658  0578  1903               	btfsc	3,2
 10659  0579  2D5E               	goto	l5866
 10660  057A  3002               	movlw	2
 10661  057B  0647               	xorwf	_Temp,w
 10662  057C  1903               	btfsc	3,2
 10663  057D  0008               	return
 10664                           
 10665                           ;main.c: 343:                 {;main.c: 344:                     EmptyTubes();
 10666  057E  318C  24C1  3185   	fcall	_EmptyTubes
 10667                           
 10668                           ;main.c: 345:                     DisplayBuf[1] = 0x52;
 10669  0581  3052               	movlw	82
 10670  0582  00E6               	movwf	??_DMDisplay
 10671  0583  0866               	movf	??_DMDisplay,w
 10672  0584  00B1               	movwf	_DisplayBuf+1
 10673                           
 10674                           ;main.c: 346:                     TubeValuePicker(0);
 10675  0585  3000               	movlw	0
 10676  0586  3186  269A  3185   	fcall	_TubeValuePicker
 10677                           
 10678                           ;main.c: 347:                     for (Pos=9; Pos--;)
 10679  0589  3009               	movlw	9
 10680  058A  00E6               	movwf	??_DMDisplay
 10681  058B  0866               	movf	??_DMDisplay,w
 10682  058C  00CB               	movwf	_Pos
 10683  058D                     l5902:
 10684  058D  3001               	movlw	1
 10685  058E  0140               	movlb	0	; select bank0
 10686  058F  02CB               	subwf	_Pos,f
 10687  0590  0A4B               	incf	_Pos,w
 10688  0591  1903               	btfsc	3,2
 10689  0592  2DA1               	goto	l5904
 10690                           
 10691                           ;main.c: 348:                     {;main.c: 349:                         LATC ^= 0b00010
      +                          000;
 10692  0593  3010               	movlw	16
 10693  0594  00E6               	movwf	??_DMDisplay
 10694  0595  0866               	movf	??_DMDisplay,w
 10695  0596  069A               	xorwf	26,f	;volatile
 10696                           
 10697                           ;main.c: 350:                         _delay(28000);
 10698  0597  3025               	movlw	37
 10699  0598  0140               	movlb	0	; select bank0
 10700  0599  00E6               	movwf	??_DMDisplay
 10701  059A  305B               	movlw	91
 10702  059B                     u4687:
 10703  059B  0B89               	decfsz	9,f
 10704  059C  2D9B               	goto	u4687
 10705  059D  0BE6               	decfsz	??_DMDisplay,f
 10706  059E  2D9B               	goto	u4687
 10707  059F  3200               	nop2
 10708  05A0  2D8D               	goto	l5902
 10709  05A1                     l5904:
 10710                           
 10711                           ;main.c: 352:                     DisplayBufSave();
 10712  05A1  318D  2535  3185   	fcall	_DisplayBufSave
 10713  05A4                     l5906:
 10714                           
 10715                           ;main.c: 354:                     {;main.c: 355:                         Temp = Buttons(
      +                          );
 10716  05A4  318F  2745  3185   	fcall	_Buttons
 10717  05A7  00E6               	movwf	??_DMDisplay
 10718  05A8  0866               	movf	??_DMDisplay,w
 10719  05A9  00C7               	movwf	_Temp
 10720                           
 10721                           ;main.c: 356:                         if (Temp == 1)
 10722  05AA  0347               	decf	_Temp,w
 10723  05AB  1D03               	btfss	3,2
 10724  05AC  0008               	return
 10725                           
 10726                           ;main.c: 357:                         {;main.c: 358:                             if (Tog
      +                          gle == 1)
 10727  05AD  1D7C               	btfss	_Toggle/(0+8),_Toggle& (0+7)
 10728  05AE  2DB3               	goto	l5914
 10729                           
 10730                           ;main.c: 359:                                 FixedWL();
 10731  05AF  3185  25B9  3185   	fcall	_FixedWL
 10732  05B2  2DB6               	goto	l5916
 10733  05B3                     l5914:
 10734                           
 10735                           ;main.c: 361:                                 RandomWL();
 10736  05B3  3182  22E6  3185   	fcall	_RandomWL
 10737  05B6                     l5916:
 10738                           
 10739                           ;main.c: 362:                             Toggle ^= 1;
 10740  05B6  3004               	movlw	(0+1) shl (_Toggle& (0+7))
 10741  05B7  06FC               	xorwf	_Toggle/(0+8),f
 10742                           
 10743                           ;main.c: 363:                         }
 10744  05B8  2DA4               	goto	l5906
 10745  05B9                     __end_of_DMDisplay:
 10746                           
 10747                           	psect	text35
 10748  069A                     __ptext35:	
 10749 ;; *************** function _TubeValuePicker *****************
 10750 ;; Defined at:
 10751 ;;		line 70 in file "Subroutines.c"
 10752 ;; Parameters:    Size  Location     Type
 10753 ;;  start           1    wreg     unsigned char 
 10754 ;; Auto vars:     Size  Location     Type
 10755 ;;  start           1    5[COMMON] unsigned char 
 10756 ;; Return value:  Size  Location     Type
 10757 ;;                  1    wreg      void 
 10758 ;; Registers used:
 10759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10760 ;; Tracked objects:
 10761 ;;		On entry : 3F/0
 10762 ;;		On exit  : 3F/0
 10763 ;;		Unchanged: 0/0
 10764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10765 ;;      Params:         0       0       0       0       0       0       0       0
 10766 ;;      Locals:         1       0       0       0       0       0       0       0
 10767 ;;      Temps:          1       0       0       0       0       0       0       0
 10768 ;;      Totals:         2       0       0       0       0       0       0       0
 10769 ;;Total ram usage:        2 bytes
 10770 ;; Hardware stack levels used: 1
 10771 ;; Hardware stack levels required when called: 6
 10772 ;; This function calls:
 10773 ;;		_Buttons
 10774 ;;		_Loader
 10775 ;; This function is called by:
 10776 ;;		_DMDisplay
 10777 ;;		_Settings
 10778 ;; This function uses a non-reentrant model
 10779 ;;
 10780                           
 10781                           
 10782                           ;psect for function _TubeValuePicker
 10783  069A                     _TubeValuePicker:
 10784                           
 10785                           ;incstack = 0
 10786                           ; Regs used in _TubeValuePicker: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10787                           ;TubeValuePicker@start stored from wreg
 10788  069A  00F5               	movwf	TubeValuePicker@start
 10789                           
 10790                           ;Subroutines.c: 70: void TubeValuePicker (uint8_t start);Subroutines.c: 71: {;Subroutine
      +                          s.c: 72:     if (TimeSet)
 10791  069B  18FC               	btfsc	_TimeSet/(0+8),_TimeSet& (0+7)
 10792  069C  2EA4               	goto	l5362
 10793  069D  2EB4               	goto	l5374
 10794  069E                     l5368:
 10795                           
 10796                           ;Subroutines.c: 79:                 DisplayBuf[2] = 0x52;
 10797  069E  3052               	movlw	82
 10798  069F  2EA1               	goto	L8
 10799  06A0                     l5372:
 10800                           
 10801                           ;Subroutines.c: 81:                 DisplayBuf[2] = 10;
 10802  06A0  300A               	movlw	10
 10803  06A1                     L8:
 10804  06A1  00F4               	movwf	??_TubeValuePicker
 10805  06A2  0874               	movf	??_TubeValuePicker,w
 10806  06A3  00B2               	movwf	_DisplayBuf+2
 10807  06A4                     l5362:
 10808                           
 10809                           ;Subroutines.c: 75:         {;Subroutines.c: 76:             Loader();
 10810  06A4  318F  270F  3186   	fcall	_Loader
 10811                           
 10812                           ;Subroutines.c: 77:             Temp = Buttons();
 10813  06A7  318F  2745  3186   	fcall	_Buttons
 10814  06AA  00F4               	movwf	??_TubeValuePicker
 10815  06AB  0874               	movf	??_TubeValuePicker,w
 10816  06AC  00C7               	movwf	_Temp
 10817                           
 10818                           ;Subroutines.c: 78:             if (Temp == 1)
 10819  06AD  0347               	decf	_Temp,w
 10820  06AE  1903               	btfsc	3,2
 10821  06AF  2E9E               	goto	l5368
 10822  06B0  3002               	movlw	2
 10823  06B1  0647               	xorwf	_Temp,w
 10824  06B2  1903               	btfsc	3,2
 10825  06B3  2EA0               	goto	l5372
 10826  06B4                     l5374:
 10827                           
 10828                           ;Subroutines.c: 86:     for (Pos=start; Pos<8; Pos++)
 10829  06B4  0875               	movf	TubeValuePicker@start,w
 10830  06B5  00F4               	movwf	??_TubeValuePicker
 10831  06B6  0874               	movf	??_TubeValuePicker,w
 10832  06B7  00CB               	movwf	_Pos
 10833  06B8                     l5398:
 10834  06B8  3008               	movlw	8
 10835  06B9  024B               	subwf	_Pos,w
 10836  06BA  1803               	btfsc	3,0
 10837  06BB  0008               	return
 10838                           
 10839                           ;Subroutines.c: 87:     {;Subroutines.c: 88:         if (Pos == 1)
 10840  06BC  034B               	decf	_Pos,w
 10841  06BD  1903               	btfsc	3,2
 10842  06BE  2EFB               	goto	l5396
 10843  06BF  2EEB               	goto	l5380
 10844  06C0                     l5386:
 10845                           
 10846                           ;Subroutines.c: 95:             {;Subroutines.c: 96:                 DisplayBuf[Pos]++;
 10847  06C0  3001               	movlw	1
 10848  06C1  00F4               	movwf	??_TubeValuePicker
 10849  06C2  084B               	movf	_Pos,w
 10850  06C3  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10851  06C4  0086               	movwf	6
 10852  06C5  0187               	clrf	7
 10853  06C6  0874               	movf	??_TubeValuePicker,w
 10854  06C7  0781               	addwf	1,f
 10855                           
 10856                           ;Subroutines.c: 97:                 if (DisplayBuf[Pos] == 11)
 10857  06C8  084B               	movf	_Pos,w
 10858  06C9  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10859  06CA  0086               	movwf	6
 10860  06CB  0187               	clrf	7
 10861  06CC  300B               	movlw	11
 10862  06CD  0601               	xorwf	1,w
 10863  06CE  1D03               	btfss	3,2
 10864  06CF  2EEB               	goto	l5380
 10865                           
 10866                           ;Subroutines.c: 98:                     DisplayBuf[Pos] = 0;
 10867  06D0  084B               	movf	_Pos,w
 10868  06D1  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10869  06D2  0086               	movwf	6
 10870  06D3  0187               	clrf	7
 10871  06D4  0181               	clrf	1
 10872  06D5  2EEB               	goto	l5380
 10873  06D6                     l5392:
 10874                           
 10875                           ;Subroutines.c: 101:             {;Subroutines.c: 102:                 DisplayBuf[Pos]--
      +                          ;
 10876  06D6  084B               	movf	_Pos,w
 10877  06D7  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10878  06D8  0086               	movwf	6
 10879  06D9  0187               	clrf	7
 10880  06DA  3001               	movlw	1
 10881  06DB  0281               	subwf	1,f
 10882                           
 10883                           ;Subroutines.c: 103:                 if (DisplayBuf[Pos] == 255)
 10884  06DC  084B               	movf	_Pos,w
 10885  06DD  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10886  06DE  0086               	movwf	6
 10887  06DF  0187               	clrf	7
 10888  06E0  0A01               	incf	1,w
 10889  06E1  1D03               	btfss	3,2
 10890  06E2  2EEB               	goto	l5380
 10891                           
 10892                           ;Subroutines.c: 104:                     DisplayBuf[Pos] = 10;
 10893  06E3  300A               	movlw	10
 10894  06E4  00F4               	movwf	??_TubeValuePicker
 10895  06E5  084B               	movf	_Pos,w
 10896  06E6  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10897  06E7  0086               	movwf	6
 10898  06E8  0187               	clrf	7
 10899  06E9  0874               	movf	??_TubeValuePicker,w
 10900  06EA  0081               	movwf	1
 10901  06EB                     l5380:
 10902                           
 10903                           ;Subroutines.c: 91:         {;Subroutines.c: 92:             Loader();
 10904  06EB  318F  270F  3186   	fcall	_Loader
 10905                           
 10906                           ;Subroutines.c: 93:             Temp = Buttons();
 10907  06EE  318F  2745  3186   	fcall	_Buttons
 10908  06F1  00F4               	movwf	??_TubeValuePicker
 10909  06F2  0874               	movf	??_TubeValuePicker,w
 10910  06F3  00C7               	movwf	_Temp
 10911                           
 10912                           ;Subroutines.c: 94:             if (Temp == 1)
 10913  06F4  0347               	decf	_Temp,w
 10914  06F5  1903               	btfsc	3,2
 10915  06F6  2EC0               	goto	l5386
 10916  06F7  3002               	movlw	2
 10917  06F8  0647               	xorwf	_Temp,w
 10918  06F9  1903               	btfsc	3,2
 10919  06FA  2ED6               	goto	l5392
 10920  06FB                     l5396:
 10921  06FB  3001               	movlw	1
 10922  06FC  00F4               	movwf	??_TubeValuePicker
 10923  06FD  0874               	movf	??_TubeValuePicker,w
 10924  06FE  07CB               	addwf	_Pos,f
 10925  06FF  2EB8               	goto	l5398
 10926  0700                     __end_of_TubeValuePicker:
 10927                           
 10928                           	psect	text36
 10929  0F45                     __ptext36:	
 10930 ;; *************** function _Buttons *****************
 10931 ;; Defined at:
 10932 ;;		line 477 in file "Subroutines.c"
 10933 ;; Parameters:    Size  Location     Type
 10934 ;;		None
 10935 ;; Auto vars:     Size  Location     Type
 10936 ;;  presstime       2    2[COMMON] unsigned short 
 10937 ;; Return value:  Size  Location     Type
 10938 ;;                  1    wreg      unsigned char 
 10939 ;; Registers used:
 10940 ;;		wreg, status,2, status,0, pclath, cstack
 10941 ;; Tracked objects:
 10942 ;;		On entry : 0/0
 10943 ;;		On exit  : 3F/0
 10944 ;;		Unchanged: 0/0
 10945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10946 ;;      Params:         0       0       0       0       0       0       0       0
 10947 ;;      Locals:         2       0       0       0       0       0       0       0
 10948 ;;      Temps:          1       0       0       0       0       0       0       0
 10949 ;;      Totals:         3       0       0       0       0       0       0       0
 10950 ;;Total ram usage:        3 bytes
 10951 ;; Hardware stack levels used: 1
 10952 ;; Hardware stack levels required when called: 5
 10953 ;; This function calls:
 10954 ;;		_TMR4_Start
 10955 ;;		_TMR4_Stop
 10956 ;; This function is called by:
 10957 ;;		_DMDisplay
 10958 ;;		_TubeValuePicker
 10959 ;;		_BCDSetInc
 10960 ;;		_OtherSetInc
 10961 ;; This function uses a non-reentrant model
 10962 ;;
 10963                           
 10964                           
 10965                           ;psect for function _Buttons
 10966  0F45                     _Buttons:
 10967                           
 10968                           ;Subroutines.c: 479:     uint16_t presstime = 500;
 10969                           
 10970                           ;incstack = 0
 10971                           ; Regs used in _Buttons: [wreg+status,2+status,0+pclath+cstack]
 10972  0F45  30F4               	movlw	244
 10973  0F46  00F2               	movwf	Buttons@presstime
 10974  0F47  3001               	movlw	1
 10975  0F48  00F3               	movwf	Buttons@presstime+1
 10976                           
 10977                           ;Subroutines.c: 480:     buttoncounter = 13;
 10978  0F49  300D               	movlw	13
 10979  0F4A  0140               	movlb	0	; select bank0
 10980  0F4B  00BE               	movwf	_buttoncounter
 10981  0F4C  3000               	movlw	0
 10982  0F4D  00BF               	movwf	_buttoncounter+1
 10983  0F4E                     l5204:
 10984                           
 10985                           ;Subroutines.c: 483:     {;Subroutines.c: 484:         if (PORTCbits.RC0)
 10986  0F4E  1C0E               	btfss	14,0	;volatile
 10987  0F4F  2F6D               	goto	l966
 10988                           
 10989                           ;Subroutines.c: 485:         {;Subroutines.c: 486:             _delay(10000);
 10990  0F50  300D               	movlw	13
 10991  0F51  00F1               	movwf	??_Buttons
 10992  0F52  30FC               	movlw	252
 10993  0F53                     u4697:
 10994  0F53  0B89               	decfsz	9,f
 10995  0F54  2F53               	goto	u4697
 10996  0F55  0BF1               	decfsz	??_Buttons,f
 10997  0F56  2F53               	goto	u4697
 10998                           
 10999                           ;Subroutines.c: 487:             TMR4_Start();
 11000  0F57  318B  23D7  318F   	fcall	_TMR4_Start
 11001  0F5A                     l967:	
 11002                           ;Subroutines.c: 488:             while (PORTCbits.RC0){}
 11003                           
 11004  0F5A  0140               	movlb	0	; select bank0
 11005  0F5B  180E               	btfsc	14,0	;volatile
 11006  0F5C  2F5A               	goto	l967
 11007                           
 11008                           ;Subroutines.c: 489:             TMR4_Stop();
 11009  0F5D  318B  23DA  318F   	fcall	_TMR4_Stop
 11010                           
 11011                           ;Subroutines.c: 490:             if (buttoncounter > presstime)
 11012  0F60  0140               	movlb	0	; select bank0
 11013  0F61  083F               	movf	_buttoncounter+1,w
 11014  0F62  0273               	subwf	Buttons@presstime+1,w
 11015  0F63  1D03               	skipz
 11016  0F64  2F67               	goto	u3335
 11017  0F65  083E               	movf	_buttoncounter,w
 11018  0F66  0272               	subwf	Buttons@presstime,w
 11019  0F67                     u3335:
 11020  0F67  1803               	skipnc
 11021  0F68  2F6B               	goto	l5218
 11022                           
 11023                           ;Subroutines.c: 491:             {;Subroutines.c: 492:                 return 2;
 11024  0F69  3002               	movlw	2
 11025  0F6A  0008               	return
 11026  0F6B                     l5218:
 11027                           
 11028                           ;Subroutines.c: 494:             return 1;
 11029  0F6B  3001               	movlw	1
 11030  0F6C  0008               	return
 11031  0F6D                     l966:	
 11032                           ;Subroutines.c: 496:         else if (PORTCbits.RC1)
 11033                           
 11034  0F6D  1C8E               	btfss	14,1	;volatile
 11035  0F6E  2F4E               	goto	l5204
 11036                           
 11037                           ;Subroutines.c: 497:         {;Subroutines.c: 498:             _delay(10000);
 11038  0F6F  300D               	movlw	13
 11039  0F70  00F1               	movwf	??_Buttons
 11040  0F71  30FC               	movlw	252
 11041  0F72                     u4707:
 11042  0F72  0B89               	decfsz	9,f
 11043  0F73  2F72               	goto	u4707
 11044  0F74  0BF1               	decfsz	??_Buttons,f
 11045  0F75  2F72               	goto	u4707
 11046  0F76                     l974:	
 11047                           ;Subroutines.c: 499:             while (PORTCbits.RC1){}
 11048                           
 11049  0F76  0140               	movlb	0	; select bank0
 11050  0F77  188E               	btfsc	14,1	;volatile
 11051  0F78  2F76               	goto	l974
 11052                           
 11053                           ;Subroutines.c: 500:             return 3;
 11054  0F79  3003               	movlw	3
 11055  0F7A  0008               	return
 11056  0F7B                     __end_of_Buttons:
 11057                           
 11058                           	psect	text37
 11059  0BDA                     __ptext37:	
 11060 ;; *************** function _TMR4_Stop *****************
 11061 ;; Defined at:
 11062 ;;		line 119 in file "mcc_generated_files/tmr4.c"
 11063 ;; Parameters:    Size  Location     Type
 11064 ;;		None
 11065 ;; Auto vars:     Size  Location     Type
 11066 ;;		None
 11067 ;; Return value:  Size  Location     Type
 11068 ;;                  1    wreg      void 
 11069 ;; Registers used:
 11070 ;;		None
 11071 ;; Tracked objects:
 11072 ;;		On entry : 3F/0
 11073 ;;		On exit  : 3F/5
 11074 ;;		Unchanged: 0/0
 11075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11076 ;;      Params:         0       0       0       0       0       0       0       0
 11077 ;;      Locals:         0       0       0       0       0       0       0       0
 11078 ;;      Temps:          0       0       0       0       0       0       0       0
 11079 ;;      Totals:         0       0       0       0       0       0       0       0
 11080 ;;Total ram usage:        0 bytes
 11081 ;; Hardware stack levels used: 1
 11082 ;; Hardware stack levels required when called: 4
 11083 ;; This function calls:
 11084 ;;		Nothing
 11085 ;; This function is called by:
 11086 ;;		_Buttons
 11087 ;; This function uses a non-reentrant model
 11088 ;;
 11089                           
 11090                           
 11091                           ;psect for function _TMR4_Stop
 11092  0BDA                     _TMR4_Stop:
 11093                           
 11094                           ;mcc_generated_files/tmr4.c: 122:     T4CONbits.TMR4ON = 0;
 11095                           
 11096                           ;incstack = 0
 11097                           ; Regs used in _TMR4_Stop: []
 11098  0BDA  0145               	movlb	5	; select bank5
 11099  0BDB  1394               	bcf	20,7	;volatile
 11100  0BDC  0008               	return
 11101  0BDD                     __end_of_TMR4_Stop:
 11102                           
 11103                           	psect	text38
 11104  0BD7                     __ptext38:	
 11105 ;; *************** function _TMR4_Start *****************
 11106 ;; Defined at:
 11107 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 11108 ;; Parameters:    Size  Location     Type
 11109 ;;		None
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;		None
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  1    wreg      void 
 11114 ;; Registers used:
 11115 ;;		None
 11116 ;; Tracked objects:
 11117 ;;		On entry : 0/0
 11118 ;;		On exit  : 3F/5
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11121 ;;      Params:         0       0       0       0       0       0       0       0
 11122 ;;      Locals:         0       0       0       0       0       0       0       0
 11123 ;;      Temps:          0       0       0       0       0       0       0       0
 11124 ;;      Totals:         0       0       0       0       0       0       0       0
 11125 ;;Total ram usage:        0 bytes
 11126 ;; Hardware stack levels used: 1
 11127 ;; Hardware stack levels required when called: 4
 11128 ;; This function calls:
 11129 ;;		Nothing
 11130 ;; This function is called by:
 11131 ;;		_Buttons
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135                           
 11136                           ;psect for function _TMR4_Start
 11137  0BD7                     _TMR4_Start:
 11138                           
 11139                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
 11140                           
 11141                           ;incstack = 0
 11142                           ; Regs used in _TMR4_Start: []
 11143  0BD7  0145               	movlb	5	; select bank5
 11144  0BD8  1794               	bsf	20,7	;volatile
 11145  0BD9  0008               	return
 11146  0BDA                     __end_of_TMR4_Start:
 11147                           
 11148                           	psect	text39
 11149  02E6                     __ptext39:	
 11150 ;; *************** function _RandomWL *****************
 11151 ;; Defined at:
 11152 ;;		line 112 in file "Subroutines.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;		None
 11155 ;; Auto vars:     Size  Location     Type
 11156 ;;  WLtype          1   18[BANK0 ] unsigned char 
 11157 ;; Return value:  Size  Location     Type
 11158 ;;                  1    wreg      void 
 11159 ;; Registers used:
 11160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11161 ;; Tracked objects:
 11162 ;;		On entry : 3F/0
 11163 ;;		On exit  : 3F/7
 11164 ;;		Unchanged: 0/0
 11165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11166 ;;      Params:         0       0       0       0       0       0       0       0
 11167 ;;      Locals:         0       1       0       0       0       0       0       0
 11168 ;;      Temps:          0       1       0       0       0       0       0       0
 11169 ;;      Totals:         0       2       0       0       0       0       0       0
 11170 ;;Total ram usage:        2 bytes
 11171 ;; Hardware stack levels used: 1
 11172 ;; Hardware stack levels required when called: 7
 11173 ;; This function calls:
 11174 ;;		_Loader
 11175 ;;		_Pulse
 11176 ;;		_RandomNum
 11177 ;; This function is called by:
 11178 ;;		_DMDisplay
 11179 ;; This function uses a non-reentrant model
 11180 ;;
 11181                           
 11182                           
 11183                           ;psect for function _RandomWL
 11184  02E6                     _RandomWL:
 11185                           
 11186                           ;Subroutines.c: 114:     uint8_t WLtype = RandomNum(255);
 11187                           
 11188                           ;incstack = 0
 11189                           ; Regs used in _RandomWL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11190  02E6  30FF               	movlw	255
 11191  02E7  318E  261C  3182   	fcall	_RandomNum
 11192  02EA  00E4               	movwf	??_RandomWL
 11193  02EB  0864               	movf	??_RandomWL,w
 11194  02EC  00E5               	movwf	RandomWL@WLtype
 11195                           
 11196                           ;Subroutines.c: 117:     NegWL = 0;
 11197  02ED  137C               	bcf	_NegWL/(0+8),_NegWL& (0+7)
 11198                           
 11199                           ;Subroutines.c: 118:     DisplayBuf[0] = 0;
 11200  02EE  01B0               	clrf	_DisplayBuf
 11201                           
 11202                           ;Subroutines.c: 119:     if (WLtype <= 3)
 11203  02EF  3004               	movlw	4
 11204  02F0  0265               	subwf	RandomWL@WLtype,w
 11205  02F1  1803               	skipnc
 11206  02F2  2AF7               	goto	l5712
 11207                           
 11208                           ;Subroutines.c: 120:     {;Subroutines.c: 121:         DisplayBuf[0] = 1;
 11209  02F3  01B0               	clrf	_DisplayBuf
 11210  02F4  0AB0               	incf	_DisplayBuf,f
 11211                           
 11212                           ;Subroutines.c: 122:         NegWL = 1;
 11213  02F5  177C               	bsf	_NegWL/(0+8),_NegWL& (0+7)
 11214                           
 11215                           ;Subroutines.c: 123:     }
 11216  02F6  2B01               	goto	l5718
 11217  02F7                     l5712:
 11218  02F7  3010               	movlw	16
 11219  02F8  0265               	subwf	RandomWL@WLtype,w
 11220  02F9  1803               	skipnc
 11221  02FA  2B01               	goto	l5718
 11222  02FB  3004               	movlw	4
 11223  02FC  0265               	subwf	RandomWL@WLtype,w
 11224  02FD  1C03               	skipc
 11225  02FE  2B01               	goto	l5718
 11226                           
 11227                           ;Subroutines.c: 125:         DisplayBuf[0] = 1;
 11228  02FF  01B0               	clrf	_DisplayBuf
 11229  0300  0AB0               	incf	_DisplayBuf,f
 11230  0301                     l5718:
 11231                           
 11232                           ;Subroutines.c: 126:     AnimBuf[0] = RunLength[RandomNum(7)];
 11233  0301  3007               	movlw	7
 11234  0302  318E  261C  3182   	fcall	_RandomNum
 11235  0305  3E20               	addlw	(low (_RunLength| (0+256)))& (0+255)
 11236  0306  0086               	movwf	6
 11237  0307  3001               	movlw	1	; select bank2/3
 11238  0308  0087               	movwf	7
 11239  0309  0801               	movf	1,w
 11240  030A  00E4               	movwf	??_RandomWL
 11241  030B  0864               	movf	??_RandomWL,w
 11242  030C  00A8               	movwf	_AnimBuf
 11243                           
 11244                           ;Subroutines.c: 127:     for (Pos=7; Pos>2; Pos--)
 11245  030D  3007               	movlw	7
 11246  030E  00E4               	movwf	??_RandomWL
 11247  030F  0864               	movf	??_RandomWL,w
 11248  0310  00CB               	movwf	_Pos
 11249  0311                     l5722:
 11250  0311  3003               	movlw	3
 11251  0312  024B               	subwf	_Pos,w
 11252  0313  1C03               	btfss	3,0
 11253  0314  2B28               	goto	l811
 11254                           
 11255                           ;Subroutines.c: 128:     {;Subroutines.c: 129:         AnimBuf[Pos] = RunLength[RandomNu
      +                          m(63)];
 11256  0315  303F               	movlw	63
 11257  0316  318E  261C  3182   	fcall	_RandomNum
 11258  0319  3E20               	addlw	(low (_RunLength| (0+256)))& (0+255)
 11259  031A  0086               	movwf	6
 11260  031B  3001               	movlw	1	; select bank2/3
 11261  031C  0087               	movwf	7
 11262  031D  0801               	movf	1,w
 11263  031E  00E4               	movwf	??_RandomWL
 11264  031F  084B               	movf	_Pos,w
 11265  0320  3E28               	addlw	(low (_AnimBuf| 0))& (0+255)
 11266  0321  0086               	movwf	6
 11267  0322  0187               	clrf	7
 11268  0323  0864               	movf	??_RandomWL,w
 11269  0324  0081               	movwf	1
 11270                           
 11271                           ;Subroutines.c: 130:     }
 11272  0325  3001               	movlw	1
 11273  0326  02CB               	subwf	_Pos,f
 11274  0327  2B11               	goto	l5722
 11275  0328                     l811:	
 11276                           ;Subroutines.c: 131:     while (1)
 11277                           
 11278                           
 11279                           ;Subroutines.c: 132:     {;Subroutines.c: 133:         Action = 0;
 11280  0328  12FC               	bcf	_Action/(0+8),_Action& (0+7)
 11281                           
 11282                           ;Subroutines.c: 134:         if (AnimBuf[0] != 0)
 11283  0329  0140               	movlb	0	; select bank0
 11284  032A  0828               	movf	_AnimBuf,w
 11285  032B  1903               	btfsc	3,2
 11286  032C  2B3A               	goto	l5742
 11287                           
 11288                           ;Subroutines.c: 135:         {;Subroutines.c: 136:             AnimBuf[0]--;
 11289  032D  3001               	movlw	1
 11290  032E  02A8               	subwf	_AnimBuf,f
 11291                           
 11292                           ;Subroutines.c: 137:             Action = 1;
 11293  032F  16FC               	bsf	_Action/(0+8),_Action& (0+7)
 11294                           
 11295                           ;Subroutines.c: 138:             DisplayBuf[0]++;
 11296  0330  3001               	movlw	1
 11297  0331  00E4               	movwf	??_RandomWL
 11298  0332  0864               	movf	??_RandomWL,w
 11299  0333  07B0               	addwf	_DisplayBuf,f
 11300                           
 11301                           ;Subroutines.c: 139:             if (DisplayBuf[0] >= 10)
 11302  0334  300A               	movlw	10
 11303  0335  0230               	subwf	_DisplayBuf,w
 11304  0336  1C03               	skipc
 11305  0337  2B42               	goto	l814
 11306                           
 11307                           ;Subroutines.c: 140:                 DisplayBuf[0] = 0;
 11308  0338  01B0               	clrf	_DisplayBuf
 11309  0339  2B42               	goto	l814
 11310  033A                     l5742:
 11311  033A  0828               	movf	_AnimBuf,w
 11312  033B  1903               	btfsc	3,2
 11313  033C  1F7C               	btfss	_NegWL/(0+8),_NegWL& (0+7)
 11314  033D  2B42               	goto	l814
 11315                           
 11316                           ;Subroutines.c: 143:             DisplayBuf[0] = 10;
 11317  033E  300A               	movlw	10
 11318  033F  00E4               	movwf	??_RandomWL
 11319  0340  0864               	movf	??_RandomWL,w
 11320  0341  00B0               	movwf	_DisplayBuf
 11321  0342                     l814:
 11322                           
 11323                           ;Subroutines.c: 144:         for (Pos=7; Pos>2; Pos--)
 11324  0342  3007               	movlw	7
 11325  0343  00E4               	movwf	??_RandomWL
 11326  0344  0864               	movf	??_RandomWL,w
 11327  0345  00CB               	movwf	_Pos
 11328  0346  3003               	movlw	3
 11329  0347  024B               	subwf	_Pos,w
 11330  0348  1C03               	btfss	3,0
 11331  0349  2B73               	goto	l817
 11332  034A                     l5750:
 11333                           
 11334                           ;Subroutines.c: 145:         {;Subroutines.c: 146:             if (AnimBuf[Pos] != 0)
 11335  034A  084B               	movf	_Pos,w
 11336  034B  3E28               	addlw	(low (_AnimBuf| 0))& (0+255)
 11337  034C  0086               	movwf	6
 11338  034D  0187               	clrf	7
 11339  034E  0801               	movf	1,w
 11340  034F  1903               	btfsc	3,2
 11341  0350  2B6D               	goto	l5758
 11342                           
 11343                           ;Subroutines.c: 147:             {;Subroutines.c: 148:                 AnimBuf[Pos]--;
 11344  0351  084B               	movf	_Pos,w
 11345  0352  3E28               	addlw	(low (_AnimBuf| 0))& (0+255)
 11346  0353  0086               	movwf	6
 11347  0354  0187               	clrf	7
 11348  0355  3001               	movlw	1
 11349  0356  0281               	subwf	1,f
 11350                           
 11351                           ;Subroutines.c: 149:                 Action = 1;
 11352  0357  16FC               	bsf	_Action/(0+8),_Action& (0+7)
 11353                           
 11354                           ;Subroutines.c: 150:                 DisplayBuf[Pos]++;
 11355  0358  3001               	movlw	1
 11356  0359  00E4               	movwf	??_RandomWL
 11357  035A  084B               	movf	_Pos,w
 11358  035B  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 11359  035C  0086               	movwf	6
 11360  035D  0187               	clrf	7
 11361  035E  0864               	movf	??_RandomWL,w
 11362  035F  0781               	addwf	1,f
 11363                           
 11364                           ;Subroutines.c: 151:                 if (DisplayBuf[Pos] >= 10)
 11365  0360  084B               	movf	_Pos,w
 11366  0361  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 11367  0362  0086               	movwf	6
 11368  0363  0187               	clrf	7
 11369  0364  300A               	movlw	10
 11370  0365  0201               	subwf	1,w
 11371  0366  1C03               	skipc
 11372  0367  2B6D               	goto	l5758
 11373                           
 11374                           ;Subroutines.c: 152:                     DisplayBuf[Pos] = 0;
 11375  0368  084B               	movf	_Pos,w
 11376  0369  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 11377  036A  0086               	movwf	6
 11378  036B  0187               	clrf	7
 11379  036C  0181               	clrf	1
 11380  036D                     l5758:
 11381                           
 11382                           ;Subroutines.c: 154:         }
 11383  036D  3001               	movlw	1
 11384  036E  02CB               	subwf	_Pos,f
 11385  036F  3003               	movlw	3
 11386  0370  024B               	subwf	_Pos,w
 11387  0371  1803               	skipnc
 11388  0372  2B4A               	goto	l5750
 11389  0373                     l817:
 11390                           
 11391                           ;Subroutines.c: 155:         if (Action == 1)
 11392  0373  1EFC               	btfss	_Action/(0+8),_Action& (0+7)
 11393  0374  2B79               	goto	l820
 11394                           
 11395                           ;Subroutines.c: 156:             Loader();
 11396  0375  318F  270F  3182   	fcall	_Loader
 11397  0378  2B7B               	goto	l5766
 11398  0379                     l820:	
 11399                           ;Subroutines.c: 157:         else if (Action == 0)
 11400                           
 11401  0379  1EFC               	btfss	_Action/(0+8),_Action& (0+7)
 11402  037A  2B85               	goto	l5768
 11403  037B                     l5766:
 11404                           
 11405                           ;Subroutines.c: 159:         _delay(16000);
 11406  037B  3015               	movlw	21
 11407  037C  0140               	movlb	0	; select bank0
 11408  037D  00E4               	movwf	??_RandomWL
 11409  037E  30C6               	movlw	198
 11410  037F                     u4717:
 11411  037F  0B89               	decfsz	9,f
 11412  0380  2B7F               	goto	u4717
 11413  0381  0BE4               	decfsz	??_RandomWL,f
 11414  0382  2B7F               	goto	u4717
 11415  0383  0000               	nop
 11416  0384  2B28               	goto	l811
 11417  0385                     l5768:
 11418                           
 11419                           ;Subroutines.c: 161:     Pulse();
 11420  0385  3187  2751         	fcall	_Pulse
 11421  0387  0008               	return
 11422  0388                     __end_of_RandomWL:
 11423                           
 11424                           	psect	text40
 11425  05B9                     __ptext40:	
 11426 ;; *************** function _FixedWL *****************
 11427 ;; Defined at:
 11428 ;;		line 164 in file "Subroutines.c"
 11429 ;; Parameters:    Size  Location     Type
 11430 ;;		None
 11431 ;; Auto vars:     Size  Location     Type
 11432 ;;		None
 11433 ;; Return value:  Size  Location     Type
 11434 ;;                  1    wreg      void 
 11435 ;; Registers used:
 11436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11437 ;; Tracked objects:
 11438 ;;		On entry : 3F/0
 11439 ;;		On exit  : 3F/7
 11440 ;;		Unchanged: 0/0
 11441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11442 ;;      Params:         0       0       0       0       0       0       0       0
 11443 ;;      Locals:         0       0       0       0       0       0       0       0
 11444 ;;      Temps:          0       1       0       0       0       0       0       0
 11445 ;;      Totals:         0       1       0       0       0       0       0       0
 11446 ;;Total ram usage:        1 bytes
 11447 ;; Hardware stack levels used: 1
 11448 ;; Hardware stack levels required when called: 7
 11449 ;; This function calls:
 11450 ;;		_Loader
 11451 ;;		_Pulse
 11452 ;;		_RandomNum
 11453 ;; This function is called by:
 11454 ;;		_main
 11455 ;;		_DMDisplay
 11456 ;; This function uses a non-reentrant model
 11457 ;;
 11458                           
 11459                           
 11460                           ;psect for function _FixedWL
 11461  05B9                     _FixedWL:
 11462                           
 11463                           ;Subroutines.c: 166:     for (Pos=8; Pos--;)
 11464                           
 11465                           ;incstack = 0
 11466                           ; Regs used in _FixedWL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11467  05B9  3008               	movlw	8
 11468  05BA  00E4               	movwf	??_FixedWL
 11469  05BB  0864               	movf	??_FixedWL,w
 11470  05BC  00CB               	movwf	_Pos
 11471  05BD                     l5556:
 11472  05BD  3001               	movlw	1
 11473  05BE  02CB               	subwf	_Pos,f
 11474  05BF  0A4B               	incf	_Pos,w
 11475  05C0  1903               	btfsc	3,2
 11476  05C1  2DD3               	goto	l5558
 11477                           
 11478                           ;Subroutines.c: 167:     {;Subroutines.c: 168:         AnimBuf[Pos] = RunLength[RandomNu
      +                          m(63)];
 11479  05C2  303F               	movlw	63
 11480  05C3  318E  261C  3185   	fcall	_RandomNum
 11481  05C6  3E20               	addlw	(low (_RunLength| (0+256)))& (0+255)
 11482  05C7  0086               	movwf	6
 11483  05C8  3001               	movlw	1	; select bank2/3
 11484  05C9  0087               	movwf	7
 11485  05CA  0801               	movf	1,w
 11486  05CB  00E4               	movwf	??_FixedWL
 11487  05CC  084B               	movf	_Pos,w
 11488  05CD  3E28               	addlw	(low (_AnimBuf| 0))& (0+255)
 11489  05CE  0086               	movwf	6
 11490  05CF  0187               	clrf	7
 11491  05D0  0864               	movf	??_FixedWL,w
 11492  05D1  0081               	movwf	1
 11493  05D2  2DBD               	goto	l5556
 11494  05D3                     l5558:
 11495                           
 11496                           ;Subroutines.c: 170:     AnimBuf[1] = 0;
 11497  05D3  01A9               	clrf	_AnimBuf+1
 11498  05D4                     l5560:
 11499                           
 11500                           ;Subroutines.c: 172:     {;Subroutines.c: 173:         Action = 0;
 11501  05D4  12FC               	bcf	_Action/(0+8),_Action& (0+7)
 11502                           
 11503                           ;Subroutines.c: 174:         for (Pos=8; Pos--;)
 11504  05D5  3008               	movlw	8
 11505  05D6  0140               	movlb	0	; select bank0
 11506  05D7  00E4               	movwf	??_FixedWL
 11507  05D8  0864               	movf	??_FixedWL,w
 11508  05D9  00CB               	movwf	_Pos
 11509  05DA                     l5576:	
 11510                           ;Subroutines.c: 192:         }
 11511                           
 11512  05DA  3001               	movlw	1
 11513  05DB  02CB               	subwf	_Pos,f
 11514  05DC  0A4B               	incf	_Pos,w
 11515  05DD  1903               	btfsc	3,2
 11516  05DE  2E17               	goto	l839
 11517                           
 11518                           ;Subroutines.c: 175:         {;Subroutines.c: 176:             if (AnimBuf[Pos] != 0)
 11519  05DF  084B               	movf	_Pos,w
 11520  05E0  3E28               	addlw	(low (_AnimBuf| 0))& (0+255)
 11521  05E1  0086               	movwf	6
 11522  05E2  0187               	clrf	7
 11523  05E3  0801               	movf	1,w
 11524  05E4  1903               	btfsc	3,2
 11525  05E5  2DDA               	goto	l5576
 11526                           
 11527                           ;Subroutines.c: 177:             {;Subroutines.c: 178:                 AnimBuf[Pos]--;
 11528  05E6  084B               	movf	_Pos,w
 11529  05E7  3E28               	addlw	(low (_AnimBuf| 0))& (0+255)
 11530  05E8  0086               	movwf	6
 11531  05E9  0187               	clrf	7
 11532  05EA  3001               	movlw	1
 11533  05EB  0281               	subwf	1,f
 11534                           
 11535                           ;Subroutines.c: 179:                 if (AnimBuf[Pos] == 0)
 11536  05EC  084B               	movf	_Pos,w
 11537  05ED  3E28               	addlw	(low (_AnimBuf| 0))& (0+255)
 11538  05EE  0086               	movwf	6
 11539  05EF  0187               	clrf	7
 11540  05F0  0801               	movf	1,w
 11541  05F1  1D03               	btfss	3,2
 11542  05F2  2E00               	goto	l835
 11543                           
 11544                           ;Subroutines.c: 180:                 {;Subroutines.c: 181:                     DisplayBu
      +                          f[Pos] = DisplaySave[Pos];
 11545  05F3  084B               	movf	_Pos,w
 11546  05F4  3E20               	addlw	(low (_DisplaySave| 0))& (0+255)
 11547  05F5  0086               	movwf	6
 11548  05F6  0187               	clrf	7
 11549  05F7  0801               	movf	1,w
 11550  05F8  00E4               	movwf	??_FixedWL
 11551  05F9  084B               	movf	_Pos,w
 11552  05FA  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 11553  05FB  0086               	movwf	6
 11554  05FC  0187               	clrf	7
 11555  05FD  0864               	movf	??_FixedWL,w
 11556  05FE  0081               	movwf	1
 11557                           
 11558                           ;Subroutines.c: 182:                     continue;
 11559  05FF  2DDA               	goto	l5576
 11560  0600                     l835:	
 11561                           ;Subroutines.c: 184:                 else
 11562                           
 11563                           
 11564                           ;Subroutines.c: 185:                 {;Subroutines.c: 186:                     Action = 
      +                          1;
 11565  0600  16FC               	bsf	_Action/(0+8),_Action& (0+7)
 11566                           
 11567                           ;Subroutines.c: 187:                     DisplayBuf[Pos]++;
 11568  0601  3001               	movlw	1
 11569  0602  00E4               	movwf	??_FixedWL
 11570  0603  084B               	movf	_Pos,w
 11571  0604  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 11572  0605  0086               	movwf	6
 11573  0606  0187               	clrf	7
 11574  0607  0864               	movf	??_FixedWL,w
 11575  0608  0781               	addwf	1,f
 11576                           
 11577                           ;Subroutines.c: 188:                     if (DisplayBuf[Pos] == 10)
 11578  0609  084B               	movf	_Pos,w
 11579  060A  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 11580  060B  0086               	movwf	6
 11581  060C  0187               	clrf	7
 11582  060D  300A               	movlw	10
 11583  060E  0601               	xorwf	1,w
 11584  060F  1D03               	btfss	3,2
 11585  0610  2DDA               	goto	l5576
 11586                           
 11587                           ;Subroutines.c: 189:                         DisplayBuf[Pos] = 0;
 11588  0611  084B               	movf	_Pos,w
 11589  0612  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 11590  0613  0086               	movwf	6
 11591  0614  0187               	clrf	7
 11592  0615  0181               	clrf	1
 11593  0616  2DDA               	goto	l5576
 11594  0617                     l839:
 11595                           
 11596                           ;Subroutines.c: 193:         if (Action == 1)
 11597  0617  1EFC               	btfss	_Action/(0+8),_Action& (0+7)
 11598  0618  2E1D               	goto	l840
 11599                           
 11600                           ;Subroutines.c: 194:             Loader();
 11601  0619  318F  270F  3185   	fcall	_Loader
 11602  061C  2E1F               	goto	l5582
 11603  061D                     l840:	
 11604                           ;Subroutines.c: 195:         else if (Action == 0)
 11605                           
 11606  061D  1EFC               	btfss	_Action/(0+8),_Action& (0+7)
 11607  061E  2E29               	goto	l5584
 11608  061F                     l5582:
 11609                           
 11610                           ;Subroutines.c: 197:         _delay(16000);
 11611  061F  3015               	movlw	21
 11612  0620  0140               	movlb	0	; select bank0
 11613  0621  00E4               	movwf	??_FixedWL
 11614  0622  30C6               	movlw	198
 11615  0623                     u4727:
 11616  0623  0B89               	decfsz	9,f
 11617  0624  2E23               	goto	u4727
 11618  0625  0BE4               	decfsz	??_FixedWL,f
 11619  0626  2E23               	goto	u4727
 11620  0627  0000               	nop
 11621  0628  2DD4               	goto	l5560
 11622  0629                     l5584:
 11623                           
 11624                           ;Subroutines.c: 199:     Pulse();
 11625  0629  3187  2751         	fcall	_Pulse
 11626  062B  0008               	return
 11627  062C                     __end_of_FixedWL:
 11628                           
 11629                           	psect	text41
 11630  0E1C                     __ptext41:	
 11631 ;; *************** function _RandomNum *****************
 11632 ;; Defined at:
 11633 ;;		line 468 in file "Subroutines.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;  upper           1    wreg     unsigned char 
 11636 ;; Auto vars:     Size  Location     Type
 11637 ;;  upper           1   15[BANK0 ] unsigned char 
 11638 ;;  rand_num        1   16[BANK0 ] unsigned char 
 11639 ;; Return value:  Size  Location     Type
 11640 ;;                  1    wreg      unsigned char 
 11641 ;; Registers used:
 11642 ;;		wreg, status,2, status,0, pclath, cstack
 11643 ;; Tracked objects:
 11644 ;;		On entry : 3F/0
 11645 ;;		On exit  : 3F/0
 11646 ;;		Unchanged: 0/0
 11647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11648 ;;      Params:         0       0       0       0       0       0       0       0
 11649 ;;      Locals:         0       2       0       0       0       0       0       0
 11650 ;;      Temps:          0       1       0       0       0       0       0       0
 11651 ;;      Totals:         0       3       0       0       0       0       0       0
 11652 ;;Total ram usage:        3 bytes
 11653 ;; Hardware stack levels used: 1
 11654 ;; Hardware stack levels required when called: 6
 11655 ;; This function calls:
 11656 ;;		_TMR0_ReadTimer
 11657 ;;		___awmod
 11658 ;;		_rand
 11659 ;;		_srand
 11660 ;; This function is called by:
 11661 ;;		_RandomWL
 11662 ;;		_FixedWL
 11663 ;; This function uses a non-reentrant model
 11664 ;;
 11665                           
 11666                           
 11667                           ;psect for function _RandomNum
 11668  0E1C                     _RandomNum:
 11669                           
 11670                           ;incstack = 0
 11671                           ; Regs used in _RandomNum: [wreg+status,2+status,0+pclath+cstack]
 11672                           ;RandomNum@upper stored from wreg
 11673  0E1C  00E2               	movwf	RandomNum@upper
 11674                           
 11675                           ;Subroutines.c: 468: uint8_t RandomNum(uint8_t upper);Subroutines.c: 469: {;Subroutines.
      +                          c: 470:     uint8_t rand_num;;Subroutines.c: 472:     srand(TMR0_ReadTimer());
 11676  0E1D  318D  25E2  318E   	fcall	_TMR0_ReadTimer
 11677  0E20  0872               	movf	?_TMR0_ReadTimer+1,w
 11678  0E21  0140               	movlb	0	; select bank0
 11679  0E22  00D4               	movwf	srand@s+1
 11680  0E23  0871               	movf	?_TMR0_ReadTimer,w
 11681  0E24  00D3               	movwf	srand@s
 11682  0E25  318C  240B  318E   	fcall	_srand
 11683                           
 11684                           ;Subroutines.c: 473:     rand_num = (rand() % (upper + 1));
 11685  0E28  0862               	movf	RandomNum@upper,w
 11686  0E29  3E01               	addlw	1
 11687  0E2A  00DD               	movwf	___awmod@divisor
 11688  0E2B  3000               	movlw	0
 11689  0E2C  1803               	skipnc
 11690  0E2D  3001               	movlw	1
 11691  0E2E  00DE               	movwf	___awmod@divisor+1
 11692  0E2F  318E  26DC  318E   	fcall	_rand
 11693  0E32  0858               	movf	?_rand+1,w
 11694  0E33  00E0               	movwf	___awmod@dividend+1
 11695  0E34  0857               	movf	?_rand,w
 11696  0E35  00DF               	movwf	___awmod@dividend
 11697  0E36  318F  27BB         	fcall	___awmod
 11698  0E38  085D               	movf	?___awmod,w
 11699  0E39  00E1               	movwf	??_RandomNum
 11700  0E3A  0861               	movf	??_RandomNum,w
 11701  0E3B  00E3               	movwf	RandomNum@rand_num
 11702                           
 11703                           ;Subroutines.c: 474:     return rand_num;
 11704  0E3C  0863               	movf	RandomNum@rand_num,w
 11705  0E3D  0008               	return
 11706  0E3E                     __end_of_RandomNum:
 11707                           
 11708                           	psect	text42
 11709  0C0B                     __ptext42:	
 11710 ;; *************** function _srand *****************
 11711 ;; Defined at:
 11712 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\rand.c"
 11713 ;; Parameters:    Size  Location     Type
 11714 ;;  s               2    0[BANK0 ] unsigned int 
 11715 ;; Auto vars:     Size  Location     Type
 11716 ;;		None
 11717 ;; Return value:  Size  Location     Type
 11718 ;;                  1    wreg      void 
 11719 ;; Registers used:
 11720 ;;		wreg, status,2, status,0
 11721 ;; Tracked objects:
 11722 ;;		On entry : 3F/0
 11723 ;;		On exit  : 3F/0
 11724 ;;		Unchanged: 0/0
 11725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11726 ;;      Params:         0       2       0       0       0       0       0       0
 11727 ;;      Locals:         0       0       0       0       0       0       0       0
 11728 ;;      Temps:          0       0       0       0       0       0       0       0
 11729 ;;      Totals:         0       2       0       0       0       0       0       0
 11730 ;;Total ram usage:        2 bytes
 11731 ;; Hardware stack levels used: 1
 11732 ;; Hardware stack levels required when called: 4
 11733 ;; This function calls:
 11734 ;;		Nothing
 11735 ;; This function is called by:
 11736 ;;		_RandomNum
 11737 ;; This function uses a non-reentrant model
 11738 ;;
 11739                           
 11740                           
 11741                           ;psect for function _srand
 11742  0C0B                     _srand:
 11743                           
 11744                           ;incstack = 0
 11745                           ; Regs used in _srand: [wreg+status,2+status,0]
 11746  0C0B  0853               	movf	srand@s,w
 11747  0C0C  3EFF               	addlw	255
 11748  0C0D  00CC               	movwf	_seed
 11749  0C0E  30FF               	movlw	255
 11750  0C0F  3D54               	addwfc	srand@s+1,w
 11751  0C10  00CD               	movwf	_seed+1
 11752  0C11  01CE               	clrf	_seed+2
 11753  0C12  01CF               	clrf	_seed+3
 11754  0C13  0008               	return
 11755  0C14                     __end_of_srand:
 11756                           
 11757                           	psect	text43
 11758  0EDC                     __ptext43:	
 11759 ;; *************** function _rand *****************
 11760 ;; Defined at:
 11761 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\rand.c"
 11762 ;; Parameters:    Size  Location     Type
 11763 ;;		None
 11764 ;; Auto vars:     Size  Location     Type
 11765 ;;		None
 11766 ;; Return value:  Size  Location     Type
 11767 ;;                  2    4[BANK0 ] int 
 11768 ;; Registers used:
 11769 ;;		wreg, status,2, status,0, pclath, cstack
 11770 ;; Tracked objects:
 11771 ;;		On entry : 3F/0
 11772 ;;		On exit  : 3F/0
 11773 ;;		Unchanged: 0/0
 11774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11775 ;;      Params:         0       2       0       0       0       0       0       0
 11776 ;;      Locals:         0       0       0       0       0       0       0       0
 11777 ;;      Temps:          0       4       0       0       0       0       0       0
 11778 ;;      Totals:         0       6       0       0       0       0       0       0
 11779 ;;Total ram usage:        6 bytes
 11780 ;; Hardware stack levels used: 1
 11781 ;; Hardware stack levels required when called: 5
 11782 ;; This function calls:
 11783 ;;		___lmul
 11784 ;; This function is called by:
 11785 ;;		_RandomNum
 11786 ;; This function uses a non-reentrant model
 11787 ;;
 11788                           
 11789                           
 11790                           ;psect for function _rand
 11791  0EDC                     _rand:
 11792                           
 11793                           ;incstack = 0
 11794                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
 11795  0EDC  084F               	movf	_seed+3,w
 11796  0EDD  00F4               	movwf	___lmul@multiplier+3
 11797  0EDE  084E               	movf	_seed+2,w
 11798  0EDF  00F3               	movwf	___lmul@multiplier+2
 11799  0EE0  084D               	movf	_seed+1,w
 11800  0EE1  00F2               	movwf	___lmul@multiplier+1
 11801  0EE2  084C               	movf	_seed,w
 11802  0EE3  00F1               	movwf	___lmul@multiplier
 11803  0EE4  304C               	movlw	76
 11804  0EE5  00F8               	movwf	___lmul@multiplicand+3
 11805  0EE6  3095               	movlw	149
 11806  0EE7  00F7               	movwf	___lmul@multiplicand+2
 11807  0EE8  307F               	movlw	127
 11808  0EE9  00F6               	movwf	___lmul@multiplicand+1
 11809  0EEA  302D               	movlw	45
 11810  0EEB  00F5               	movwf	___lmul@multiplicand
 11811  0EEC  318E  26AD  318E   	fcall	___lmul
 11812  0EEF  3001               	movlw	1
 11813  0EF0  0771               	addwf	?___lmul,w
 11814  0EF1  00CC               	movwf	_seed
 11815  0EF2  3000               	movlw	0
 11816  0EF3  3D72               	addwfc	?___lmul+1,w
 11817  0EF4  00CD               	movwf	_seed+1
 11818  0EF5  3000               	movlw	0
 11819  0EF6  3D73               	addwfc	?___lmul+2,w
 11820  0EF7  00CE               	movwf	_seed+2
 11821  0EF8  3000               	movlw	0
 11822  0EF9  3D74               	addwfc	?___lmul+3,w
 11823  0EFA  00CF               	movwf	_seed+3
 11824  0EFB  084C               	movf	_seed,w
 11825  0EFC  00D9               	movwf	??_rand
 11826  0EFD  084D               	movf	_seed+1,w
 11827  0EFE  00DA               	movwf	??_rand+1
 11828  0EFF  084E               	movf	_seed+2,w
 11829  0F00  00DB               	movwf	??_rand+2
 11830  0F01  084F               	movf	_seed+3,w
 11831  0F02  00DC               	movwf	??_rand+3
 11832  0F03  3011               	movlw	17
 11833  0F04                     u3415:
 11834  0F04  36DC               	lsrf	??_rand+3,f
 11835  0F05  0CDB               	rrf	??_rand+2,f
 11836  0F06  0CDA               	rrf	??_rand+1,f
 11837  0F07  0CD9               	rrf	??_rand,f
 11838  0F08  0B89               	decfsz	9,f
 11839  0F09  2F04               	goto	u3415
 11840  0F0A  085A               	movf	??_rand+1,w
 11841  0F0B  00D8               	movwf	?_rand+1
 11842  0F0C  0859               	movf	??_rand,w
 11843  0F0D  00D7               	movwf	?_rand
 11844  0F0E  0008               	return
 11845  0F0F                     __end_of_rand:
 11846                           
 11847                           	psect	text44
 11848  0EAD                     __ptext44:	
 11849 ;; *************** function ___lmul *****************
 11850 ;; Defined at:
 11851 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
 11852 ;; Parameters:    Size  Location     Type
 11853 ;;  multiplier      4    1[COMMON] unsigned long 
 11854 ;;  multiplicand    4    5[COMMON] unsigned long 
 11855 ;; Auto vars:     Size  Location     Type
 11856 ;;  product         4    0[BANK0 ] unsigned long 
 11857 ;; Return value:  Size  Location     Type
 11858 ;;                  4    1[COMMON] unsigned long 
 11859 ;; Registers used:
 11860 ;;		wreg, status,2, status,0
 11861 ;; Tracked objects:
 11862 ;;		On entry : 3F/0
 11863 ;;		On exit  : 3F/0
 11864 ;;		Unchanged: 0/0
 11865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11866 ;;      Params:         8       0       0       0       0       0       0       0
 11867 ;;      Locals:         0       4       0       0       0       0       0       0
 11868 ;;      Temps:          0       0       0       0       0       0       0       0
 11869 ;;      Totals:         8       4       0       0       0       0       0       0
 11870 ;;Total ram usage:       12 bytes
 11871 ;; Hardware stack levels used: 1
 11872 ;; Hardware stack levels required when called: 4
 11873 ;; This function calls:
 11874 ;;		Nothing
 11875 ;; This function is called by:
 11876 ;;		_rand
 11877 ;; This function uses a non-reentrant model
 11878 ;;
 11879                           
 11880                           
 11881                           ;psect for function ___lmul
 11882  0EAD                     ___lmul:
 11883                           
 11884                           ;incstack = 0
 11885                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11886  0EAD  3000               	movlw	0
 11887  0EAE  00D6               	movwf	___lmul@product+3
 11888  0EAF  3000               	movlw	0
 11889  0EB0  00D5               	movwf	___lmul@product+2
 11890  0EB1  3000               	movlw	0
 11891  0EB2  00D4               	movwf	___lmul@product+1
 11892  0EB3  3000               	movlw	0
 11893  0EB4  00D3               	movwf	___lmul@product
 11894  0EB5                     l5136:
 11895  0EB5  1C71               	btfss	___lmul@multiplier,0
 11896  0EB6  2EBF               	goto	l5140
 11897  0EB7  0875               	movf	___lmul@multiplicand,w
 11898  0EB8  07D3               	addwf	___lmul@product,f
 11899  0EB9  0876               	movf	___lmul@multiplicand+1,w
 11900  0EBA  3DD4               	addwfc	___lmul@product+1,f
 11901  0EBB  0877               	movf	___lmul@multiplicand+2,w
 11902  0EBC  3DD5               	addwfc	___lmul@product+2,f
 11903  0EBD  0878               	movf	___lmul@multiplicand+3,w
 11904  0EBE  3DD6               	addwfc	___lmul@product+3,f
 11905  0EBF                     l5140:
 11906  0EBF  3001               	movlw	1
 11907  0EC0                     u3245:
 11908  0EC0  35F5               	lslf	___lmul@multiplicand,f
 11909  0EC1  0DF6               	rlf	___lmul@multiplicand+1,f
 11910  0EC2  0DF7               	rlf	___lmul@multiplicand+2,f
 11911  0EC3  0DF8               	rlf	___lmul@multiplicand+3,f
 11912  0EC4  0B89               	decfsz	9,f
 11913  0EC5  2EC0               	goto	u3245
 11914  0EC6  3001               	movlw	1
 11915  0EC7                     u3255:
 11916  0EC7  36F4               	lsrf	___lmul@multiplier+3,f
 11917  0EC8  0CF3               	rrf	___lmul@multiplier+2,f
 11918  0EC9  0CF2               	rrf	___lmul@multiplier+1,f
 11919  0ECA  0CF1               	rrf	___lmul@multiplier,f
 11920  0ECB  0B89               	decfsz	9,f
 11921  0ECC  2EC7               	goto	u3255
 11922  0ECD  0874               	movf	___lmul@multiplier+3,w
 11923  0ECE  0473               	iorwf	___lmul@multiplier+2,w
 11924  0ECF  0472               	iorwf	___lmul@multiplier+1,w
 11925  0ED0  0471               	iorwf	___lmul@multiplier,w
 11926  0ED1  1D03               	skipz
 11927  0ED2  2EB5               	goto	l5136
 11928  0ED3  0856               	movf	___lmul@product+3,w
 11929  0ED4  00F4               	movwf	?___lmul+3
 11930  0ED5  0855               	movf	___lmul@product+2,w
 11931  0ED6  00F3               	movwf	?___lmul+2
 11932  0ED7  0854               	movf	___lmul@product+1,w
 11933  0ED8  00F2               	movwf	?___lmul+1
 11934  0ED9  0853               	movf	___lmul@product,w
 11935  0EDA  00F1               	movwf	?___lmul
 11936  0EDB  0008               	return
 11937  0EDC                     __end_of___lmul:
 11938                           
 11939                           	psect	text45
 11940  0FBB                     __ptext45:	
 11941 ;; *************** function ___awmod *****************
 11942 ;; Defined at:
 11943 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 11944 ;; Parameters:    Size  Location     Type
 11945 ;;  divisor         2   10[BANK0 ] int 
 11946 ;;  dividend        2   12[BANK0 ] int 
 11947 ;; Auto vars:     Size  Location     Type
 11948 ;;  sign            1   11[COMMON] unsigned char 
 11949 ;;  counter         1   10[COMMON] unsigned char 
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  2   10[BANK0 ] int 
 11952 ;; Registers used:
 11953 ;;		wreg, status,2, status,0
 11954 ;; Tracked objects:
 11955 ;;		On entry : 3F/0
 11956 ;;		On exit  : 3F/0
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11959 ;;      Params:         0       4       0       0       0       0       0       0
 11960 ;;      Locals:         2       0       0       0       0       0       0       0
 11961 ;;      Temps:          1       0       0       0       0       0       0       0
 11962 ;;      Totals:         3       4       0       0       0       0       0       0
 11963 ;;Total ram usage:        7 bytes
 11964 ;; Hardware stack levels used: 1
 11965 ;; Hardware stack levels required when called: 4
 11966 ;; This function calls:
 11967 ;;		Nothing
 11968 ;; This function is called by:
 11969 ;;		_RandomNum
 11970 ;; This function uses a non-reentrant model
 11971 ;;
 11972                           
 11973                           
 11974                           ;psect for function ___awmod
 11975  0FBB                     ___awmod:
 11976                           
 11977                           ;incstack = 0
 11978                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11979  0FBB  01FB               	clrf	___awmod@sign
 11980  0FBC  1FE0               	btfss	___awmod@dividend+1,7
 11981  0FBD  2FC5               	goto	l5330
 11982  0FBE  09DF               	comf	___awmod@dividend,f
 11983  0FBF  09E0               	comf	___awmod@dividend+1,f
 11984  0FC0  0ADF               	incf	___awmod@dividend,f
 11985  0FC1  1903               	skipnz
 11986  0FC2  0AE0               	incf	___awmod@dividend+1,f
 11987  0FC3  01FB               	clrf	___awmod@sign
 11988  0FC4  0AFB               	incf	___awmod@sign,f
 11989  0FC5                     l5330:
 11990  0FC5  1FDE               	btfss	___awmod@divisor+1,7
 11991  0FC6  2FCC               	goto	l5334
 11992  0FC7  09DD               	comf	___awmod@divisor,f
 11993  0FC8  09DE               	comf	___awmod@divisor+1,f
 11994  0FC9  0ADD               	incf	___awmod@divisor,f
 11995  0FCA  1903               	skipnz
 11996  0FCB  0ADE               	incf	___awmod@divisor+1,f
 11997  0FCC                     l5334:
 11998  0FCC  085D               	movf	___awmod@divisor,w
 11999  0FCD  045E               	iorwf	___awmod@divisor+1,w
 12000  0FCE  1903               	btfsc	3,2
 12001  0FCF  2FF3               	goto	l5352
 12002  0FD0  01FA               	clrf	___awmod@counter
 12003  0FD1  0AFA               	incf	___awmod@counter,f
 12004  0FD2                     l5342:
 12005  0FD2  1BDE               	btfsc	___awmod@divisor+1,7
 12006  0FD3  2FDE               	goto	l5344
 12007  0FD4  3001               	movlw	1
 12008  0FD5                     u3595:
 12009  0FD5  35DD               	lslf	___awmod@divisor,f
 12010  0FD6  0DDE               	rlf	___awmod@divisor+1,f
 12011  0FD7  0B89               	decfsz	9,f
 12012  0FD8  2FD5               	goto	u3595
 12013  0FD9  3001               	movlw	1
 12014  0FDA  00F9               	movwf	??___awmod
 12015  0FDB  0879               	movf	??___awmod,w
 12016  0FDC  07FA               	addwf	___awmod@counter,f
 12017  0FDD  2FD2               	goto	l5342
 12018  0FDE                     l5344:
 12019  0FDE  085E               	movf	___awmod@divisor+1,w
 12020  0FDF  0260               	subwf	___awmod@dividend+1,w
 12021  0FE0  1D03               	skipz
 12022  0FE1  2FE4               	goto	u3615
 12023  0FE2  085D               	movf	___awmod@divisor,w
 12024  0FE3  025F               	subwf	___awmod@dividend,w
 12025  0FE4                     u3615:
 12026  0FE4  1C03               	skipc
 12027  0FE5  2FEA               	goto	l5348
 12028  0FE6  085D               	movf	___awmod@divisor,w
 12029  0FE7  02DF               	subwf	___awmod@dividend,f
 12030  0FE8  085E               	movf	___awmod@divisor+1,w
 12031  0FE9  3BE0               	subwfb	___awmod@dividend+1,f
 12032  0FEA                     l5348:
 12033  0FEA  3001               	movlw	1
 12034  0FEB                     u3625:
 12035  0FEB  36DE               	lsrf	___awmod@divisor+1,f
 12036  0FEC  0CDD               	rrf	___awmod@divisor,f
 12037  0FED  0B89               	decfsz	9,f
 12038  0FEE  2FEB               	goto	u3625
 12039  0FEF  3001               	movlw	1
 12040  0FF0  02FA               	subwf	___awmod@counter,f
 12041  0FF1  1D03               	btfss	3,2
 12042  0FF2  2FDE               	goto	l5344
 12043  0FF3                     l5352:
 12044  0FF3  087B               	movf	___awmod@sign,w
 12045  0FF4  1903               	btfsc	3,2
 12046  0FF5  2FFB               	goto	l5356
 12047  0FF6  09DF               	comf	___awmod@dividend,f
 12048  0FF7  09E0               	comf	___awmod@dividend+1,f
 12049  0FF8  0ADF               	incf	___awmod@dividend,f
 12050  0FF9  1903               	skipnz
 12051  0FFA  0AE0               	incf	___awmod@dividend+1,f
 12052  0FFB                     l5356:
 12053  0FFB  0860               	movf	___awmod@dividend+1,w
 12054  0FFC  00DE               	movwf	?___awmod+1
 12055  0FFD  085F               	movf	___awmod@dividend,w
 12056  0FFE  00DD               	movwf	?___awmod
 12057  0FFF  0008               	return
 12058  1000                     __end_of___awmod:
 12059                           
 12060                           	psect	text46
 12061  0DE2                     __ptext46:	
 12062 ;; *************** function _TMR0_ReadTimer *****************
 12063 ;; Defined at:
 12064 ;;		line 100 in file "mcc_generated_files/tmr0.c"
 12065 ;; Parameters:    Size  Location     Type
 12066 ;;		None
 12067 ;; Auto vars:     Size  Location     Type
 12068 ;;  readVal         2    8[COMMON] unsigned short 
 12069 ;;  readValHigh     1   11[COMMON] unsigned char 
 12070 ;;  readValLow      1   10[COMMON] unsigned char 
 12071 ;; Return value:  Size  Location     Type
 12072 ;;                  2    1[COMMON] unsigned short 
 12073 ;; Registers used:
 12074 ;;		wreg, status,2, status,0
 12075 ;; Tracked objects:
 12076 ;;		On entry : 3F/0
 12077 ;;		On exit  : 3F/B
 12078 ;;		Unchanged: 0/0
 12079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12080 ;;      Params:         2       0       0       0       0       0       0       0
 12081 ;;      Locals:         4       0       0       0       0       0       0       0
 12082 ;;      Temps:          5       0       0       0       0       0       0       0
 12083 ;;      Totals:        11       0       0       0       0       0       0       0
 12084 ;;Total ram usage:       11 bytes
 12085 ;; Hardware stack levels used: 1
 12086 ;; Hardware stack levels required when called: 4
 12087 ;; This function calls:
 12088 ;;		Nothing
 12089 ;; This function is called by:
 12090 ;;		_RandomNum
 12091 ;; This function uses a non-reentrant model
 12092 ;;
 12093                           
 12094                           
 12095                           ;psect for function _TMR0_ReadTimer
 12096  0DE2                     _TMR0_ReadTimer:
 12097                           
 12098                           ;mcc_generated_files/tmr0.c: 102:     uint16_t readVal;;mcc_generated_files/tmr0.c: 103:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 104:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 106:     readValLow = TMR0L;
 12099                           
 12100                           ;incstack = 0
 12101                           ; Regs used in _TMR0_ReadTimer: [wreg+status,2+status,0]
 12102  0DE2  014B               	movlb	11	; select bank11
 12103  0DE3  081C               	movf	28,w	;volatile
 12104  0DE4  00F3               	movwf	??_TMR0_ReadTimer
 12105  0DE5  0873               	movf	??_TMR0_ReadTimer,w
 12106  0DE6  00FA               	movwf	TMR0_ReadTimer@readValLow
 12107                           
 12108                           ;mcc_generated_files/tmr0.c: 107:     readValHigh = TMR0H;
 12109  0DE7  081D               	movf	29,w	;volatile
 12110  0DE8  00F3               	movwf	??_TMR0_ReadTimer
 12111  0DE9  0873               	movf	??_TMR0_ReadTimer,w
 12112  0DEA  00FB               	movwf	TMR0_ReadTimer@readValHigh
 12113                           
 12114                           ;mcc_generated_files/tmr0.c: 108:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 12115  0DEB  087A               	movf	TMR0_ReadTimer@readValLow,w
 12116  0DEC  00F3               	movwf	??_TMR0_ReadTimer
 12117  0DED  01F4               	clrf	??_TMR0_ReadTimer+1
 12118  0DEE  087B               	movf	TMR0_ReadTimer@readValHigh,w
 12119  0DEF  00F5               	movwf	??_TMR0_ReadTimer+2
 12120  0DF0  01F6               	clrf	??_TMR0_ReadTimer+3
 12121  0DF1  0875               	movf	??_TMR0_ReadTimer+2,w
 12122  0DF2  00F6               	movwf	??_TMR0_ReadTimer+3
 12123  0DF3  01F5               	clrf	??_TMR0_ReadTimer+2
 12124  0DF4  0873               	movf	??_TMR0_ReadTimer,w
 12125  0DF5  0775               	addwf	??_TMR0_ReadTimer+2,w
 12126  0DF6  00F8               	movwf	TMR0_ReadTimer@readVal
 12127  0DF7  0874               	movf	??_TMR0_ReadTimer+1,w
 12128  0DF8  3D76               	addwfc	??_TMR0_ReadTimer+3,w
 12129  0DF9  00F9               	movwf	TMR0_ReadTimer@readVal+1
 12130                           
 12131                           ;mcc_generated_files/tmr0.c: 110:     return readVal;
 12132  0DFA  0879               	movf	TMR0_ReadTimer@readVal+1,w
 12133  0DFB  00F2               	movwf	?_TMR0_ReadTimer+1
 12134  0DFC  0878               	movf	TMR0_ReadTimer@readVal,w
 12135  0DFD  00F1               	movwf	?_TMR0_ReadTimer
 12136  0DFE  0008               	return
 12137  0DFF                     __end_of_TMR0_ReadTimer:
 12138                           
 12139                           	psect	text47
 12140  0751                     __ptext47:	
 12141 ;; *************** function _Pulse *****************
 12142 ;; Defined at:
 12143 ;;		line 57 in file "Subroutines.c"
 12144 ;; Parameters:    Size  Location     Type
 12145 ;;		None
 12146 ;; Auto vars:     Size  Location     Type
 12147 ;;		None
 12148 ;; Return value:  Size  Location     Type
 12149 ;;                  1    wreg      void 
 12150 ;; Registers used:
 12151 ;;		wreg, status,2, status,0, pclath, cstack
 12152 ;; Tracked objects:
 12153 ;;		On entry : 3F/0
 12154 ;;		On exit  : 3F/7
 12155 ;;		Unchanged: 0/0
 12156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12157 ;;      Params:         0       0       0       0       0       0       0       0
 12158 ;;      Locals:         0       0       0       0       0       0       0       0
 12159 ;;      Temps:          0       1       0       0       0       0       0       0
 12160 ;;      Totals:         0       1       0       0       0       0       0       0
 12161 ;;Total ram usage:        1 bytes
 12162 ;; Hardware stack levels used: 1
 12163 ;; Hardware stack levels required when called: 5
 12164 ;; This function calls:
 12165 ;;		_PWM6_LoadDutyValue
 12166 ;; This function is called by:
 12167 ;;		_RandomWL
 12168 ;;		_FixedWL
 12169 ;; This function uses a non-reentrant model
 12170 ;;
 12171                           
 12172                           
 12173                           ;psect for function _Pulse
 12174  0751                     _Pulse:
 12175                           
 12176                           ;Subroutines.c: 59:     PWM6_LoadDutyValue(519);
 12177                           
 12178                           ;incstack = 0
 12179                           ; Regs used in _Pulse: [wreg+status,2+status,0+pclath+cstack]
 12180  0751  3007               	movlw	7
 12181  0752  00D7               	movwf	PWM6_LoadDutyValue@dutyValue
 12182  0753  3002               	movlw	2
 12183  0754  00D8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12184  0755  318D  2561  3187   	fcall	_PWM6_LoadDutyValue
 12185                           
 12186                           ;Subroutines.c: 60:     _delay(104000);
 12187  0758  3088               	movlw	136
 12188  0759  0140               	movlb	0	; select bank0
 12189  075A  00DB               	movwf	??_Pulse
 12190  075B  300F               	movlw	15
 12191  075C                     u4737:
 12192  075C  0B89               	decfsz	9,f
 12193  075D  2F5C               	goto	u4737
 12194  075E  0BDB               	decfsz	??_Pulse,f
 12195  075F  2F5C               	goto	u4737
 12196                           
 12197                           ;Subroutines.c: 61:     PWM6_LoadDutyValue(415);
 12198  0760  309F               	movlw	159
 12199  0761  0140               	movlb	0	; select bank0
 12200  0762  00D7               	movwf	PWM6_LoadDutyValue@dutyValue
 12201  0763  3001               	movlw	1
 12202  0764  00D8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12203  0765  318D  2561  3187   	fcall	_PWM6_LoadDutyValue
 12204                           
 12205                           ;Subroutines.c: 62:     _delay(26000);
 12206  0768  3022               	movlw	34
 12207  0769  0140               	movlb	0	; select bank0
 12208  076A  00DB               	movwf	??_Pulse
 12209  076B  30C3               	movlw	195
 12210  076C                     u4747:
 12211  076C  0B89               	decfsz	9,f
 12212  076D  2F6C               	goto	u4747
 12213  076E  0BDB               	decfsz	??_Pulse,f
 12214  076F  2F6C               	goto	u4747
 12215                           
 12216                           ;Subroutines.c: 63:     PWM6_LoadDutyValue(363);
 12217  0770  306B               	movlw	107
 12218  0771  0140               	movlb	0	; select bank0
 12219  0772  00D7               	movwf	PWM6_LoadDutyValue@dutyValue
 12220  0773  3001               	movlw	1
 12221  0774  00D8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12222  0775  318D  2561  3187   	fcall	_PWM6_LoadDutyValue
 12223                           
 12224                           ;Subroutines.c: 64:     _delay(21000);
 12225  0778  301C               	movlw	28
 12226  0779  0140               	movlb	0	; select bank0
 12227  077A  00DB               	movwf	??_Pulse
 12228  077B  3044               	movlw	68
 12229  077C                     u4757:
 12230  077C  0B89               	decfsz	9,f
 12231  077D  2F7C               	goto	u4757
 12232  077E  0BDB               	decfsz	??_Pulse,f
 12233  077F  2F7C               	goto	u4757
 12234  0780  0000               	nop
 12235                           
 12236                           ;Subroutines.c: 65:     PWM6_LoadDutyValue(311);
 12237  0781  3037               	movlw	55
 12238  0782  0140               	movlb	0	; select bank0
 12239  0783  00D7               	movwf	PWM6_LoadDutyValue@dutyValue
 12240  0784  3001               	movlw	1
 12241  0785  00D8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12242  0786  318D  2561  3187   	fcall	_PWM6_LoadDutyValue
 12243                           
 12244                           ;Subroutines.c: 66:     _delay(16000);
 12245  0789  3015               	movlw	21
 12246  078A  0140               	movlb	0	; select bank0
 12247  078B  00DB               	movwf	??_Pulse
 12248  078C  30C6               	movlw	198
 12249  078D                     u4767:
 12250  078D  0B89               	decfsz	9,f
 12251  078E  2F8D               	goto	u4767
 12252  078F  0BDB               	decfsz	??_Pulse,f
 12253  0790  2F8D               	goto	u4767
 12254  0791  0000               	nop
 12255                           
 12256                           ;Subroutines.c: 67:     PWM6_LoadDutyValue(207);
 12257  0792  30CF               	movlw	207
 12258  0793  0140               	movlb	0	; select bank0
 12259  0794  00D7               	movwf	PWM6_LoadDutyValue@dutyValue
 12260  0795  3000               	movlw	0
 12261  0796  00D8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12262  0797  318D  2561         	fcall	_PWM6_LoadDutyValue
 12263  0799  0008               	return
 12264  079A                     __end_of_Pulse:
 12265                           
 12266                           	psect	text48
 12267  0D61                     __ptext48:	
 12268 ;; *************** function _PWM6_LoadDutyValue *****************
 12269 ;; Defined at:
 12270 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 12271 ;; Parameters:    Size  Location     Type
 12272 ;;  dutyValue       2    4[BANK0 ] unsigned short 
 12273 ;; Auto vars:     Size  Location     Type
 12274 ;;		None
 12275 ;; Return value:  Size  Location     Type
 12276 ;;                  1    wreg      void 
 12277 ;; Registers used:
 12278 ;;		wreg, status,2, status,0
 12279 ;; Tracked objects:
 12280 ;;		On entry : 3F/0
 12281 ;;		On exit  : 3F/7
 12282 ;;		Unchanged: 0/0
 12283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12284 ;;      Params:         0       2       0       0       0       0       0       0
 12285 ;;      Locals:         0       0       0       0       0       0       0       0
 12286 ;;      Temps:          0       2       0       0       0       0       0       0
 12287 ;;      Totals:         0       4       0       0       0       0       0       0
 12288 ;;Total ram usage:        4 bytes
 12289 ;; Hardware stack levels used: 1
 12290 ;; Hardware stack levels required when called: 4
 12291 ;; This function calls:
 12292 ;;		Nothing
 12293 ;; This function is called by:
 12294 ;;		_TubesOn
 12295 ;;		_Pulse
 12296 ;;		_OtherSetInc
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300                           
 12301                           ;psect for function _PWM6_LoadDutyValue
 12302  0D61                     _PWM6_LoadDutyValue:
 12303                           
 12304                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12305                           
 12306                           ;incstack = 0
 12307                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12308  0D61  0858               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 12309  0D62  00DA               	movwf	??_PWM6_LoadDutyValue+1
 12310  0D63  0857               	movf	PWM6_LoadDutyValue@dutyValue,w
 12311  0D64  00D9               	movwf	??_PWM6_LoadDutyValue
 12312  0D65  36DA               	lsrf	??_PWM6_LoadDutyValue+1,f
 12313  0D66  0CD9               	rrf	??_PWM6_LoadDutyValue,f
 12314  0D67  36DA               	lsrf	??_PWM6_LoadDutyValue+1,f
 12315  0D68  0CD9               	rrf	??_PWM6_LoadDutyValue,f
 12316  0D69  0859               	movf	??_PWM6_LoadDutyValue,w
 12317  0D6A  0147               	movlb	7	; select bank7
 12318  0D6B  008D               	movwf	13	;volatile
 12319                           
 12320                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 12321  0D6C  0140               	movlb	0	; select bank0
 12322  0D6D  0857               	movf	PWM6_LoadDutyValue@dutyValue,w
 12323  0D6E  3903               	andlw	3
 12324  0D6F  00D9               	movwf	??_PWM6_LoadDutyValue
 12325  0D70  3005               	movlw	5
 12326  0D71                     u3275:
 12327  0D71  35D9               	lslf	??_PWM6_LoadDutyValue,f
 12328  0D72  3EFF               	addlw	-1
 12329  0D73  1D03               	skipz
 12330  0D74  2D71               	goto	u3275
 12331  0D75  3559               	lslf	??_PWM6_LoadDutyValue,w
 12332  0D76  0147               	movlb	7	; select bank7
 12333  0D77  008C               	movwf	12	;volatile
 12334  0D78  0008               	return
 12335  0D79                     __end_of_PWM6_LoadDutyValue:
 12336                           
 12337                           	psect	text49
 12338  0F0F                     __ptext49:	
 12339 ;; *************** function _Loader *****************
 12340 ;; Defined at:
 12341 ;;		line 202 in file "Subroutines.c"
 12342 ;; Parameters:    Size  Location     Type
 12343 ;;		None
 12344 ;; Auto vars:     Size  Location     Type
 12345 ;;  shftregpln     12    0[BANK0 ] unsigned char [12]
 12346 ;;  regp            1   12[BANK0 ] unsigned char 
 12347 ;; Return value:  Size  Location     Type
 12348 ;;                  1    wreg      void 
 12349 ;; Registers used:
 12350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12351 ;; Tracked objects:
 12352 ;;		On entry : 38/0
 12353 ;;		On exit  : 3F/0
 12354 ;;		Unchanged: 0/0
 12355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12356 ;;      Params:         0       0       0       0       0       0       0       0
 12357 ;;      Locals:         0      13       0       0       0       0       0       0
 12358 ;;      Temps:          1       0       0       0       0       0       0       0
 12359 ;;      Totals:         1      13       0       0       0       0       0       0
 12360 ;;Total ram usage:       14 bytes
 12361 ;; Hardware stack levels used: 1
 12362 ;; Hardware stack levels required when called: 4
 12363 ;; This function calls:
 12364 ;;		Nothing
 12365 ;; This function is called by:
 12366 ;;		_Startup
 12367 ;;		_main
 12368 ;;		_DateDisplay
 12369 ;;		_DMDisplay
 12370 ;;		_Settings
 12371 ;;		_TubeValuePicker
 12372 ;;		_RandomWL
 12373 ;;		_FixedWL
 12374 ;;		_BCDSetInc
 12375 ;;		_OtherSetInc
 12376 ;;		_I2CFail
 12377 ;; This function uses a non-reentrant model
 12378 ;;
 12379                           
 12380                           
 12381                           ;psect for function _Loader
 12382  0F0F                     _Loader:
 12383                           
 12384                           ;Subroutines.c: 204:     char regp;;Subroutines.c: 205:     char shftregpln[12] = {0x4C,
      +                          1,2,3,4,5,6,7,8,9,0,0x52};
 12385                           
 12386                           ;incstack = 0
 12387                           ; Regs used in _Loader: [wreg-fsr1h+status,2+status,0]
 12388  0F0F  30BD               	movlw	low Loader@F11221
 12389  0F10  0086               	movwf	6
 12390  0F11  3000               	movlw	high Loader@F11221
 12391  0F12  0087               	movwf	7
 12392  0F13  3053               	movlw	low Loader@shftregpln
 12393  0F14  0084               	movwf	4
 12394  0F15  3000               	movlw	high Loader@shftregpln
 12395  0F16  0085               	movwf	5
 12396  0F17  300C               	movlw	12
 12397  0F18  00F1               	movwf	??_Loader
 12398  0F19                     u3170:
 12399  0F19  0016               	moviw fsr1++
 12400  0F1A  001A               	movwi fsr0++
 12401  0F1B  0BF1               	decfsz	??_Loader,f
 12402  0F1C  2F19               	goto	u3170
 12403                           
 12404                           ;Subroutines.c: 207:     for (Pos=0; Pos<8; Pos++)
 12405  0F1D  0140               	movlb	0	; select bank0
 12406  0F1E  01CB               	clrf	_Pos
 12407  0F1F                     l5074:
 12408  0F1F  3008               	movlw	8
 12409  0F20  024B               	subwf	_Pos,w
 12410  0F21  1803               	btfsc	3,0
 12411  0F22  2F42               	goto	l851
 12412                           
 12413                           ;Subroutines.c: 208:     {;Subroutines.c: 209:         for (regp=0; regp<13; regp++)
 12414  0F23  01DF               	clrf	Loader@regp
 12415  0F24                     l5084:
 12416                           
 12417                           ;Subroutines.c: 210:         {;Subroutines.c: 211:             if (shftregpln[regp] == D
      +                          isplayBuf[Pos])
 12418  0F24  084B               	movf	_Pos,w
 12419  0F25  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 12420  0F26  0086               	movwf	6
 12421  0F27  0187               	clrf	7
 12422  0F28  085F               	movf	Loader@regp,w
 12423  0F29  3E53               	addlw	(low (Loader@shftregpln| 0))& (0+255)
 12424  0F2A  0084               	movwf	4
 12425  0F2B  0185               	clrf	5
 12426  0F2C  0800               	movf	0,w
 12427  0F2D  0601               	xorwf	1,w
 12428  0F2E  1D03               	skipz
 12429  0F2F  2F32               	goto	l854
 12430                           
 12431                           ;Subroutines.c: 212:             {;Subroutines.c: 213:                 LATCbits.LATC5 = 
      +                          1;
 12432  0F30  169A               	bsf	26,5	;volatile
 12433  0F31  2F33               	goto	L9
 12434  0F32                     l854:	
 12435                           ;Subroutines.c: 217:             else
 12436                           
 12437                           ;Subroutines.c: 216:             }
 12438                           
 12439                           ;Subroutines.c: 215:                 LATCbits.LATC3 = 0;
 12440                           
 12441                           ;Subroutines.c: 214:                 LATCbits.LATC3 = 1;
 12442                           
 12443                           
 12444                           ;Subroutines.c: 218:             {;Subroutines.c: 219:                 LATCbits.LATC5 = 
      +                          0;
 12445  0F32  129A               	bcf	26,5	;volatile
 12446  0F33                     L9:
 12447                           
 12448                           ;Subroutines.c: 220:                 LATCbits.LATC3 = 1;
 12449  0F33  159A               	bsf	26,3	;volatile
 12450                           
 12451                           ;Subroutines.c: 221:                 LATCbits.LATC3 = 0;
 12452  0F34  119A               	bcf	26,3	;volatile
 12453                           
 12454                           ;Subroutines.c: 223:         }
 12455  0F35  3001               	movlw	1
 12456  0F36  00F1               	movwf	??_Loader
 12457  0F37  0871               	movf	??_Loader,w
 12458  0F38  07DF               	addwf	Loader@regp,f
 12459  0F39  300D               	movlw	13
 12460  0F3A  025F               	subwf	Loader@regp,w
 12461  0F3B  1C03               	skipc
 12462  0F3C  2F24               	goto	l5084
 12463                           
 12464                           ;Subroutines.c: 224:     }
 12465  0F3D  3001               	movlw	1
 12466  0F3E  00F1               	movwf	??_Loader
 12467  0F3F  0871               	movf	??_Loader,w
 12468  0F40  07CB               	addwf	_Pos,f
 12469  0F41  2F1F               	goto	l5074
 12470  0F42                     l851:
 12471                           
 12472                           ;Subroutines.c: 225:     LATCbits.LATC6 = 1;
 12473  0F42  171A               	bsf	26,6	;volatile
 12474                           
 12475                           ;Subroutines.c: 226:     LATCbits.LATC6 = 0;
 12476  0F43  131A               	bcf	26,6	;volatile
 12477  0F44  0008               	return
 12478  0F45                     __end_of_Loader:
 12479                           
 12480                           	psect	text50
 12481  0CC1                     __ptext50:	
 12482 ;; *************** function _EmptyTubes *****************
 12483 ;; Defined at:
 12484 ;;		line 25 in file "Subroutines.c"
 12485 ;; Parameters:    Size  Location     Type
 12486 ;;		None
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;		None
 12489 ;; Return value:  Size  Location     Type
 12490 ;;                  1    wreg      void 
 12491 ;; Registers used:
 12492 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12493 ;; Tracked objects:
 12494 ;;		On entry : 0/3
 12495 ;;		On exit  : 3F/0
 12496 ;;		Unchanged: 0/0
 12497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12498 ;;      Params:         0       0       0       0       0       0       0       0
 12499 ;;      Locals:         0       0       0       0       0       0       0       0
 12500 ;;      Temps:          1       0       0       0       0       0       0       0
 12501 ;;      Totals:         1       0       0       0       0       0       0       0
 12502 ;;Total ram usage:        1 bytes
 12503 ;; Hardware stack levels used: 1
 12504 ;; Hardware stack levels required when called: 4
 12505 ;; This function calls:
 12506 ;;		Nothing
 12507 ;; This function is called by:
 12508 ;;		_Startup
 12509 ;;		_DMDisplay
 12510 ;;		_Settings
 12511 ;;		_I2CFail
 12512 ;; This function uses a non-reentrant model
 12513 ;;
 12514                           
 12515                           
 12516                           ;psect for function _EmptyTubes
 12517  0CC1                     _EmptyTubes:
 12518                           
 12519                           ;Subroutines.c: 27:     for (Pos=8; Pos--;)
 12520                           
 12521                           ;incstack = 0
 12522                           ; Regs used in _EmptyTubes: [wreg+fsr1l+fsr1h+status,2+status,0]
 12523  0CC1  3008               	movlw	8
 12524  0CC2  00F1               	movwf	??_EmptyTubes
 12525  0CC3  0871               	movf	??_EmptyTubes,w
 12526  0CC4  0140               	movlb	0	; select bank0
 12527  0CC5  00CB               	movwf	_Pos
 12528  0CC6                     l5068:
 12529  0CC6  3001               	movlw	1
 12530  0CC7  02CB               	subwf	_Pos,f
 12531  0CC8  0A4B               	incf	_Pos,w
 12532  0CC9  1903               	btfsc	3,2
 12533  0CCA  0008               	return
 12534                           
 12535                           ;Subroutines.c: 28:     {;Subroutines.c: 29:         DisplayBuf[Pos] = 10;
 12536  0CCB  300A               	movlw	10
 12537  0CCC  00F1               	movwf	??_EmptyTubes
 12538  0CCD  084B               	movf	_Pos,w
 12539  0CCE  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 12540  0CCF  0086               	movwf	6
 12541  0CD0  0187               	clrf	7
 12542  0CD1  0871               	movf	??_EmptyTubes,w
 12543  0CD2  0081               	movwf	1
 12544  0CD3  2CC6               	goto	l5068
 12545  0CD4                     __end_of_EmptyTubes:
 12546                           
 12547                           	psect	text51
 12548  0D91                     __ptext51:	
 12549 ;; *************** function _EEPROMBufferFill *****************
 12550 ;; Defined at:
 12551 ;;		line 33 in file "Subroutines.c"
 12552 ;; Parameters:    Size  Location     Type
 12553 ;;  addr            1    wreg     unsigned char 
 12554 ;; Auto vars:     Size  Location     Type
 12555 ;;  addr            1    3[COMMON] unsigned char 
 12556 ;; Return value:  Size  Location     Type
 12557 ;;                  1    wreg      void 
 12558 ;; Registers used:
 12559 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12560 ;; Tracked objects:
 12561 ;;		On entry : 0/0
 12562 ;;		On exit  : 3F/0
 12563 ;;		Unchanged: 0/0
 12564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12565 ;;      Params:         0       0       0       0       0       0       0       0
 12566 ;;      Locals:         1       0       0       0       0       0       0       0
 12567 ;;      Temps:          1       0       0       0       0       0       0       0
 12568 ;;      Totals:         2       0       0       0       0       0       0       0
 12569 ;;Total ram usage:        2 bytes
 12570 ;; Hardware stack levels used: 1
 12571 ;; Hardware stack levels required when called: 5
 12572 ;; This function calls:
 12573 ;;		_EEPROM_Read
 12574 ;; This function is called by:
 12575 ;;		_DMDisplay
 12576 ;; This function uses a non-reentrant model
 12577 ;;
 12578                           
 12579                           
 12580                           ;psect for function _EEPROMBufferFill
 12581  0D91                     _EEPROMBufferFill:
 12582                           
 12583                           ;incstack = 0
 12584                           ; Regs used in _EEPROMBufferFill: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12585                           ;EEPROMBufferFill@addr stored from wreg
 12586  0D91  00F3               	movwf	EEPROMBufferFill@addr
 12587                           
 12588                           ;Subroutines.c: 33: void EEPROMBufferFill(uint8_t addr);Subroutines.c: 34: {;Subroutines
      +                          .c: 35:     for (Pos=8; Pos--;)
 12589  0D92  3008               	movlw	8
 12590  0D93  00F2               	movwf	??_EEPROMBufferFill
 12591  0D94  0872               	movf	??_EEPROMBufferFill,w
 12592  0D95  0140               	movlb	0	; select bank0
 12593  0D96  00CB               	movwf	_Pos
 12594  0D97                     l4678:
 12595  0D97  3001               	movlw	1
 12596  0D98  02CB               	subwf	_Pos,f
 12597  0D99  0A4B               	incf	_Pos,w
 12598  0D9A  1903               	btfsc	3,2
 12599  0D9B  0008               	return
 12600                           
 12601                           ;Subroutines.c: 36:     {;Subroutines.c: 37:         DisplayBuf[Pos] = EEPROM_Read(addr)
      +                          ;
 12602  0D9C  0873               	movf	EEPROMBufferFill@addr,w
 12603  0D9D  318C  2426  318D   	fcall	_EEPROM_Read
 12604  0DA0  00F2               	movwf	??_EEPROMBufferFill
 12605  0DA1  0140               	movlb	0	; select bank0
 12606  0DA2  084B               	movf	_Pos,w
 12607  0DA3  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 12608  0DA4  0086               	movwf	6
 12609  0DA5  0187               	clrf	7
 12610  0DA6  0872               	movf	??_EEPROMBufferFill,w
 12611  0DA7  0081               	movwf	1
 12612                           
 12613                           ;Subroutines.c: 38:         addr--;
 12614  0DA8  3001               	movlw	1
 12615  0DA9  02F3               	subwf	EEPROMBufferFill@addr,f
 12616  0DAA  2D97               	goto	l4678
 12617  0DAB                     __end_of_EEPROMBufferFill:
 12618                           
 12619                           	psect	text52
 12620  0C26                     __ptext52:	
 12621 ;; *************** function _EEPROM_Read *****************
 12622 ;; Defined at:
 12623 ;;		line 349 in file "Subroutines.c"
 12624 ;; Parameters:    Size  Location     Type
 12625 ;;  addr            1    wreg     unsigned char 
 12626 ;; Auto vars:     Size  Location     Type
 12627 ;;  addr            1    1[COMMON] unsigned char 
 12628 ;; Return value:  Size  Location     Type
 12629 ;;                  1    wreg      unsigned char 
 12630 ;; Registers used:
 12631 ;;		wreg
 12632 ;; Tracked objects:
 12633 ;;		On entry : 0/0
 12634 ;;		On exit  : 3F/10
 12635 ;;		Unchanged: 0/0
 12636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12637 ;;      Params:         0       0       0       0       0       0       0       0
 12638 ;;      Locals:         1       0       0       0       0       0       0       0
 12639 ;;      Temps:          0       0       0       0       0       0       0       0
 12640 ;;      Totals:         1       0       0       0       0       0       0       0
 12641 ;;Total ram usage:        1 bytes
 12642 ;; Hardware stack levels used: 1
 12643 ;; Hardware stack levels required when called: 4
 12644 ;; This function calls:
 12645 ;;		Nothing
 12646 ;; This function is called by:
 12647 ;;		_EEPROMBufferFill
 12648 ;; This function uses a non-reentrant model
 12649 ;;
 12650                           
 12651                           
 12652                           ;psect for function _EEPROM_Read
 12653  0C26                     _EEPROM_Read:
 12654                           
 12655                           ;incstack = 0
 12656                           ; Regs used in _EEPROM_Read: [wreg]
 12657                           ;EEPROM_Read@addr stored from wreg
 12658  0C26  00F1               	movwf	EEPROM_Read@addr
 12659                           
 12660                           ;Subroutines.c: 349: uint8_t EEPROM_Read(uint8_t addr);Subroutines.c: 350: {;Subroutines
      +                          .c: 351:     NVMCON1bits.NVMREGS = 1;
 12661  0C27  0150               	movlb	16	; select bank16
 12662  0C28  171E               	bsf	30,6	;volsfr
 12663                           
 12664                           ;Subroutines.c: 352:     NVMADRL = (addr) & 0xFFu;
 12665  0C29  0871               	movf	EEPROM_Read@addr,w
 12666  0C2A  009A               	movwf	26	;volatile
 12667                           
 12668                           ;Subroutines.c: 353:     NVMADRH = 0x70;
 12669  0C2B  3070               	movlw	112
 12670  0C2C  009B               	movwf	27	;volatile
 12671                           
 12672                           ;Subroutines.c: 354:     NVMCON1bits.RD = 1;
 12673  0C2D  141E               	bsf	30,0	;volsfr
 12674                           
 12675                           ;Subroutines.c: 355:     return NVMDATL;
 12676  0C2E  081C               	movf	28,w	;volatile
 12677  0C2F  0008               	return
 12678  0C30                     __end_of_EEPROM_Read:
 12679                           
 12680                           	psect	text53
 12681  0D35                     __ptext53:	
 12682 ;; *************** function _DisplayBufSave *****************
 12683 ;; Defined at:
 12684 ;;		line 17 in file "Subroutines.c"
 12685 ;; Parameters:    Size  Location     Type
 12686 ;;		None
 12687 ;; Auto vars:     Size  Location     Type
 12688 ;;		None
 12689 ;; Return value:  Size  Location     Type
 12690 ;;                  1    wreg      void 
 12691 ;; Registers used:
 12692 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12693 ;; Tracked objects:
 12694 ;;		On entry : 3F/0
 12695 ;;		On exit  : 3F/0
 12696 ;;		Unchanged: 0/0
 12697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12698 ;;      Params:         0       0       0       0       0       0       0       0
 12699 ;;      Locals:         0       0       0       0       0       0       0       0
 12700 ;;      Temps:          1       0       0       0       0       0       0       0
 12701 ;;      Totals:         1       0       0       0       0       0       0       0
 12702 ;;Total ram usage:        1 bytes
 12703 ;; Hardware stack levels used: 1
 12704 ;; Hardware stack levels required when called: 4
 12705 ;; This function calls:
 12706 ;;		Nothing
 12707 ;; This function is called by:
 12708 ;;		_main
 12709 ;;		_DMDisplay
 12710 ;; This function uses a non-reentrant model
 12711 ;;
 12712                           
 12713                           
 12714                           ;psect for function _DisplayBufSave
 12715  0D35                     _DisplayBufSave:
 12716                           
 12717                           ;Subroutines.c: 19:     for (Pos=8; Pos--;)
 12718                           
 12719                           ;incstack = 0
 12720                           ; Regs used in _DisplayBufSave: [wreg+fsr1l+fsr1h+status,2+status,0]
 12721  0D35  3008               	movlw	8
 12722  0D36  00F1               	movwf	??_DisplayBufSave
 12723  0D37  0871               	movf	??_DisplayBufSave,w
 12724  0D38  00CB               	movwf	_Pos
 12725  0D39                     l4520:
 12726  0D39  3001               	movlw	1
 12727  0D3A  02CB               	subwf	_Pos,f
 12728  0D3B  0A4B               	incf	_Pos,w
 12729  0D3C  1903               	btfsc	3,2
 12730  0D3D  0008               	return
 12731                           
 12732                           ;Subroutines.c: 20:     {;Subroutines.c: 21:         DisplaySave[Pos] = DisplayBuf[Pos];
 12733  0D3E  084B               	movf	_Pos,w
 12734  0D3F  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 12735  0D40  0086               	movwf	6
 12736  0D41  0187               	clrf	7
 12737  0D42  0801               	movf	1,w
 12738  0D43  00F1               	movwf	??_DisplayBufSave
 12739  0D44  084B               	movf	_Pos,w
 12740  0D45  3E20               	addlw	(low (_DisplaySave| 0))& (0+255)
 12741  0D46  0086               	movwf	6
 12742  0D47  0187               	clrf	7
 12743  0D48  0871               	movf	??_DisplayBufSave,w
 12744  0D49  0081               	movwf	1
 12745  0D4A  2D39               	goto	l4520
 12746  0D4B                     __end_of_DisplayBufSave:
 12747                           
 12748                           	psect	intentry
 12749  0004                     __pintentry:	
 12750 ;; *************** function _INTERRUPT_InterruptManager *****************
 12751 ;; Defined at:
 12752 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12753 ;; Parameters:    Size  Location     Type
 12754 ;;		None
 12755 ;; Auto vars:     Size  Location     Type
 12756 ;;		None
 12757 ;; Return value:  Size  Location     Type
 12758 ;;                  1    wreg      void 
 12759 ;; Registers used:
 12760 ;;		wreg, status,2, status,0, pclath, cstack
 12761 ;; Tracked objects:
 12762 ;;		On entry : 0/0
 12763 ;;		On exit  : 0/0
 12764 ;;		Unchanged: 0/0
 12765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12766 ;;      Params:         0       0       0       0       0       0       0       0
 12767 ;;      Locals:         0       0       0       0       0       0       0       0
 12768 ;;      Temps:          0       0       0       0       0       0       0       0
 12769 ;;      Totals:         0       0       0       0       0       0       0       0
 12770 ;;Total ram usage:        0 bytes
 12771 ;; Hardware stack levels used: 1
 12772 ;; Hardware stack levels required when called: 3
 12773 ;; This function calls:
 12774 ;;		_PIN_MANAGER_IOC
 12775 ;;		_TMR4_ISR
 12776 ;; This function is called by:
 12777 ;;		Interrupt level 1
 12778 ;; This function uses a non-reentrant model
 12779 ;;
 12780                           
 12781  0004                     _INTERRUPT_InterruptManager:
 12782                           
 12783                           ;incstack = 0
 12784  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12785                           
 12786                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 12787  0005  3180               	pagesel	$
 12788                           
 12789                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 12790  0006  014E               	movlb	14	; select bank14
 12791  0007  1A16               	btfsc	22,4	;volatile
 12792  0008  1E0C               	btfss	12,4	;volatile
 12793  0009  280E               	goto	i1l258
 12794                           
 12795                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 12796  000A  318C  248F  3180   	fcall	_PIN_MANAGER_IOC
 12797                           
 12798                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 12799  000D  2815               	goto	i1l264
 12800  000E                     i1l258:	
 12801                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 12802                           
 12803  000E  1B0B               	btfsc	11,6	;volatile
 12804                           
 12805                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE4bits.TMR4IE == 1 && PIR4bits.TMR4IF == 1)
 12806  000F  1D9A               	btfss	26,3	;volatile
 12807  0010  2815               	goto	i1l264
 12808  0011  1D90               	btfss	16,3	;volatile
 12809  0012  2815               	goto	i1l264
 12810                           
 12811                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR4_ISR();
 12812  0013  318B  23DD         	fcall	_TMR4_ISR
 12813  0015                     i1l264:	
 12814                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
 12815                           
 12816                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 12817                           
 12818  0015  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12819  0016  0009               	retfie
 12820  0017                     __end_of_INTERRUPT_InterruptManager:
 12821                           
 12822                           	psect	text55
 12823  0BDD                     __ptext55:	
 12824 ;; *************** function _TMR4_ISR *****************
 12825 ;; Defined at:
 12826 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 12827 ;; Parameters:    Size  Location     Type
 12828 ;;		None
 12829 ;; Auto vars:     Size  Location     Type
 12830 ;;		None
 12831 ;; Return value:  Size  Location     Type
 12832 ;;                  1    wreg      void 
 12833 ;; Registers used:
 12834 ;;		wreg, status,2, status,0, pclath, cstack
 12835 ;; Tracked objects:
 12836 ;;		On entry : 3F/E
 12837 ;;		On exit  : 0/0
 12838 ;;		Unchanged: 0/0
 12839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12840 ;;      Params:         0       0       0       0       0       0       0       0
 12841 ;;      Locals:         0       0       0       0       0       0       0       0
 12842 ;;      Temps:          0       0       0       0       0       0       0       0
 12843 ;;      Totals:         0       0       0       0       0       0       0       0
 12844 ;;Total ram usage:        0 bytes
 12845 ;; Hardware stack levels used: 1
 12846 ;; Hardware stack levels required when called: 2
 12847 ;; This function calls:
 12848 ;;		_TMR4_CallBack
 12849 ;; This function is called by:
 12850 ;;		_INTERRUPT_InterruptManager
 12851 ;; This function uses a non-reentrant model
 12852 ;;
 12853                           
 12854                           
 12855                           ;psect for function _TMR4_ISR
 12856  0BDD                     _TMR4_ISR:
 12857                           
 12858                           ;mcc_generated_files/tmr4.c: 169:     PIR4bits.TMR4IF = 0;
 12859                           
 12860                           ;incstack = 0
 12861                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 12862  0BDD  1190               	bcf	16,3	;volatile
 12863                           
 12864                           ;mcc_generated_files/tmr4.c: 173:     TMR4_CallBack();
 12865  0BDE  318C  243A         	fcall	_TMR4_CallBack
 12866  0BE0  0008               	return
 12867  0BE1                     __end_of_TMR4_ISR:
 12868                           
 12869                           	psect	text56
 12870  0C3A                     __ptext56:	
 12871 ;; *************** function _TMR4_CallBack *****************
 12872 ;; Defined at:
 12873 ;;		line 176 in file "mcc_generated_files/tmr4.c"
 12874 ;; Parameters:    Size  Location     Type
 12875 ;;		None
 12876 ;; Auto vars:     Size  Location     Type
 12877 ;;		None
 12878 ;; Return value:  Size  Location     Type
 12879 ;;                  1    wreg      void 
 12880 ;; Registers used:
 12881 ;;		wreg, status,2, status,0, pclath, cstack
 12882 ;; Tracked objects:
 12883 ;;		On entry : 3F/E
 12884 ;;		On exit  : 0/0
 12885 ;;		Unchanged: 0/0
 12886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12887 ;;      Params:         0       0       0       0       0       0       0       0
 12888 ;;      Locals:         0       0       0       0       0       0       0       0
 12889 ;;      Temps:          0       0       0       0       0       0       0       0
 12890 ;;      Totals:         0       0       0       0       0       0       0       0
 12891 ;;Total ram usage:        0 bytes
 12892 ;; Hardware stack levels used: 1
 12893 ;; Hardware stack levels required when called: 1
 12894 ;; This function calls:
 12895 ;;		Absolute function
 12896 ;;		_TMR4_DefaultInterruptHandler
 12897 ;; This function is called by:
 12898 ;;		_TMR4_ISR
 12899 ;; This function uses a non-reentrant model
 12900 ;;
 12901                           
 12902                           
 12903                           ;psect for function _TMR4_CallBack
 12904  0C3A                     _TMR4_CallBack:
 12905                           
 12906                           ;mcc_generated_files/tmr4.c: 180:     if(TMR4_InterruptHandler)
 12907                           
 12908                           ;incstack = 0
 12909                           ; Regs used in _TMR4_CallBack: [wreg+status,2+status,0+pclath+cstack]
 12910  0C3A  0140               	movlb	0	; select bank0
 12911  0C3B  083C               	movf	_TMR4_InterruptHandler,w
 12912  0C3C  043D               	iorwf	_TMR4_InterruptHandler+1,w
 12913  0C3D  1903               	btfsc	3,2
 12914  0C3E  0008               	return
 12915                           
 12916                           ;mcc_generated_files/tmr4.c: 181:     {;mcc_generated_files/tmr4.c: 182:         TMR4_In
      +                          terruptHandler();
 12917  0C3F  083D               	movf	_TMR4_InterruptHandler+1,w
 12918  0C40  008A               	movwf	10
 12919  0C41  083C               	movf	_TMR4_InterruptHandler,w
 12920  0C42  000A               	callw
 12921  0C43  318C               	pagesel	$
 12922  0C44  0008               	return
 12923  0C45                     __end_of_TMR4_CallBack:
 12924                           
 12925                           	psect	text57
 12926  0BE1                     __ptext57:	
 12927 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 12928 ;; Defined at:
 12929 ;;		line 190 in file "mcc_generated_files/tmr4.c"
 12930 ;; Parameters:    Size  Location     Type
 12931 ;;		None
 12932 ;; Auto vars:     Size  Location     Type
 12933 ;;		None
 12934 ;; Return value:  Size  Location     Type
 12935 ;;                  1    wreg      void 
 12936 ;; Registers used:
 12937 ;;		wreg
 12938 ;; Tracked objects:
 12939 ;;		On entry : 3F/0
 12940 ;;		On exit  : 3F/0
 12941 ;;		Unchanged: 0/0
 12942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12943 ;;      Params:         0       0       0       0       0       0       0       0
 12944 ;;      Locals:         0       0       0       0       0       0       0       0
 12945 ;;      Temps:          0       0       0       0       0       0       0       0
 12946 ;;      Totals:         0       0       0       0       0       0       0       0
 12947 ;;Total ram usage:        0 bytes
 12948 ;; Hardware stack levels used: 1
 12949 ;; This function calls:
 12950 ;;		Nothing
 12951 ;; This function is called by:
 12952 ;;		_TMR4_Initialize
 12953 ;;		_TMR4_CallBack
 12954 ;; This function uses a non-reentrant model
 12955 ;;
 12956                           
 12957                           
 12958                           ;psect for function _TMR4_DefaultInterruptHandler
 12959  0BE1                     _TMR4_DefaultInterruptHandler:
 12960                           
 12961                           ;mcc_generated_files/tmr4.c: 194:     buttoncounter++;
 12962                           
 12963                           ;incstack = 0
 12964                           ; Regs used in _TMR4_DefaultInterruptHandler: [wreg]
 12965  0BE1  3001               	movlw	1
 12966  0BE2  07BE               	addwf	_buttoncounter,f
 12967  0BE3  3000               	movlw	0
 12968  0BE4  3DBF               	addwfc	_buttoncounter+1,f
 12969  0BE5  0008               	return
 12970  0BE6                     __end_of_TMR4_DefaultInterruptHandler:
 12971                           
 12972                           	psect	text58
 12973  0C8F                     __ptext58:	
 12974 ;; *************** function _PIN_MANAGER_IOC *****************
 12975 ;; Defined at:
 12976 ;;		line 150 in file "mcc_generated_files/pin_manager.c"
 12977 ;; Parameters:    Size  Location     Type
 12978 ;;		None
 12979 ;; Auto vars:     Size  Location     Type
 12980 ;;		None
 12981 ;; Return value:  Size  Location     Type
 12982 ;;                  1    wreg      void 
 12983 ;; Registers used:
 12984 ;;		wreg, status,2, status,0, pclath, cstack
 12985 ;; Tracked objects:
 12986 ;;		On entry : 3F/E
 12987 ;;		On exit  : 3F/3E
 12988 ;;		Unchanged: 0/0
 12989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12990 ;;      Params:         0       0       0       0       0       0       0       0
 12991 ;;      Locals:         0       0       0       0       0       0       0       0
 12992 ;;      Temps:          0       0       0       0       0       0       0       0
 12993 ;;      Totals:         0       0       0       0       0       0       0       0
 12994 ;;Total ram usage:        0 bytes
 12995 ;; Hardware stack levels used: 1
 12996 ;; Hardware stack levels required when called: 1
 12997 ;; This function calls:
 12998 ;;		_SW1Interrupt
 12999 ;;		_SW2Interrupt
 13000 ;; This function is called by:
 13001 ;;		_INTERRUPT_InterruptManager
 13002 ;; This function uses a non-reentrant model
 13003 ;;
 13004                           
 13005                           
 13006                           ;psect for function _PIN_MANAGER_IOC
 13007  0C8F                     _PIN_MANAGER_IOC:
 13008                           
 13009                           ;mcc_generated_files/pin_manager.c: 153:     if(IOCCFbits.IOCCF0 == 1)
 13010                           
 13011                           ;incstack = 0
 13012                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 13013  0C8F  017E               	movlb	62	; select bank62
 13014  0C90  1C55               	btfss	85,0	;volatile
 13015  0C91  2C97               	goto	i1l3238
 13016                           
 13017                           ;mcc_generated_files/pin_manager.c: 154:     {;mcc_generated_files/pin_manager.c: 156:  
      +                                 SW1Interrupt();
 13018  0C92  318C  2445  318C   	fcall	_SW1Interrupt
 13019                           
 13020                           ;mcc_generated_files/pin_manager.c: 157:         IOCCFbits.IOCCF0 = 0;
 13021  0C95  017E               	movlb	62	; select bank62
 13022  0C96  1055               	bcf	85,0	;volatile
 13023  0C97                     i1l3238:
 13024                           
 13025                           ;mcc_generated_files/pin_manager.c: 160:     if(IOCCFbits.IOCCF1 == 1)
 13026  0C97  1CD5               	btfss	85,1	;volatile
 13027  0C98  0008               	return
 13028                           
 13029                           ;mcc_generated_files/pin_manager.c: 161:     {;mcc_generated_files/pin_manager.c: 163:  
      +                                 SW2Interrupt();
 13030  0C99  318C  2451         	fcall	_SW2Interrupt
 13031                           
 13032                           ;mcc_generated_files/pin_manager.c: 164:         IOCCFbits.IOCCF1 = 0;
 13033  0C9B  017E               	movlb	62	; select bank62
 13034  0C9C  10D5               	bcf	85,1	;volatile
 13035  0C9D  0008               	return
 13036  0C9E                     __end_of_PIN_MANAGER_IOC:
 13037                           
 13038                           	psect	text59
 13039  0C51                     __ptext59:	
 13040 ;; *************** function _SW2Interrupt *****************
 13041 ;; Defined at:
 13042 ;;		line 238 in file "Subroutines.c"
 13043 ;; Parameters:    Size  Location     Type
 13044 ;;		None
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;		None
 13047 ;; Return value:  Size  Location     Type
 13048 ;;                  1    wreg      void 
 13049 ;; Registers used:
 13050 ;;		wreg
 13051 ;; Tracked objects:
 13052 ;;		On entry : 3F/3E
 13053 ;;		On exit  : 3F/0
 13054 ;;		Unchanged: 0/0
 13055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13056 ;;      Params:         0       0       0       0       0       0       0       0
 13057 ;;      Locals:         0       0       0       0       0       0       0       0
 13058 ;;      Temps:          1       0       0       0       0       0       0       0
 13059 ;;      Totals:         1       0       0       0       0       0       0       0
 13060 ;;Total ram usage:        1 bytes
 13061 ;; Hardware stack levels used: 1
 13062 ;; This function calls:
 13063 ;;		Nothing
 13064 ;; This function is called by:
 13065 ;;		_PIN_MANAGER_IOC
 13066 ;; This function uses a non-reentrant model
 13067 ;;
 13068                           
 13069                           
 13070                           ;psect for function _SW2Interrupt
 13071  0C51                     _SW2Interrupt:
 13072                           
 13073                           ;Subroutines.c: 240:     _delay(10000);
 13074                           
 13075                           ;incstack = 0
 13076                           ; Regs used in _SW2Interrupt: [wreg]
 13077  0C51  300D               	movlw	13
 13078  0C52  00F0               	movwf	??_SW2Interrupt
 13079  0C53  30FC               	movlw	252
 13080  0C54                     u477_27:
 13081  0C54  0B89               	decfsz	9,f
 13082  0C55  2C54               	goto	u477_27
 13083  0C56  0BF0               	decfsz	??_SW2Interrupt,f
 13084  0C57  2C54               	goto	u477_27
 13085  0C58                     i1l865:	
 13086                           ;Subroutines.c: 241:     while (PORTCbits.RC1){}
 13087                           
 13088  0C58  0140               	movlb	0	; select bank0
 13089  0C59  188E               	btfsc	14,1	;volatile
 13090  0C5A  2C58               	goto	i1l865
 13091                           
 13092                           ;Subroutines.c: 242:     GoDate = 1;
 13093  0C5B  167C               	bsf	_GoDate/(0+8),_GoDate& (0+7)
 13094  0C5C  0008               	return
 13095  0C5D                     __end_of_SW2Interrupt:
 13096                           
 13097                           	psect	text60
 13098  0C45                     __ptext60:	
 13099 ;; *************** function _SW1Interrupt *****************
 13100 ;; Defined at:
 13101 ;;		line 231 in file "Subroutines.c"
 13102 ;; Parameters:    Size  Location     Type
 13103 ;;		None
 13104 ;; Auto vars:     Size  Location     Type
 13105 ;;		None
 13106 ;; Return value:  Size  Location     Type
 13107 ;;                  1    wreg      void 
 13108 ;; Registers used:
 13109 ;;		wreg
 13110 ;; Tracked objects:
 13111 ;;		On entry : 3F/3E
 13112 ;;		On exit  : 3F/0
 13113 ;;		Unchanged: 0/0
 13114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13115 ;;      Params:         0       0       0       0       0       0       0       0
 13116 ;;      Locals:         0       0       0       0       0       0       0       0
 13117 ;;      Temps:          1       0       0       0       0       0       0       0
 13118 ;;      Totals:         1       0       0       0       0       0       0       0
 13119 ;;Total ram usage:        1 bytes
 13120 ;; Hardware stack levels used: 1
 13121 ;; This function calls:
 13122 ;;		Nothing
 13123 ;; This function is called by:
 13124 ;;		_PIN_MANAGER_IOC
 13125 ;; This function uses a non-reentrant model
 13126 ;;
 13127                           
 13128                           
 13129                           ;psect for function _SW1Interrupt
 13130  0C45                     _SW1Interrupt:
 13131                           
 13132                           ;Subroutines.c: 233:     _delay(10000);
 13133                           
 13134                           ;incstack = 0
 13135                           ; Regs used in _SW1Interrupt: [wreg]
 13136  0C45  300D               	movlw	13
 13137  0C46  00F0               	movwf	??_SW1Interrupt
 13138  0C47  30FC               	movlw	252
 13139  0C48                     u478_27:
 13140  0C48  0B89               	decfsz	9,f
 13141  0C49  2C48               	goto	u478_27
 13142  0C4A  0BF0               	decfsz	??_SW1Interrupt,f
 13143  0C4B  2C48               	goto	u478_27
 13144  0C4C                     i1l859:	
 13145                           ;Subroutines.c: 234:     while (PORTCbits.RC0){}
 13146                           
 13147  0C4C  0140               	movlb	0	; select bank0
 13148  0C4D  180E               	btfsc	14,0	;volatile
 13149  0C4E  2C4C               	goto	i1l859
 13150                           
 13151                           ;Subroutines.c: 235:     GoDM = 1;
 13152  0C4F  15FC               	bsf	_GoDM/(0+8),_GoDM& (0+7)
 13153  0C50  0008               	return
 13154  0C51                     __end_of_SW1Interrupt:
 13155  007E                     btemp	set	126	;btemp
 13156  007E                     int$flags	set	126
 13157  007E                     wtemp0	set	126
 13158                           
 13159                           	psect	config
 13160                           
 13161                           ;Config register CONFIG1 @ 0x8007
 13162                           ;	External Oscillator mode selection bits
 13163                           ;	FEXTOSC = OFF, Oscillator not enabled
 13164                           ;	Power-up default value for COSC bits
 13165                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 13166                           ;	Clock Out Enable bit
 13167                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 13168                           ;	Clock Switch Enable bit
 13169                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13170                           ;	Fail-Safe Clock Monitor Enable bit
 13171                           ;	FCMEN = ON, FSCM timer enabled
 13172  8007                     	org	32775
 13173  8007  3FEC               	dw	16364
 13174                           
 13175                           ;Config register CONFIG2 @ 0x8008
 13176                           ;	Master Clear Enable bit
 13177                           ;	MCLRE = ON, MCLR pin is Master Clear function
 13178                           ;	Power-up Timer Enable bit
 13179                           ;	PWRTS = PWRT_64, PWRT set at 64 ms
 13180                           ;	Low-Power BOR enable bit
 13181                           ;	LPBOREN = OFF, ULPBOR disabled
 13182                           ;	Brown-out reset enable bits
 13183                           ;	BOREN = OFF, Brown-out reset disabled
 13184                           ;	Brown-out Reset Voltage Selection
 13185                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
 13186                           ;	Zero-cross detect disable
 13187                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 13188                           ;	Peripheral Pin Select one-way control
 13189                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 13190                           ;	Stack Overflow/Underflow Reset Enable bit
 13191                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 13192  8008                     	org	32776
 13193  8008  3F3D               	dw	16189
 13194                           
 13195                           ;Config register CONFIG3 @ 0x8009
 13196                           ;	WDT Period Select bits
 13197                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13198                           ;	WDT operating mode
 13199                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 13200                           ;	WDT Window Select bits
 13201                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 13202                           ;	WDT input clock selector
 13203                           ;	WDTCCS = SC, Software Control
 13204  8009                     	org	32777
 13205  8009  3F9F               	dw	16287
 13206                           
 13207                           ;Config register CONFIG4 @ 0x800A
 13208                           ;	Boot Block Size Selection bits
 13209                           ;	BBSIZE = BB512, 512 words boot block size
 13210                           ;	Boot Block Enable bit
 13211                           ;	BBEN = OFF, Boot Block disabled
 13212                           ;	SAF Enable bit
 13213                           ;	SAFEN = OFF, SAF disabled
 13214                           ;	Application Block Write Protection bit
 13215                           ;	WRTAPP = OFF, Application Block not write protected
 13216                           ;	Boot Block Write Protection bit
 13217                           ;	WRTB = OFF, Boot Block not write protected
 13218                           ;	Configuration Register Write Protection bit
 13219                           ;	WRTC = OFF, Configuration Register not write protected
 13220                           ;	Data EEPROM write protection bit
 13221                           ;	WRTD = OFF, Data EEPROM NOT write protected
 13222                           ;	Storage Area Flash Write Protection bit
 13223                           ;	WRTSAF = OFF, SAF not write protected
 13224                           ;	Low Voltage Programming Enable bit
 13225                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 13226  800A                     	org	32778
 13227  800A  3FFF               	dw	16383
 13228                           
 13229                           ;Config register CONFIG5 @ 0x800B
 13230                           ;	UserNVM Program memory code protection bit
 13231                           ;	CP = OFF, UserNVM code protection disabled
 13232  800B                     	org	32779
 13233  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    32
    Data        81
    BSS         83
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     29      80
    BANK1            80      0      41
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$3291$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S1730$0$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    IOCCF1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    IOCCF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    __eetoi@addr	PTR eeprom void  size(1) Largest target is 2
		 -> TimeAdjStore(EEDATA[2]), 

    __eetoc@addr	PTR eeprom void  size(1) Largest target is 1
		 -> BlankEndStore(EEDATA[1]), BlankStartStore(EEDATA[1]), HourTypeStore(EEDATA[1]), BrightnessStore(EEDATA[1]), 
		 -> DateFormatStore(EEDATA[1]), TimeFastStore(EEDATA[1]), 

    __eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 2
		 -> BlankEndStore(EEDATA[1]), BlankStartStore(EEDATA[1]), HourTypeStore(EEDATA[1]), BrightnessStore(EEDATA[1]), 
		 -> DateFormatStore(EEDATA[1]), TimeAdjStore(EEDATA[2]), TimeFastStore(EEDATA[1]), 

    __eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(BANK0[2]), __eetoc@data(COMMON[1]), 

    __eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(BANK0[2]), __eetoc@data(COMMON[1]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@i2c_simple_master$F2499@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    S2371$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    S1730$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> NULL(NULL[0]), 

    S1730$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S1730$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler@i2c_simple_master$F2499(), wr2RegCompleteHandler@i2c_simple_master$F2493(), rd2RegCompleteHandler@i2c_simple_master$F2487(), rd1RegCompleteHandler@i2c_simple_master$F2479(), 
		 -> wr1RegCompleteHandler@i2c_simple_master$F2469(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), 
		 -> Absolute function(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler@i2c_simple_master$F2499(), wr2RegCompleteHandler@i2c_simple_master$F2493(), rd2RegCompleteHandler@i2c_simple_master$F2487(), rd1RegCompleteHandler@i2c_simple_master$F2479(), 
		 -> wr1RegCompleteHandler@i2c_simple_master$F2469(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), 
		 -> Absolute function(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10942[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2COpen@regptr	PTR unsigned char  size(1) Largest target is 1
		 -> I2CWrite@reg(COMMON[1]), I2CRead@reg(COMMON[1]), 

    OtherSetInc@eeaddr	PTR unsigned char  size(1) Largest target is 1
		 -> HourTypeStore(EEDATA[1]), BrightnessStore(EEDATA[1]), DateFormatStore(EEDATA[1]), 

    OtherSetInc@value	PTR unsigned char  size(1) Largest target is 1
		 -> HourType(BANK0[1]), Brightness(BANK0[1]), DateFormat(BANK0[1]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR4_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    ___eetoi->___eecpymem
    ___eetoc->___eecpymem
    _TubesOn->___awdiv
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _OtherSetInc->___awdiv
    ___awdiv->___wmul
    _BCDSetInc->_I2CRead
    _I2CWrite->_I2COpen
    _I2CRead->_I2COpen
    _I2COpen->_I2CFail
    _I2CFail->_EmptyTubes
    _I2CFail->_Loader
    _TubeValuePicker->_Buttons
    _RandomNum->_TMR0_ReadTimer
    _RandomNum->___awmod
    _srand->_TMR0_ReadTimer
    _rand->___lmul
    _PWM6_LoadDutyValue->___awdiv
    _EEPROMBufferFill->_EEPROM_Read

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _PIN_MANAGER_IOC->_SW1Interrupt
    _PIN_MANAGER_IOC->_SW2Interrupt

Critical Paths under _main in BANK0

    _main->_DateDisplay
    _Startup->_I2CWrite
    _TubesOn->_PWM6_LoadDutyValue
    _DateDisplay->_Settings
    _Settings->_OtherSetInc
    _OtherSetInc->_Loader
    _BCDSetInc->_I2CWrite
    _I2CFail->_Loader
    _DMDisplay->_RandomWL
    _TubeValuePicker->_Loader
    _RandomWL->_RandomNum
    _FixedWL->_RandomNum
    _RandomNum->___awmod
    _rand->___lmul
    ___awmod->_rand
    _Pulse->_PWM6_LoadDutyValue
    _PWM6_LoadDutyValue->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   35034
                                             24 BANK0      5     5      0
                            _BCD2Bin
                          _DMDisplay
                        _DateDisplay
                     _DisplayBufSave
                            _FixedWL
                            _I2CRead
                           _I2CWrite
                             _Loader
                          _SplitLoad
                            _Startup
                           _TubesOff
                            _TubesOn
                            ___eetoi
 ---------------------------------------------------------------------------------
 (1) _TubesOff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Startup                                              1     1      0    8550
                                             14 BANK0      1     1      0
                         _EmptyTubes
                            _I2CRead
                           _I2CWrite
                             _Loader
                  _SYSTEM_Initialize
                    _TMR0_StartTimer
                            _TubesOn
                            ___eetoc
                            ___eetoi
 ---------------------------------------------------------------------------------
 (1) ___eetoi                                              7     5      2    1613
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (2) ___eetoc                                              3     3      0    1757
                                              6 COMMON     3     3      0
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (2) ___eecpymem                                           5     3      2    1442
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _TubesOn                                              2     2      0    3163
                                              8 BANK0      2     2      0
                 _PWM6_LoadDutyValue
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0      98
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR4_Initialize                                      0     0      0      98
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR4_SetInterruptHandler                             2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DateDisplay                                          1     1      0   12756
                                             23 BANK0      1     1      0
                            _BCD2Bin
                            _I2CRead
                             _Loader
                           _Settings
                          _SplitLoad
 ---------------------------------------------------------------------------------
 (2) _Settings                                             2     2      0   12050
                                             21 BANK0      2     2      0
                          _BCDSetInc
                       _EEPROM_Write
                         _EmptyTubes
                             _Loader
                        _OtherSetInc
                    _TubeValuePicker
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _OtherSetInc                                          8     5      3    5365
                                             13 BANK0      8     5      3
                            _Buttons
                       _EEPROM_Write
                             _Loader
                           _NumSplit
                 _PWM6_LoadDutyValue
                          _SplitLoad
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1666
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _NumSplit                                             2     2      0      31
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         2     1      1     602
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (3) _BCDSetInc                                            8     6      2    4080
                                              7 COMMON     4     4      0
                                             14 BANK0      4     2      2
                            _BCD2Bin
                            _Buttons
                            _I2CRead
                           _I2CWrite
                             _Loader
                          _SplitLoad
 ---------------------------------------------------------------------------------
 (1) _SplitLoad                                            2     2      0      62
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2CWrite                                             2     1      1    1340
                                              4 COMMON     1     1      0
                                             13 BANK0      1     0      1
                           _I2CClose
                            _I2CFail
                         _I2CIrqWait
                            _I2COpen
 ---------------------------------------------------------------------------------
 (2) _I2CRead                                              3     3      0     443
                                              4 COMMON     3     3      0
                           _I2CClose
                            _I2CFail
                         _I2CIrqWait
                            _I2COpen
 ---------------------------------------------------------------------------------
 (3) _I2COpen                                              1     1      0     239
                                              3 COMMON     1     1      0
                            _I2CFail
                         _I2CIrqWait
 ---------------------------------------------------------------------------------
 (4) _I2CFail                                              1     1      0     136
                                              2 COMMON     1     1      0
                         _EmptyTubes
                             _Loader
 ---------------------------------------------------------------------------------
 (3) _I2CClose                                             0     0      0       0
                         _I2CIrqWait
 ---------------------------------------------------------------------------------
 (4) _I2CIrqWait                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BCD2Bin                                              2     2      0      65
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DMDisplay                                            2     2      0    4592
                                             19 BANK0      2     2      0
                            _Buttons
                     _DisplayBufSave
                   _EEPROMBufferFill
                         _EmptyTubes
                            _FixedWL
                             _Loader
                           _RandomWL
                    _TubeValuePicker
 ---------------------------------------------------------------------------------
 (3) _TubeValuePicker                                      2     2      0     201
                                              4 COMMON     2     2      0
                            _Buttons
                             _Loader
 ---------------------------------------------------------------------------------
 (4) _Buttons                                              3     3      0      34
                                              1 COMMON     3     3      0
                         _TMR4_Start
                          _TMR4_Stop
 ---------------------------------------------------------------------------------
 (5) _TMR4_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RandomWL                                             2     2      0    2085
                                             17 BANK0      2     2      0
                             _Loader
                              _Pulse
                          _RandomNum
 ---------------------------------------------------------------------------------
 (1) _FixedWL                                              1     1      0    1989
                                             17 BANK0      1     1      0
                             _Loader
                              _Pulse
                          _RandomNum
 ---------------------------------------------------------------------------------
 (2) _RandomNum                                            3     3      0    1161
                                             14 BANK0      3     3      0
                     _TMR0_ReadTimer
                            ___awmod
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (3) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     316
                                              4 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     316
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              9 COMMON     3     3      0
                                             10 BANK0      4     0      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                      11     9      2      69
                                              1 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (2) _Pulse                                                1     1      0     692
                                              8 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM6_LoadDutyValue                                   4     2      2     692
                                              4 BANK0      4     2      2
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Loader                                              14    14      0     136
                                              1 COMMON     1     1      0
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) _EmptyTubes                                           1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EEPROMBufferFill                                     2     2      0      45
                                              2 COMMON     2     2      0
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DisplayBufSave                                       1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0       0
                    _PIN_MANAGER_IOC
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR4_ISR                                             0     0      0       0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (10) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      0     0      0       0
                       _SW1Interrupt
                       _SW2Interrupt
 ---------------------------------------------------------------------------------
 (10) _SW2Interrupt                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _SW1Interrupt                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BCD2Bin
   _DMDisplay
     _Buttons
       _TMR4_Start
       _TMR4_Stop
     _DisplayBufSave
     _EEPROMBufferFill
       _EEPROM_Read
     _EmptyTubes
     _FixedWL
       _Loader
       _Pulse
         _PWM6_LoadDutyValue
           ___awdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       _RandomNum
         _TMR0_ReadTimer
         ___awmod
           _rand (ARG)
             ___lmul
         _rand
         _srand
           _TMR0_ReadTimer (ARG)
     _Loader
     _RandomWL
       _Loader
       _Pulse
       _RandomNum
     _TubeValuePicker
       _Buttons
       _Loader
   _DateDisplay
     _BCD2Bin
     _I2CRead
       _I2CClose
         _I2CIrqWait
       _I2CFail
         _EmptyTubes
         _Loader
       _I2CIrqWait
       _I2COpen
         _I2CFail
         _I2CIrqWait
     _Loader
     _Settings
       _BCDSetInc
         _BCD2Bin
         _Buttons
         _I2CRead
         _I2CWrite
           _I2CClose
           _I2CFail
           _I2CIrqWait
           _I2COpen
         _Loader
         _SplitLoad
       _EEPROM_Write
       _EmptyTubes
       _Loader
       _OtherSetInc
         _Buttons
         _EEPROM_Write
         _Loader
         _NumSplit
         _PWM6_LoadDutyValue
         _SplitLoad
         ___awdiv
         ___wmul
       _TubeValuePicker
       ___wmul
     _SplitLoad
   _DisplayBufSave
   _FixedWL
   _I2CRead
   _I2CWrite
   _Loader
   _SplitLoad
   _Startup
     _EmptyTubes
     _I2CRead
     _I2CWrite
     _Loader
     _SYSTEM_Initialize
       _I2C1_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _PWM6_Initialize
       _TMR0_Initialize
       _TMR2_Initialize
       _TMR4_Initialize
         _TMR4_SetInterruptHandler
     _TMR0_StartTimer
     _TubesOn
       _PWM6_LoadDutyValue
       ___awdiv
       ___wmul
     ___eetoc
       ___eecpymem
     ___eetoi
       ___eecpymem
   _TubesOff
   _TubesOn
   ___eetoi

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _SW1Interrupt
     _SW2Interrupt
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       8       0        3.1%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      29       7       51.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
ABS                  0      0      C6      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      C6      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 03 23:33:24 2021

                            __size_of_I2CIrqWait 0005                                     ___awdiv@sign 0054  
                             __size_of_BCDSetInc 0096                              ___wmul@multiplicand 0073  
                    __size_of_PWM6_LoadDutyValue 0018                                     BCD2Bin@input 0072  
                                            l612 0283                                              l524 0051  
                                            l607 01BB                                              l551 0158  
                                            l552 0151                                              l811 0328  
                                            l820 0379                                              l814 0342  
                                            l840 061D                                              l817 0373  
                                            l569 0672                                              l922 0E15  
                                            l851 0F42                                              l835 0600  
                                            l854 0F32                                              l950 0CF9  
                                            l918 0E00                                              l839 0617  
                                            l944 0BE6                                  __end_of_BCD2Bin 0CE7  
                                            l974 0F76                                              l966 0F6D  
                                            l967 0F5A                                              _Pos 004B  
                                __end_of_I2CFail 0CFA                                  _BrightnessStore 007B  
                                __end_of_I2CRead 0EAD                                  __end_of_I2COpen 0DE2  
                        __size_of_PMD_Initialize 000A                                     ___awmod@sign 007B  
                                _TMR2_Initialize 0C81                                              wreg 0009  
                           _I2C1_DO_RX_NACK_STOP 0000                                       _DateFormat 0052  
                                           l1535 0E43                                             l6010 011C  
                                           l5140 0EBF                                             l5204 0F4E  
                                           l5124 0DDB                                             l1668 0DB3  
                                           l5310 073B                                             l5302 071D  
                                           l6022 013B                                             l4520 0D39  
                                           l5136 0EB5                                             l5304 0729  
                                           l6040 016A                                             l6008 00EC  
                                           l5074 0F1F                                             l5330 0FC5  
                                           l5218 0F6B                                             l5314 0744  
                                           l6026 0142                                             l5068 0CC6  
                                           l5084 0F24                                             l5164 0E9A  
                                           l5412 043F                                             l5404 042B  
                                           l5342 0FD2                                             l5334 0FCC  
                                           l5190 0D1B                                             l5318 074C  
                                           l5502 03E8                                             l6054 0183  
                                           l5344 0FDE                                             l5352 0FF3  
                                           l5408 0433                                             l5256 0CA4  
                                           l5504 03ED                                             l6064 019F  
                                           l6048 0176                                             l5362 06A4  
                                           l5442 0486                                             l5434 0470  
                                           l5266 0DAD                                             l6058 0193  
                                           l5356 0FFB                                             l5348 0FEA  
                                           l5380 06EB                                             l5372 06A0  
                                           l5292 0715                                             l5508 0412  
                                           l5374 06B4                                             l5454 04A0  
                                           l5446 0490                                             l5438 0476  
                                           l5286 070A                                             l5542 0E4B  
                                           l5560 05D4                                             l5712 02F7  
                                           l5392 06D6                                             l5368 069E  
                                           l5448 0493                                             l5480 03AF  
                                           l5722 0311                                             l5386 06C0  
                                           l5458 04A9                                             l5466 0390  
                                           l5556 05BD                                             l5396 06FB  
                                           l5476 03A7                                             l4678 0D97  
                                           l5582 061F                                             l5558 05D3  
                                           l5750 034A                                             l5742 033A  
                                           l5718 0301                                             l5398 06B8  
                                           l5902 058D                                             l5806 0536  
                                           l5584 0629                                             l5576 05DA  
                                           l5904 05A1                                             l5680 028E  
                                           l5656 0270                                             l5914 05B3  
                                           l5906 05A4                                             l5498 03CF  
                                           l5842 0690                                             l5930 0056  
                                           l5922 004A                                             l5916 05B6  
                                           l5692 028A                                             l5676 0282  
                                           l5844 0685                                             l5924 004B  
                                           l5766 037B                                             l5758 036D  
                                           l5862 054E                                             l5768 0385  
                                           l5696 02B9                                             l5960 00AC  
                                           l5952 0084                                             l5866 055E  
                                           l5858 0551                                             l5970 00C2  
                                           l5954 009F                                             l5962 00B0  
                                           l5980 00D7                                             l5958 007A  
                                           l5986 00BB                                             l5988 00E8  
                                           l5998 0107                                             _LATA 0018  
                                           _LATB 0019                                             _LATC 001A  
                                           u3305 0CDD                                             u3170 0F19  
                                           _T2PR 028D                                             u3245 0EC0  
                                           u3255 0EC7                                             u3415 0F04  
                                           u3335 0F67                                             _T4PR 0293  
                                           u3275 0D71                                             u3515 072A  
                                           u3435 0DB4                                             u3525 0734  
                                           u3445 0DB9                                             u3615 0FE4  
                                           u3535 073C                                             u3625 0FEB  
                                           _PMD0 0796                                             _PMD1 0797  
                                           _PMD2 0798                                             u3495 0720  
                                           u4607 00A6                                             _PMD3 0799  
                                           _PMD4 079A                                             u4617 00E2  
                                           _PMD5 079B                                             _PMD6 079C  
                                           u3595 0FD5                                             u4707 0F72  
                                           u4627 0100                                             _PMD7 079D  
                                           u4717 037F                                             u4637 01A6  
                                           u4727 0623                                             u4647 067B  
                                           u4737 075C                                             u4657 0694  
                                           u4747 076C                                             u4667 01C1  
                                           u4757 077C                                             u4677 044D  
                                           u4767 078D                                             u4687 059B  
                                           u4697 0F53                                             _GoDM 03E3  
                                           _WPUA 1F39                                             _WPUB 1F44  
                                           _WPUC 1F4F                                             _Temp 0047  
                              ??_TubeValuePicker 0074                                 __end_of_I2CClose 0C0B  
                                           _main 0045                                       _BlankStart 0049  
                                           _rand 0EDC                                             _seed 004C  
                                _TMR0_StartTimer 0002                                             fsr0h 0005  
                                           fsr1h 0007                                             indf0 0000  
                                           fsr0l 0004                                             indf1 0001  
                                           fsr1l 0006                                             btemp 007E  
                                 OtherSetInc@max 0067                                   OtherSetInc@min 0060  
                               __end_of_I2CWrite 0D21                                             start 0017  
                             __size_of_DMDisplay 0079                                       Loader@regp 005F  
                       __end_of_EEPROMBufferFill 0DAB                       ??_TMR4_SetInterruptHandler 0073  
                                __end_of_FixedWL 062C                                  __end_of_Buttons 0F7B  
                           __end_of_EEPROM_Write 0E1C                          __end_of_TMR0_Initialize 0D35  
                                    _DateDisplay 062C                   __size_of_OSCILLATOR_Initialize 0009  
                  __end_of_OSCILLATOR_Initialize 0C26                                  __end_of_TubesOn 0E85  
                                __end_of_Startup 0540                                            ?_main 0070  
                                __end_of___eetoc 0C75                                  __end_of___eetoi 0D0D  
                                          ?_rand 0057                                  __end_of___awdiv 0751  
                                __end_of___awmod 1000                        TMR0_ReadTimer@readValHigh 007B  
                                ___awdiv@divisor 0077                                            _T2CON 028E  
                                          _T4CON 0294                                            _T2HLT 028F  
                                          _T4HLT 0295                                            _T2TMR 028C  
                                          _T2RST 0291                                            i1l264 0015  
                                          i1l258 000E                                            _T4TMR 0292  
                                          _T4RST 0297                                            i1l865 0C58  
                                          i1l859 0C4C                                  ___awdiv@counter 0053  
                     __end_of_i2c1_fsmStateTable 07FF                                            _OSCEN 0891  
                                          _TMR0H 059D                                            _TMR0L 059C  
                                          _TRISA 0012                                            _TRISB 0013  
                                          _TRISC 0014                                       _Brightness 0051  
                                _TMR4_Initialize 0D4B                                  _PWM6_Initialize 0C5D  
                                          _NegWL 03E6                              ___lmul@multiplicand 0075  
                              ??_I2C1_Initialize 0071                                       _DisplayBuf 0030  
                                          _Pulse 0751                                 __end_of_TMR4_ISR 0BE1  
                        __end_of_PIN_MANAGER_IOC 0C9E                               __size_of_TMR4_Stop 0003  
                                    ?_TMR4_Start 0070                                            _srand 0C0B  
                              RandomNum@rand_num 0063                                   __pbitbssCOMMON 03E0  
                                          pclath 000A                                __end_of_BCDSetInc 04BA  
                               DMDisplay@seedadr 0067                                            status 0003  
                                          wtemp0 007E                                 EEPROM_Write@addr 0072  
                               EEPROM_Write@data 0071                                       _EmptyTubes 0CC1  
                           __size_of_EEPROM_Read 000A                                  __initialization 0019  
                                   __end_of_main 01AC                                     __end_of_rand 0F0F  
                                      ??_BCD2Bin 0071                                        ??_I2CFail 0072  
                        __end_of_TMR2_Initialize 0C8F                                        ??_I2CRead 0074  
                    ?_INTERRUPT_InterruptManager 0070                                        ??_I2COpen 0073  
                               __end_of_RandomWL 0388                                           ??_main 006B  
                                         ??_rand 0059                                 __end_of_NumSplit 0CAF  
                              __end_of_DMDisplay 05B9                                 __end_of_Settings 02E6  
                                         ?_Pulse 0070                                 __end_of_TubesOff 0BF7  
                                   ??_I2CIrqWait 0071                          __end_of_TMR0_StartTimer 0004  
                               ___awdiv@dividend 0079                                           ?_srand 0053  
                                         _ANSELA 1F38                                           _ANSELB 1F43  
                                         _ANSELC 1F4E                                           _T0CON0 059E  
                                         _T0CON1 059F                                           _RB4PPS 1F1C  
                                         _RB6PPS 1F1E                                           _RC4PPS 1F24  
                                         _ODCONA 1F3A                                           _ODCONB 1F45  
                                         _ODCONC 1F50                                           i1l3238 0C97  
                                         _INLVLA 1F3C                                           _INLVLB 1F47  
                                         _INLVLC 1F52                                           _OSCFRQ 0893  
                           EEPROMBufferFill@addr 0073                                           u477_27 0C54  
                                         u478_27 0C48                                        ??_FixedWL 0064  
                                         _GoDate 03E4                                           _Action 03E5  
                                   Loader@F11221 00BD                                        ??_Buttons 0071  
                               _I2C1_DO_TX_EMPTY 0000                                           _Loader 0F0F  
                                         _OldSet 0046                               __size_of_RandomNum 0022  
                                   _CCPTMRS1bits 021F                                           _Toggle 03E2  
                                    _DisplaySave 0020                                        ??_TubesOn 005B  
                                         ___lmul 0EAD                                    ??_OtherSetInc 0063  
                                      ??_Startup 0061                                           ___wmul 0DAB  
                                      ??___eetoc 0076                                        ??___eetoi 0078  
                                      ??___awdiv 007B                                        ??___awmod 0079  
                              __end_of_TMR4_Stop 0BDD                              __size_of_TMR4_Start 0003  
                             __end_of_I2CIrqWait 0BEB                                 ?_TMR0_Initialize 0070  
                        __end_of_PWM6_Initialize 0C69                          __end_of_TMR4_Initialize 0D61  
                               ___awdiv@quotient 0055                                  ___awmod@divisor 005D  
                                ___awmod@counter 007A                                     __pdataEEDATA 0000  
                                      ?_I2CClose 0070             __end_of_TMR4_DefaultInterruptHandler 0BE6  
          __size_of_TMR4_DefaultInterruptHandler 0005                     _TMR4_DefaultInterruptHandler 0BE1  
                               OtherSetInc@value 0062                            _I2C1_DO_SEND_ADR_READ 0000  
                                 _PMD_Initialize 0C30                                        ?_I2CWrite 0060  
                                         srand@s 0053                               __size_of_SplitLoad 0012  
                                  main@spincount 006D         TMR4_SetInterruptHandler@InterruptHandler 0071  
                               ?_PIN_MANAGER_IOC 0070                          _I2C1_DO_RX_NACK_RESTART 0000  
                                     ___eecpymem 0E3E                                _SYSTEM_Initialize 0D79  
                        __end_of__initialization 0041                               ?_SYSTEM_Initialize 0070  
                                    ?_EmptyTubes 0070                            __size_of_EEPROM_Write 001D  
                        _rdBlkRegCompleteHandler 0000                                   __pcstackCOMMON 0070  
                          __end_of_TMR4_CallBack 0C45                                    __end_of_Pulse 079A  
                                   __pidataBANK1 0C75                                     __pidataBANK2 0F7B  
                            ??_SYSTEM_Initialize 0073                                        ?_TMR4_ISR 0070  
                                  _HourTypeStore 007A                                    __end_of_srand 0C14  
                        __size_of_TMR0_ReadTimer 001D                                 ?_TMR2_Initialize 0070  
                         __end_of_PMD_Initialize 0C3A                              __end_of_OtherSetInc 0424  
                                     ??_I2CClose 0071                                  _TubeValuePicker 069A  
                                     ??_I2CWrite 0074                    ?_TMR4_DefaultInterruptHandler 0070  
                                        ??_Pulse 005B                                __end_of_RandomNum 0E3E  
                               ?_TMR0_StartTimer 0070                        __end_of_SYSTEM_Initialize 0D91  
                                        ??_srand 007C                                     _EEPROM_Write 0DFF  
                                     __pbssBANK0 0020                                       __pbssBANK1 00A0  
                                     I2CRead@reg 0075                                        ?_RandomWL 0070  
                          _TMR4_InterruptHandler 003C                            _rd1RegCompleteHandler 0000  
                                        ?_Loader 0070                                _I2C1_DO_SEND_STOP 0000  
                          _wr1RegCompleteHandler 0000                                        ?_NumSplit 0070  
                                  _buttoncounter 003E                                       __pmaintext 0045  
                              ?_EEPROMBufferFill 0070                                __end_of_SplitLoad 0CC1  
                                      ?_Settings 0070                                          ?___lmul 0071  
                                        ?___wmul 0071                                  _DateFormatStore 007F  
                                     ??_TMR4_ISR 0070                       __end_of_PWM6_LoadDutyValue 0D79  
                                        _BCD2Bin 0CD4                                       __pintentry 0004  
                                      ?_TubesOff 0070                               ??_EEPROMBufferFill 0072  
                                _I2C1_Initialize 0C14                                          _I2CFail 0CE7  
                                   ?_DateDisplay 0070                                          _I2CRead 0E85  
                                        _I2COpen 0DC6                                   ___lmul@product 0053  
                               ?_TMR4_Initialize 0070                                 ?_PWM6_Initialize 0070  
                                ?_PMD_Initialize 0070                                          _OSCCON1 088D  
                                        _OSCCON3 088F                              __size_of_EmptyTubes 0013  
                                        _NVMADRH 081B                                          _NVMADRL 081A  
                                        _NVMDATH 081D                                          _OSCTUNE 0892  
                                        _NVMDATL 081C                                          _NVMCON2 081F  
                                        _PWM6DCH 038D                                          _PWM6DCL 038C  
                                        _PWM6CON 038E                                          _SSP1ADD 018D  
                                        _SLRCONA 1F3B                                          _SLRCONB 1F46  
                                        _SLRCONC 1F51                                          _SSP1BUF 018C  
                                   ??_TMR4_Start 0071                                      ?___eecpymem 0071  
                                        _AnimBuf 0028                                    _BlankEndStore 0078  
                             _i2c1_fsmStateTable 07DF                                          _FixedWL 05B9  
                                     ??_RandomWL 0064                                          _Buttons 0F45  
                                      _BCDSetInc 0424                                          _TimeAdj 003A  
                                __size_of_Loader 0036                                       ??_NumSplit 0071  
                                        _TimeSet 03E1                          __size_of_DisplayBufSave 0016  
                                     ??_Settings 0068                                          _TubesOn 0E61  
                                        _Startup 04BA                                          ___eetoc 0C69  
                                        ___eetoi 0CFA                                          ___awdiv 0700  
                                __size_of___lmul 002F                                          ___awmod 0FBB  
                                    _OtherSetInc 0388                                  __size_of___wmul 001B  
                                     ??_TubesOff 0071                          __end_of_TubeValuePicker 0700  
                             __end_of_TMR4_Start 0BDA                                          __ptext1 0BF1  
                                        __ptext2 04BA                                          __ptext3 0CFA  
                                        __ptext4 0C69                                          __ptext5 0E3E  
                                        __ptext6 0E61                                          __ptext7 0002  
                                        __ptext8 0D79                                          __ptext9 0D4B  
                                  NumSplit@input 0072                            _OSCILLATOR_Initialize 0C1D  
                               ___awmod@dividend 005F                                        _T4CONbits 0294  
                                   I2CWrite@data 0060                         ??_PIN_MANAGER_Initialize 0071  
              __size_of_TMR4_SetInterruptHandler 0006                                        _IOCCFbits 1F55  
                      ?_TMR4_SetInterruptHandler 0071                                        _IOCCNbits 1F54  
                                      _IOCCPbits 1F53                                    ?_SW1Interrupt 0070  
                              OtherSetInc@eeaddr 0061                       __size_of_SYSTEM_Initialize 0018  
                                        clrloop0 0BF8                                        _DMDisplay 0540  
                           TubeValuePicker@start 0075                             end_of_initialization 0041  
                 ??_TMR4_DefaultInterruptHandler 0070                                     BCDSetInc@max 0063  
                                   BCDSetInc@min 0061                                    ?_SW2Interrupt 0070  
                                  ??_EEPROM_Read 0071                                          init_ram 0BFD  
                                        initloop 0BFE                           _I2C1_DO_SEND_ADR_WRITE 0000  
                        __end_of_I2C1_Initialize 0C1D                                       ?_BCDSetInc 0061  
                                    _I2C1_Status 00A0                            TMR0_ReadTimer@readVal 0078  
                                 _TMR0_ReadTimer 0DE2                       _I2C1_DO_SEND_RESTART_WRITE 0000  
                            __size_of___eecpymem 0023                                        _PORTCbits 000E  
                                      _TMR4_Stop 0BDA                                      _StartupDone 03E0  
                              __size_of_I2CClose 0008                                   ??_SW1Interrupt 0070  
                              __size_of_I2CWrite 0014                                       ?_DMDisplay 0070  
                            I2CRead@receiveddata 0076                                   ??_SW2Interrupt 0070  
                                     main@oldsec 006C                                       main@newsec 006F  
                                   ??_EmptyTubes 0071                             _timer0ReloadVal16bit 0040  
                            __end_of_EEPROM_Read 0C30                                   __end_of_Loader 0F45  
                         __end_of_TMR0_ReadTimer 0DFF                                    _TimeFastStore 007C  
                                 __end_of___lmul 0EDC                                    __pidataEEDATA 0078  
                                 __end_of___wmul 0DC6                                   _I2C1_DO_RX_ACK 0000  
                               ?_TubeValuePicker 0070                                __size_of_TMR4_ISR 0004  
                         ?_OSCILLATOR_Initialize 0070                                       ?_TMR4_Stop 0070  
                           __size_of_DateDisplay 006E                              start_initialization 0019  
                                BCDSetInc@i2creg 0062                         __size_of_TMR0_Initialize 0014  
                __size_of_PIN_MANAGER_Initialize 0045                               __end_of_EmptyTubes 0CD4  
                                      _RandomNum 0E1C                         __size_of_PIN_MANAGER_IOC 000F  
                                    ??_BCDSetInc 0077                                 ?_I2C1_Initialize 0070  
                                       ??_Loader 0071                                __size_of_RandomWL 00A2  
                                 _DisplayBufSave 0D35                                 ??_PMD_Initialize 0071  
                                ?_TMR0_ReadTimer 0071                                         ??___lmul 0079  
                                       ??___wmul 0075                                         ?_BCD2Bin 0070  
                              __size_of_NumSplit 0011                                        _RunLength 0120  
                                    __pdataBANK1 00BD                                      __pdataBANK2 0120  
                                       ?_I2CFail 0070                                         ?_I2CRead 0070  
                                       ?_I2COpen 0070                                __size_of_Settings 013A  
                                      _SplitLoad 0CAF                                __size_of_TubesOff 0006  
                                    __pbssEEDATA 007D                             _I2C1_DO_SEND_RESTART 0000  
                                      ___latbits 0001                                    __pcstackBANK0 0053  
                      __size_of_EEPROMBufferFill 001A                               _PWM6_LoadDutyValue 0D61  
                       __size_of_TMR2_Initialize 000E                                      ??_DMDisplay 0066  
                         __size_of_TMR4_CallBack 000B                                     ??___eecpymem 0073  
                                     ?_RandomNum 0070                              ?_PWM6_LoadDutyValue 0057  
                                    _EEPROM_Read 0C26                                         ?_FixedWL 0070  
                          _rd2RegCompleteHandler 0000                         __size_of_TMR0_StartTimer 0002  
                         __end_of_DisplayBufSave 0D4B                                         ?_Buttons 0070  
                         _PIN_MANAGER_Initialize 079A                            _wr2RegCompleteHandler 0000  
                                  I2COpen@regptr 0073                                         ?_TubesOn 0070  
                                       ?_Startup 0070                             __end_of_SW1Interrupt 0C51  
               __end_of_TMR4_SetInterruptHandler 0BF1                                         ?___eetoc 0070  
                                 RandomWL@WLtype 0065                                         ?___eetoi 0076  
                                   ?_OtherSetInc 0060                                         ?___awdiv 0077  
                                       ?___awmod 005D                                 Buttons@presstime 0072  
                           __end_of_SW2Interrupt 0C5D                             ??_PWM6_LoadDutyValue 0059  
                                     ?_SplitLoad 0070                     ??_INTERRUPT_InterruptManager 0071  
                                    ??_TMR4_Stop 0071                               __end_of___eecpymem 0E61  
                                       _I2CClose 0C03                                  _BlankStartStore 0079  
                                       _I2CWrite 0D0D                                         _BCDSplit 0038  
                       __size_of_PWM6_Initialize 000C                         __size_of_TMR4_Initialize 0016  
                                 __size_of_Pulse 0049                                         _T2CLKCON 0290  
                                       _T4CLKCON 0296                                   __size_of_srand 0009  
                                    I2CWrite@reg 0074                                ??_TMR0_Initialize 0071  
                                 ___wmul@product 0075                                         _LATAbits 0018  
                                       _LATBbits 0019                                         _LATCbits 001A  
                                     _I2C1_DO_RX 0000                                       _I2C1_DO_TX 0000  
                                      clear_ram0 0BF7                                         _PIE0bits 0716  
                                       _PIE3bits 0719                                         _PIE4bits 071A  
                                ?_DisplayBufSave 0070              __size_of_INTERRUPT_InterruptManager 0013  
                                       _PIR0bits 070C                                         _PIR3bits 070F  
                                       _PIR4bits 0710                        _I2C1_DO_SEND_RESTART_READ 0000  
                                       _SSP1CON1 0190                                         _SSP1CON2 0191  
                                       _TMR4_ISR 0BDD                                    _TMR4_CallBack 0C3A  
                                       _SSP1STAT 018F                                ??_PIN_MANAGER_IOC 0071  
                               __size_of_BCD2Bin 0013                         TMR0_ReadTimer@readValLow 007A  
                               __size_of_I2CFail 0013                                 __size_of_I2CRead 0028  
                               __size_of_I2COpen 001C                                ___wmul@multiplier 0071  
                                   _TimeAdjStore 007D                                         _BlankEnd 0048  
                                      main@shift 006E                                   RandomNum@upper 0062  
                                  _I2C1_DO_RESET 0000                                       _I2CIrqWait 0BE6  
                              ___lmul@multiplier 0071                                      ??_RandomNum 0061  
                              ??_TMR2_Initialize 0071                                         _HourType 0050  
                                       _RandomWL 02E6                                 __size_of_FixedWL 0073  
                                 BCDSetInc@value 0064                                 __size_of_Buttons 0036  
                                       _TimeFast 004A                                         _NumSplit 0C9E  
                                 ?_TMR4_CallBack 0070                                         _Settings 01AC  
                        ??_OSCILLATOR_Initialize 0071                                         _TubesOff 0BF1  
                               __size_of_TubesOn 0024                                ??_TMR0_StartTimer 0071  
                               __size_of_Startup 0086                                 __size_of___eetoc 000C  
                               __size_of___eetoi 0013                                 __size_of___awdiv 0051  
                               __size_of___awmod 0045                                      ??_SplitLoad 0071  
                       _TMR4_SetInterruptHandler 0BEB                          _IOCCF0_InterruptHandler 0044  
                                     _T0CON0bits 059E                                 _EEPROMBufferFill 0D91  
                                       __ptext10 0BEB                                         __ptext11 0C81  
                                       __ptext20 0388                                         __ptext12 0D21  
                                       __ptext21 0DAB                                         __ptext13 0C5D  
                                       __ptext30 0CE7                                         __ptext22 0700  
                                       __ptext14 0C30                                         __ptext31 0C03  
                                       __ptext23 0C9E                                         __ptext15 079A  
                                       __ptext40 05B9                                         __ptext32 0BE6  
                                       __ptext24 0DFF                                         __ptext16 0C1D  
                                       __ptext41 0E1C                                         __ptext33 0CD4  
                                       __ptext25 0424                                         __ptext17 0C14  
                                       __ptext50 0CC1                                         __ptext42 0C0B  
                                       __ptext34 0540                                         __ptext26 0CAF  
                                       __ptext18 062C                                         __ptext51 0D91  
                                       __ptext43 0EDC                                         __ptext35 069A  
                                       __ptext27 0D0D                                         __ptext19 01AC  
                                       __ptext60 0C45                                         __ptext52 0C26  
                                       __ptext44 0EAD                                         __ptext36 0F45  
                                       __ptext28 0E85                                         __ptext53 0D35  
                                       __ptext45 0FBB                                         __ptext37 0BDA  
                                       __ptext29 0DC6                                         __ptext46 0DE2  
                                       __ptext38 0BD7                                         __ptext55 0BDD  
                                       __ptext47 0751                                         __ptext39 02E6  
                                       __ptext56 0C3A                                         __ptext48 0D61  
                                       __ptext57 0BE1                                         __ptext49 0F0F  
                                       __ptext58 0C8F                                         __ptext59 0C51  
                                   _SSP1CON1bits 0190                                     _SSP1CON2bits 0191  
                                  ?_EEPROM_Write 0071                         _I2C1_CallbackReturnReset 0000  
                              ??_TMR4_Initialize 0073                                ??_PWM6_Initialize 0071  
                                  __size_of_main 0167                                    __size_of_rand 0033  
                               ??_TMR0_ReadTimer 0073                            __size_of_SW1Interrupt 000C  
                          __size_of_SW2Interrupt 000C                                         int$flags 007E  
                                  ??_DateDisplay 006A               __end_of_INTERRUPT_InterruptManager 0017  
                     _INTERRUPT_InterruptManager 0004                             __size_of_OtherSetInc 009C  
                                   _I2C1_DO_IDLE 0000                                     _I2C1_DO_RCEN 0000  
  _wr2RegCompleteHandler@i2c_simple_master$F2493 0000    _wr1RegCompleteHandler@i2c_simple_master$F2469 0000  
  _rd2RegCompleteHandler@i2c_simple_master$F2487 0000    _rd1RegCompleteHandler@i2c_simple_master$F2479 0000  
_rdBlkRegCompleteHandler@i2c_simple_master$F2499 0000                                  ___eecpymem@from 0071  
                                ___eecpymem@size 0072                                       _INTCONbits 000B  
                                    _NVMCON1bits 081E                         __size_of_TubeValuePicker 0066  
                                    ?_I2CIrqWait 0070                                   ??_EEPROM_Write 0072  
                                    _PWM6CONbits 038E                                     _SW1Interrupt 0C45  
                                       intlevel1 0000                                     _SW2Interrupt 0C51  
                                   ?_EEPROM_Read 0070                          ?_PIN_MANAGER_Initialize 0070  
                               Loader@shftregpln 0053                          _I2C1_CallbackReturnStop 0000  
                                ??_TMR4_CallBack 0070                             _I2C1_DO_ADDRESS_NACK 0000  
                       __size_of_I2C1_Initialize 0009                                    __pstringtext1 07DF  
                                     _SSP1DATPPS 1EC6                                       _SSP1CLKPPS 1EC5  
                                _TMR0_Initialize 0D21                              __end_of_DateDisplay 069A  
                    PWM6_LoadDutyValue@dutyValue 0057                                    ___eecpymem@cp 0074  
                                  ___eecpymem@to 0075                                       _TMR4_Start 0BD7  
                               ??_DisplayBufSave 0071                   __end_of_PIN_MANAGER_Initialize 07DF  
                                     _STATUSbits 0003                                  _PIN_MANAGER_IOC 0C8F  
                                EEPROM_Read@addr 0071                                   SplitLoad@first 0072  
                        _IOCCF1_InterruptHandler 0042                                     ___eetoc@addr 0078  
                                   ___eetoc@data 0077                                     ___eetoi@addr 0053  
                                   ___eetoi@data 0054  
