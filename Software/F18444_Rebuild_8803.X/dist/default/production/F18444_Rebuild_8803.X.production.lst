

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 21 22:46:25 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	16F18444
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	idataEEDATA,global,class=EEDATA,space=3,delta=2,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2,noexec
    11                           	psect	dataEEDATA,global,class=EEDATA,space=3,delta=2,noexec
    12                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text46,local,class=CODE,merge=1,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,delta=2
    75                           	psect	intentry,global,class=CODE,delta=2
    76                           	psect	text55,local,class=CODE,merge=1,delta=2
    77                           	psect	text56,local,class=CODE,merge=1,delta=2
    78                           	psect	text57,local,class=CODE,merge=1,delta=2
    79                           	psect	text58,local,class=CODE,merge=1,delta=2
    80                           	psect	text59,local,class=CODE,merge=1,delta=2
    81                           	psect	text60,local,class=CODE,merge=1,delta=2
    82                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    84                           	dabs	1,0x7E,2
    85     0000                     
    86                           ; Generated 19/07/2022 GMT
    87                           ; 
    88                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution. Publication is not required when
   102                           ;        this file is used in an embedded application.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC16F18444 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120     0000                     	;# 
   121     0001                     	;# 
   122     0002                     	;# 
   123     0003                     	;# 
   124     0004                     	;# 
   125     0005                     	;# 
   126     0006                     	;# 
   127     0007                     	;# 
   128     0008                     	;# 
   129     0009                     	;# 
   130     000A                     	;# 
   131     000B                     	;# 
   132     000C                     	;# 
   133     000D                     	;# 
   134     000E                     	;# 
   135     0012                     	;# 
   136     0013                     	;# 
   137     0014                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     008C                     	;# 
   142     008C                     	;# 
   143     008D                     	;# 
   144     008E                     	;# 
   145     008E                     	;# 
   146     008F                     	;# 
   147     0090                     	;# 
   148     0090                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0094                     	;# 
   155     0095                     	;# 
   156     0096                     	;# 
   157     0096                     	;# 
   158     0097                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009A                     	;# 
   162     009B                     	;# 
   163     009B                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009D                     	;# 
   167     009E                     	;# 
   168     009F                     	;# 
   169     010C                     	;# 
   170     010C                     	;# 
   171     010D                     	;# 
   172     010E                     	;# 
   173     010F                     	;# 
   174     010F                     	;# 
   175     0110                     	;# 
   176     0111                     	;# 
   177     0112                     	;# 
   178     0113                     	;# 
   179     0114                     	;# 
   180     0115                     	;# 
   181     0116                     	;# 
   182     0117                     	;# 
   183     0118                     	;# 
   184     0119                     	;# 
   185     0119                     	;# 
   186     0119                     	;# 
   187     011A                     	;# 
   188     011A                     	;# 
   189     011A                     	;# 
   190     011B                     	;# 
   191     011B                     	;# 
   192     011B                     	;# 
   193     011B                     	;# 
   194     011B                     	;# 
   195     011C                     	;# 
   196     011C                     	;# 
   197     011C                     	;# 
   198     011D                     	;# 
   199     011D                     	;# 
   200     011D                     	;# 
   201     011E                     	;# 
   202     011E                     	;# 
   203     011E                     	;# 
   204     011F                     	;# 
   205     011F                     	;# 
   206     011F                     	;# 
   207     011F                     	;# 
   208     011F                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211     018E                     	;# 
   212     018F                     	;# 
   213     0190                     	;# 
   214     0191                     	;# 
   215     0192                     	;# 
   216     020C                     	;# 
   217     020D                     	;# 
   218     020E                     	;# 
   219     020E                     	;# 
   220     020F                     	;# 
   221     020F                     	;# 
   222     0210                     	;# 
   223     0210                     	;# 
   224     0211                     	;# 
   225     0211                     	;# 
   226     0212                     	;# 
   227     0213                     	;# 
   228     0214                     	;# 
   229     0214                     	;# 
   230     0215                     	;# 
   231     0215                     	;# 
   232     0216                     	;# 
   233     0216                     	;# 
   234     0217                     	;# 
   235     0217                     	;# 
   236     0218                     	;# 
   237     0219                     	;# 
   238     021A                     	;# 
   239     021A                     	;# 
   240     021B                     	;# 
   241     021B                     	;# 
   242     021C                     	;# 
   243     021C                     	;# 
   244     021D                     	;# 
   245     021D                     	;# 
   246     021E                     	;# 
   247     021F                     	;# 
   248     028C                     	;# 
   249     028C                     	;# 
   250     028D                     	;# 
   251     028D                     	;# 
   252     028E                     	;# 
   253     028F                     	;# 
   254     0290                     	;# 
   255     0291                     	;# 
   256     0292                     	;# 
   257     0292                     	;# 
   258     0293                     	;# 
   259     0293                     	;# 
   260     0294                     	;# 
   261     0295                     	;# 
   262     0296                     	;# 
   263     0297                     	;# 
   264     0298                     	;# 
   265     0298                     	;# 
   266     0299                     	;# 
   267     0299                     	;# 
   268     029A                     	;# 
   269     029B                     	;# 
   270     029C                     	;# 
   271     029D                     	;# 
   272     029F                     	;# 
   273     030C                     	;# 
   274     030C                     	;# 
   275     030D                     	;# 
   276     030E                     	;# 
   277     030F                     	;# 
   278     0310                     	;# 
   279     0310                     	;# 
   280     0311                     	;# 
   281     0312                     	;# 
   282     0313                     	;# 
   283     0314                     	;# 
   284     0314                     	;# 
   285     0315                     	;# 
   286     0316                     	;# 
   287     0317                     	;# 
   288     0318                     	;# 
   289     0318                     	;# 
   290     0319                     	;# 
   291     031A                     	;# 
   292     031B                     	;# 
   293     038C                     	;# 
   294     038C                     	;# 
   295     038D                     	;# 
   296     038E                     	;# 
   297     0390                     	;# 
   298     0390                     	;# 
   299     0391                     	;# 
   300     0392                     	;# 
   301     048C                     	;# 
   302     048C                     	;# 
   303     048D                     	;# 
   304     048E                     	;# 
   305     048F                     	;# 
   306     048F                     	;# 
   307     0490                     	;# 
   308     0491                     	;# 
   309     0492                     	;# 
   310     0492                     	;# 
   311     0493                     	;# 
   312     0494                     	;# 
   313     0495                     	;# 
   314     0495                     	;# 
   315     0496                     	;# 
   316     0497                     	;# 
   317     0498                     	;# 
   318     0499                     	;# 
   319     049A                     	;# 
   320     049B                     	;# 
   321     049C                     	;# 
   322     049D                     	;# 
   323     058C                     	;# 
   324     058C                     	;# 
   325     058D                     	;# 
   326     058E                     	;# 
   327     058F                     	;# 
   328     058F                     	;# 
   329     0590                     	;# 
   330     0591                     	;# 
   331     0592                     	;# 
   332     0593                     	;# 
   333     059C                     	;# 
   334     059C                     	;# 
   335     059D                     	;# 
   336     059D                     	;# 
   337     059E                     	;# 
   338     059F                     	;# 
   339     060C                     	;# 
   340     060C                     	;# 
   341     060D                     	;# 
   342     060D                     	;# 
   343     060E                     	;# 
   344     060F                     	;# 
   345     0610                     	;# 
   346     0611                     	;# 
   347     0612                     	;# 
   348     0613                     	;# 
   349     0614                     	;# 
   350     0616                     	;# 
   351     0616                     	;# 
   352     0617                     	;# 
   353     0617                     	;# 
   354     0618                     	;# 
   355     0619                     	;# 
   356     061A                     	;# 
   357     061B                     	;# 
   358     061C                     	;# 
   359     061D                     	;# 
   360     061E                     	;# 
   361     070C                     	;# 
   362     070D                     	;# 
   363     070E                     	;# 
   364     070F                     	;# 
   365     0710                     	;# 
   366     0711                     	;# 
   367     0712                     	;# 
   368     0713                     	;# 
   369     0714                     	;# 
   370     0716                     	;# 
   371     0717                     	;# 
   372     0718                     	;# 
   373     0719                     	;# 
   374     071A                     	;# 
   375     071B                     	;# 
   376     071C                     	;# 
   377     071D                     	;# 
   378     071E                     	;# 
   379     0796                     	;# 
   380     0797                     	;# 
   381     0798                     	;# 
   382     0799                     	;# 
   383     079A                     	;# 
   384     079B                     	;# 
   385     079C                     	;# 
   386     079D                     	;# 
   387     080C                     	;# 
   388     080D                     	;# 
   389     080E                     	;# 
   390     080F                     	;# 
   391     0810                     	;# 
   392     0811                     	;# 
   393     0812                     	;# 
   394     0813                     	;# 
   395     0814                     	;# 
   396     081A                     	;# 
   397     081A                     	;# 
   398     081B                     	;# 
   399     081C                     	;# 
   400     081C                     	;# 
   401     081D                     	;# 
   402     081E                     	;# 
   403     081F                     	;# 
   404     088C                     	;# 
   405     088D                     	;# 
   406     088E                     	;# 
   407     088F                     	;# 
   408     0890                     	;# 
   409     0891                     	;# 
   410     0892                     	;# 
   411     0893                     	;# 
   412     0895                     	;# 
   413     0896                     	;# 
   414     0897                     	;# 
   415     0898                     	;# 
   416     0899                     	;# 
   417     089A                     	;# 
   418     089B                     	;# 
   419     090C                     	;# 
   420     090E                     	;# 
   421     090F                     	;# 
   422     091F                     	;# 
   423     098F                     	;# 
   424     098F                     	;# 
   425     0990                     	;# 
   426     0991                     	;# 
   427     0992                     	;# 
   428     0993                     	;# 
   429     0994                     	;# 
   430     0995                     	;# 
   431     0996                     	;# 
   432     0997                     	;# 
   433     1E0F                     	;# 
   434     1E10                     	;# 
   435     1E11                     	;# 
   436     1E12                     	;# 
   437     1E13                     	;# 
   438     1E14                     	;# 
   439     1E15                     	;# 
   440     1E16                     	;# 
   441     1E17                     	;# 
   442     1E18                     	;# 
   443     1E19                     	;# 
   444     1E1A                     	;# 
   445     1E1B                     	;# 
   446     1E1C                     	;# 
   447     1E1D                     	;# 
   448     1E1E                     	;# 
   449     1E1F                     	;# 
   450     1E20                     	;# 
   451     1E21                     	;# 
   452     1E22                     	;# 
   453     1E23                     	;# 
   454     1E24                     	;# 
   455     1E25                     	;# 
   456     1E26                     	;# 
   457     1E27                     	;# 
   458     1E28                     	;# 
   459     1E29                     	;# 
   460     1E2A                     	;# 
   461     1E2B                     	;# 
   462     1E2C                     	;# 
   463     1E2D                     	;# 
   464     1E2E                     	;# 
   465     1E2F                     	;# 
   466     1E30                     	;# 
   467     1E31                     	;# 
   468     1E32                     	;# 
   469     1E33                     	;# 
   470     1E34                     	;# 
   471     1E35                     	;# 
   472     1E36                     	;# 
   473     1E37                     	;# 
   474     1E8F                     	;# 
   475     1E90                     	;# 
   476     1E91                     	;# 
   477     1E92                     	;# 
   478     1E93                     	;# 
   479     1E94                     	;# 
   480     1E95                     	;# 
   481     1E96                     	;# 
   482     1E97                     	;# 
   483     1E9C                     	;# 
   484     1E9D                     	;# 
   485     1E9E                     	;# 
   486     1EA1                     	;# 
   487     1EA2                     	;# 
   488     1EA3                     	;# 
   489     1EA4                     	;# 
   490     1EA9                     	;# 
   491     1EAA                     	;# 
   492     1EB1                     	;# 
   493     1EB2                     	;# 
   494     1EB8                     	;# 
   495     1EB9                     	;# 
   496     1EBA                     	;# 
   497     1EBB                     	;# 
   498     1EBC                     	;# 
   499     1EBD                     	;# 
   500     1EBE                     	;# 
   501     1EC3                     	;# 
   502     1EC5                     	;# 
   503     1EC6                     	;# 
   504     1EC7                     	;# 
   505     1ECB                     	;# 
   506     1ECB                     	;# 
   507     1ECB                     	;# 
   508     1ECC                     	;# 
   509     1ECC                     	;# 
   510     1ECC                     	;# 
   511     1F10                     	;# 
   512     1F11                     	;# 
   513     1F12                     	;# 
   514     1F14                     	;# 
   515     1F15                     	;# 
   516     1F1C                     	;# 
   517     1F1D                     	;# 
   518     1F1E                     	;# 
   519     1F1F                     	;# 
   520     1F20                     	;# 
   521     1F21                     	;# 
   522     1F22                     	;# 
   523     1F23                     	;# 
   524     1F24                     	;# 
   525     1F25                     	;# 
   526     1F26                     	;# 
   527     1F27                     	;# 
   528     1F38                     	;# 
   529     1F39                     	;# 
   530     1F3A                     	;# 
   531     1F3B                     	;# 
   532     1F3C                     	;# 
   533     1F3D                     	;# 
   534     1F3E                     	;# 
   535     1F3F                     	;# 
   536     1F43                     	;# 
   537     1F44                     	;# 
   538     1F45                     	;# 
   539     1F46                     	;# 
   540     1F47                     	;# 
   541     1F48                     	;# 
   542     1F49                     	;# 
   543     1F4A                     	;# 
   544     1F4E                     	;# 
   545     1F4F                     	;# 
   546     1F50                     	;# 
   547     1F51                     	;# 
   548     1F52                     	;# 
   549     1F53                     	;# 
   550     1F54                     	;# 
   551     1F55                     	;# 
   552     1FE4                     	;# 
   553     1FE5                     	;# 
   554     1FE6                     	;# 
   555     1FE7                     	;# 
   556     1FE8                     	;# 
   557     1FE8                     	;# 
   558     1FE9                     	;# 
   559     1FEA                     	;# 
   560     1FEB                     	;# 
   561     1FED                     	;# 
   562     1FEE                     	;# 
   563     1FEF                     	;# 
   564     0000                     	;# 
   565     0001                     	;# 
   566     0002                     	;# 
   567     0003                     	;# 
   568     0004                     	;# 
   569     0005                     	;# 
   570     0006                     	;# 
   571     0007                     	;# 
   572     0008                     	;# 
   573     0009                     	;# 
   574     000A                     	;# 
   575     000B                     	;# 
   576     000C                     	;# 
   577     000D                     	;# 
   578     000E                     	;# 
   579     0012                     	;# 
   580     0013                     	;# 
   581     0014                     	;# 
   582     0018                     	;# 
   583     0019                     	;# 
   584     001A                     	;# 
   585     008C                     	;# 
   586     008C                     	;# 
   587     008D                     	;# 
   588     008E                     	;# 
   589     008E                     	;# 
   590     008F                     	;# 
   591     0090                     	;# 
   592     0090                     	;# 
   593     0091                     	;# 
   594     0092                     	;# 
   595     0092                     	;# 
   596     0093                     	;# 
   597     0094                     	;# 
   598     0094                     	;# 
   599     0095                     	;# 
   600     0096                     	;# 
   601     0096                     	;# 
   602     0097                     	;# 
   603     0098                     	;# 
   604     0099                     	;# 
   605     009A                     	;# 
   606     009B                     	;# 
   607     009B                     	;# 
   608     009C                     	;# 
   609     009D                     	;# 
   610     009D                     	;# 
   611     009E                     	;# 
   612     009F                     	;# 
   613     010C                     	;# 
   614     010C                     	;# 
   615     010D                     	;# 
   616     010E                     	;# 
   617     010F                     	;# 
   618     010F                     	;# 
   619     0110                     	;# 
   620     0111                     	;# 
   621     0112                     	;# 
   622     0113                     	;# 
   623     0114                     	;# 
   624     0115                     	;# 
   625     0116                     	;# 
   626     0117                     	;# 
   627     0118                     	;# 
   628     0119                     	;# 
   629     0119                     	;# 
   630     0119                     	;# 
   631     011A                     	;# 
   632     011A                     	;# 
   633     011A                     	;# 
   634     011B                     	;# 
   635     011B                     	;# 
   636     011B                     	;# 
   637     011B                     	;# 
   638     011B                     	;# 
   639     011C                     	;# 
   640     011C                     	;# 
   641     011C                     	;# 
   642     011D                     	;# 
   643     011D                     	;# 
   644     011D                     	;# 
   645     011E                     	;# 
   646     011E                     	;# 
   647     011E                     	;# 
   648     011F                     	;# 
   649     011F                     	;# 
   650     011F                     	;# 
   651     011F                     	;# 
   652     011F                     	;# 
   653     018C                     	;# 
   654     018D                     	;# 
   655     018E                     	;# 
   656     018F                     	;# 
   657     0190                     	;# 
   658     0191                     	;# 
   659     0192                     	;# 
   660     020C                     	;# 
   661     020D                     	;# 
   662     020E                     	;# 
   663     020E                     	;# 
   664     020F                     	;# 
   665     020F                     	;# 
   666     0210                     	;# 
   667     0210                     	;# 
   668     0211                     	;# 
   669     0211                     	;# 
   670     0212                     	;# 
   671     0213                     	;# 
   672     0214                     	;# 
   673     0214                     	;# 
   674     0215                     	;# 
   675     0215                     	;# 
   676     0216                     	;# 
   677     0216                     	;# 
   678     0217                     	;# 
   679     0217                     	;# 
   680     0218                     	;# 
   681     0219                     	;# 
   682     021A                     	;# 
   683     021A                     	;# 
   684     021B                     	;# 
   685     021B                     	;# 
   686     021C                     	;# 
   687     021C                     	;# 
   688     021D                     	;# 
   689     021D                     	;# 
   690     021E                     	;# 
   691     021F                     	;# 
   692     028C                     	;# 
   693     028C                     	;# 
   694     028D                     	;# 
   695     028D                     	;# 
   696     028E                     	;# 
   697     028F                     	;# 
   698     0290                     	;# 
   699     0291                     	;# 
   700     0292                     	;# 
   701     0292                     	;# 
   702     0293                     	;# 
   703     0293                     	;# 
   704     0294                     	;# 
   705     0295                     	;# 
   706     0296                     	;# 
   707     0297                     	;# 
   708     0298                     	;# 
   709     0298                     	;# 
   710     0299                     	;# 
   711     0299                     	;# 
   712     029A                     	;# 
   713     029B                     	;# 
   714     029C                     	;# 
   715     029D                     	;# 
   716     029F                     	;# 
   717     030C                     	;# 
   718     030C                     	;# 
   719     030D                     	;# 
   720     030E                     	;# 
   721     030F                     	;# 
   722     0310                     	;# 
   723     0310                     	;# 
   724     0311                     	;# 
   725     0312                     	;# 
   726     0313                     	;# 
   727     0314                     	;# 
   728     0314                     	;# 
   729     0315                     	;# 
   730     0316                     	;# 
   731     0317                     	;# 
   732     0318                     	;# 
   733     0318                     	;# 
   734     0319                     	;# 
   735     031A                     	;# 
   736     031B                     	;# 
   737     038C                     	;# 
   738     038C                     	;# 
   739     038D                     	;# 
   740     038E                     	;# 
   741     0390                     	;# 
   742     0390                     	;# 
   743     0391                     	;# 
   744     0392                     	;# 
   745     048C                     	;# 
   746     048C                     	;# 
   747     048D                     	;# 
   748     048E                     	;# 
   749     048F                     	;# 
   750     048F                     	;# 
   751     0490                     	;# 
   752     0491                     	;# 
   753     0492                     	;# 
   754     0492                     	;# 
   755     0493                     	;# 
   756     0494                     	;# 
   757     0495                     	;# 
   758     0495                     	;# 
   759     0496                     	;# 
   760     0497                     	;# 
   761     0498                     	;# 
   762     0499                     	;# 
   763     049A                     	;# 
   764     049B                     	;# 
   765     049C                     	;# 
   766     049D                     	;# 
   767     058C                     	;# 
   768     058C                     	;# 
   769     058D                     	;# 
   770     058E                     	;# 
   771     058F                     	;# 
   772     058F                     	;# 
   773     0590                     	;# 
   774     0591                     	;# 
   775     0592                     	;# 
   776     0593                     	;# 
   777     059C                     	;# 
   778     059C                     	;# 
   779     059D                     	;# 
   780     059D                     	;# 
   781     059E                     	;# 
   782     059F                     	;# 
   783     060C                     	;# 
   784     060C                     	;# 
   785     060D                     	;# 
   786     060D                     	;# 
   787     060E                     	;# 
   788     060F                     	;# 
   789     0610                     	;# 
   790     0611                     	;# 
   791     0612                     	;# 
   792     0613                     	;# 
   793     0614                     	;# 
   794     0616                     	;# 
   795     0616                     	;# 
   796     0617                     	;# 
   797     0617                     	;# 
   798     0618                     	;# 
   799     0619                     	;# 
   800     061A                     	;# 
   801     061B                     	;# 
   802     061C                     	;# 
   803     061D                     	;# 
   804     061E                     	;# 
   805     070C                     	;# 
   806     070D                     	;# 
   807     070E                     	;# 
   808     070F                     	;# 
   809     0710                     	;# 
   810     0711                     	;# 
   811     0712                     	;# 
   812     0713                     	;# 
   813     0714                     	;# 
   814     0716                     	;# 
   815     0717                     	;# 
   816     0718                     	;# 
   817     0719                     	;# 
   818     071A                     	;# 
   819     071B                     	;# 
   820     071C                     	;# 
   821     071D                     	;# 
   822     071E                     	;# 
   823     0796                     	;# 
   824     0797                     	;# 
   825     0798                     	;# 
   826     0799                     	;# 
   827     079A                     	;# 
   828     079B                     	;# 
   829     079C                     	;# 
   830     079D                     	;# 
   831     080C                     	;# 
   832     080D                     	;# 
   833     080E                     	;# 
   834     080F                     	;# 
   835     0810                     	;# 
   836     0811                     	;# 
   837     0812                     	;# 
   838     0813                     	;# 
   839     0814                     	;# 
   840     081A                     	;# 
   841     081A                     	;# 
   842     081B                     	;# 
   843     081C                     	;# 
   844     081C                     	;# 
   845     081D                     	;# 
   846     081E                     	;# 
   847     081F                     	;# 
   848     088C                     	;# 
   849     088D                     	;# 
   850     088E                     	;# 
   851     088F                     	;# 
   852     0890                     	;# 
   853     0891                     	;# 
   854     0892                     	;# 
   855     0893                     	;# 
   856     0895                     	;# 
   857     0896                     	;# 
   858     0897                     	;# 
   859     0898                     	;# 
   860     0899                     	;# 
   861     089A                     	;# 
   862     089B                     	;# 
   863     090C                     	;# 
   864     090E                     	;# 
   865     090F                     	;# 
   866     091F                     	;# 
   867     098F                     	;# 
   868     098F                     	;# 
   869     0990                     	;# 
   870     0991                     	;# 
   871     0992                     	;# 
   872     0993                     	;# 
   873     0994                     	;# 
   874     0995                     	;# 
   875     0996                     	;# 
   876     0997                     	;# 
   877     1E0F                     	;# 
   878     1E10                     	;# 
   879     1E11                     	;# 
   880     1E12                     	;# 
   881     1E13                     	;# 
   882     1E14                     	;# 
   883     1E15                     	;# 
   884     1E16                     	;# 
   885     1E17                     	;# 
   886     1E18                     	;# 
   887     1E19                     	;# 
   888     1E1A                     	;# 
   889     1E1B                     	;# 
   890     1E1C                     	;# 
   891     1E1D                     	;# 
   892     1E1E                     	;# 
   893     1E1F                     	;# 
   894     1E20                     	;# 
   895     1E21                     	;# 
   896     1E22                     	;# 
   897     1E23                     	;# 
   898     1E24                     	;# 
   899     1E25                     	;# 
   900     1E26                     	;# 
   901     1E27                     	;# 
   902     1E28                     	;# 
   903     1E29                     	;# 
   904     1E2A                     	;# 
   905     1E2B                     	;# 
   906     1E2C                     	;# 
   907     1E2D                     	;# 
   908     1E2E                     	;# 
   909     1E2F                     	;# 
   910     1E30                     	;# 
   911     1E31                     	;# 
   912     1E32                     	;# 
   913     1E33                     	;# 
   914     1E34                     	;# 
   915     1E35                     	;# 
   916     1E36                     	;# 
   917     1E37                     	;# 
   918     1E8F                     	;# 
   919     1E90                     	;# 
   920     1E91                     	;# 
   921     1E92                     	;# 
   922     1E93                     	;# 
   923     1E94                     	;# 
   924     1E95                     	;# 
   925     1E96                     	;# 
   926     1E97                     	;# 
   927     1E9C                     	;# 
   928     1E9D                     	;# 
   929     1E9E                     	;# 
   930     1EA1                     	;# 
   931     1EA2                     	;# 
   932     1EA3                     	;# 
   933     1EA4                     	;# 
   934     1EA9                     	;# 
   935     1EAA                     	;# 
   936     1EB1                     	;# 
   937     1EB2                     	;# 
   938     1EB8                     	;# 
   939     1EB9                     	;# 
   940     1EBA                     	;# 
   941     1EBB                     	;# 
   942     1EBC                     	;# 
   943     1EBD                     	;# 
   944     1EBE                     	;# 
   945     1EC3                     	;# 
   946     1EC5                     	;# 
   947     1EC6                     	;# 
   948     1EC7                     	;# 
   949     1ECB                     	;# 
   950     1ECB                     	;# 
   951     1ECB                     	;# 
   952     1ECC                     	;# 
   953     1ECC                     	;# 
   954     1ECC                     	;# 
   955     1F10                     	;# 
   956     1F11                     	;# 
   957     1F12                     	;# 
   958     1F14                     	;# 
   959     1F15                     	;# 
   960     1F1C                     	;# 
   961     1F1D                     	;# 
   962     1F1E                     	;# 
   963     1F1F                     	;# 
   964     1F20                     	;# 
   965     1F21                     	;# 
   966     1F22                     	;# 
   967     1F23                     	;# 
   968     1F24                     	;# 
   969     1F25                     	;# 
   970     1F26                     	;# 
   971     1F27                     	;# 
   972     1F38                     	;# 
   973     1F39                     	;# 
   974     1F3A                     	;# 
   975     1F3B                     	;# 
   976     1F3C                     	;# 
   977     1F3D                     	;# 
   978     1F3E                     	;# 
   979     1F3F                     	;# 
   980     1F43                     	;# 
   981     1F44                     	;# 
   982     1F45                     	;# 
   983     1F46                     	;# 
   984     1F47                     	;# 
   985     1F48                     	;# 
   986     1F49                     	;# 
   987     1F4A                     	;# 
   988     1F4E                     	;# 
   989     1F4F                     	;# 
   990     1F50                     	;# 
   991     1F51                     	;# 
   992     1F52                     	;# 
   993     1F53                     	;# 
   994     1F54                     	;# 
   995     1F55                     	;# 
   996     1FE4                     	;# 
   997     1FE5                     	;# 
   998     1FE6                     	;# 
   999     1FE7                     	;# 
  1000     1FE8                     	;# 
  1001     1FE8                     	;# 
  1002     1FE9                     	;# 
  1003     1FEA                     	;# 
  1004     1FEB                     	;# 
  1005     1FED                     	;# 
  1006     1FEE                     	;# 
  1007     1FEF                     	;# 
  1008     0000                     	;# 
  1009     0001                     	;# 
  1010     0002                     	;# 
  1011     0003                     	;# 
  1012     0004                     	;# 
  1013     0005                     	;# 
  1014     0006                     	;# 
  1015     0007                     	;# 
  1016     0008                     	;# 
  1017     0009                     	;# 
  1018     000A                     	;# 
  1019     000B                     	;# 
  1020     000C                     	;# 
  1021     000D                     	;# 
  1022     000E                     	;# 
  1023     0012                     	;# 
  1024     0013                     	;# 
  1025     0014                     	;# 
  1026     0018                     	;# 
  1027     0019                     	;# 
  1028     001A                     	;# 
  1029     008C                     	;# 
  1030     008C                     	;# 
  1031     008D                     	;# 
  1032     008E                     	;# 
  1033     008E                     	;# 
  1034     008F                     	;# 
  1035     0090                     	;# 
  1036     0090                     	;# 
  1037     0091                     	;# 
  1038     0092                     	;# 
  1039     0092                     	;# 
  1040     0093                     	;# 
  1041     0094                     	;# 
  1042     0094                     	;# 
  1043     0095                     	;# 
  1044     0096                     	;# 
  1045     0096                     	;# 
  1046     0097                     	;# 
  1047     0098                     	;# 
  1048     0099                     	;# 
  1049     009A                     	;# 
  1050     009B                     	;# 
  1051     009B                     	;# 
  1052     009C                     	;# 
  1053     009D                     	;# 
  1054     009D                     	;# 
  1055     009E                     	;# 
  1056     009F                     	;# 
  1057     010C                     	;# 
  1058     010C                     	;# 
  1059     010D                     	;# 
  1060     010E                     	;# 
  1061     010F                     	;# 
  1062     010F                     	;# 
  1063     0110                     	;# 
  1064     0111                     	;# 
  1065     0112                     	;# 
  1066     0113                     	;# 
  1067     0114                     	;# 
  1068     0115                     	;# 
  1069     0116                     	;# 
  1070     0117                     	;# 
  1071     0118                     	;# 
  1072     0119                     	;# 
  1073     0119                     	;# 
  1074     0119                     	;# 
  1075     011A                     	;# 
  1076     011A                     	;# 
  1077     011A                     	;# 
  1078     011B                     	;# 
  1079     011B                     	;# 
  1080     011B                     	;# 
  1081     011B                     	;# 
  1082     011B                     	;# 
  1083     011C                     	;# 
  1084     011C                     	;# 
  1085     011C                     	;# 
  1086     011D                     	;# 
  1087     011D                     	;# 
  1088     011D                     	;# 
  1089     011E                     	;# 
  1090     011E                     	;# 
  1091     011E                     	;# 
  1092     011F                     	;# 
  1093     011F                     	;# 
  1094     011F                     	;# 
  1095     011F                     	;# 
  1096     011F                     	;# 
  1097     018C                     	;# 
  1098     018D                     	;# 
  1099     018E                     	;# 
  1100     018F                     	;# 
  1101     0190                     	;# 
  1102     0191                     	;# 
  1103     0192                     	;# 
  1104     020C                     	;# 
  1105     020D                     	;# 
  1106     020E                     	;# 
  1107     020E                     	;# 
  1108     020F                     	;# 
  1109     020F                     	;# 
  1110     0210                     	;# 
  1111     0210                     	;# 
  1112     0211                     	;# 
  1113     0211                     	;# 
  1114     0212                     	;# 
  1115     0213                     	;# 
  1116     0214                     	;# 
  1117     0214                     	;# 
  1118     0215                     	;# 
  1119     0215                     	;# 
  1120     0216                     	;# 
  1121     0216                     	;# 
  1122     0217                     	;# 
  1123     0217                     	;# 
  1124     0218                     	;# 
  1125     0219                     	;# 
  1126     021A                     	;# 
  1127     021A                     	;# 
  1128     021B                     	;# 
  1129     021B                     	;# 
  1130     021C                     	;# 
  1131     021C                     	;# 
  1132     021D                     	;# 
  1133     021D                     	;# 
  1134     021E                     	;# 
  1135     021F                     	;# 
  1136     028C                     	;# 
  1137     028C                     	;# 
  1138     028D                     	;# 
  1139     028D                     	;# 
  1140     028E                     	;# 
  1141     028F                     	;# 
  1142     0290                     	;# 
  1143     0291                     	;# 
  1144     0292                     	;# 
  1145     0292                     	;# 
  1146     0293                     	;# 
  1147     0293                     	;# 
  1148     0294                     	;# 
  1149     0295                     	;# 
  1150     0296                     	;# 
  1151     0297                     	;# 
  1152     0298                     	;# 
  1153     0298                     	;# 
  1154     0299                     	;# 
  1155     0299                     	;# 
  1156     029A                     	;# 
  1157     029B                     	;# 
  1158     029C                     	;# 
  1159     029D                     	;# 
  1160     029F                     	;# 
  1161     030C                     	;# 
  1162     030C                     	;# 
  1163     030D                     	;# 
  1164     030E                     	;# 
  1165     030F                     	;# 
  1166     0310                     	;# 
  1167     0310                     	;# 
  1168     0311                     	;# 
  1169     0312                     	;# 
  1170     0313                     	;# 
  1171     0314                     	;# 
  1172     0314                     	;# 
  1173     0315                     	;# 
  1174     0316                     	;# 
  1175     0317                     	;# 
  1176     0318                     	;# 
  1177     0318                     	;# 
  1178     0319                     	;# 
  1179     031A                     	;# 
  1180     031B                     	;# 
  1181     038C                     	;# 
  1182     038C                     	;# 
  1183     038D                     	;# 
  1184     038E                     	;# 
  1185     0390                     	;# 
  1186     0390                     	;# 
  1187     0391                     	;# 
  1188     0392                     	;# 
  1189     048C                     	;# 
  1190     048C                     	;# 
  1191     048D                     	;# 
  1192     048E                     	;# 
  1193     048F                     	;# 
  1194     048F                     	;# 
  1195     0490                     	;# 
  1196     0491                     	;# 
  1197     0492                     	;# 
  1198     0492                     	;# 
  1199     0493                     	;# 
  1200     0494                     	;# 
  1201     0495                     	;# 
  1202     0495                     	;# 
  1203     0496                     	;# 
  1204     0497                     	;# 
  1205     0498                     	;# 
  1206     0499                     	;# 
  1207     049A                     	;# 
  1208     049B                     	;# 
  1209     049C                     	;# 
  1210     049D                     	;# 
  1211     058C                     	;# 
  1212     058C                     	;# 
  1213     058D                     	;# 
  1214     058E                     	;# 
  1215     058F                     	;# 
  1216     058F                     	;# 
  1217     0590                     	;# 
  1218     0591                     	;# 
  1219     0592                     	;# 
  1220     0593                     	;# 
  1221     059C                     	;# 
  1222     059C                     	;# 
  1223     059D                     	;# 
  1224     059D                     	;# 
  1225     059E                     	;# 
  1226     059F                     	;# 
  1227     060C                     	;# 
  1228     060C                     	;# 
  1229     060D                     	;# 
  1230     060D                     	;# 
  1231     060E                     	;# 
  1232     060F                     	;# 
  1233     0610                     	;# 
  1234     0611                     	;# 
  1235     0612                     	;# 
  1236     0613                     	;# 
  1237     0614                     	;# 
  1238     0616                     	;# 
  1239     0616                     	;# 
  1240     0617                     	;# 
  1241     0617                     	;# 
  1242     0618                     	;# 
  1243     0619                     	;# 
  1244     061A                     	;# 
  1245     061B                     	;# 
  1246     061C                     	;# 
  1247     061D                     	;# 
  1248     061E                     	;# 
  1249     070C                     	;# 
  1250     070D                     	;# 
  1251     070E                     	;# 
  1252     070F                     	;# 
  1253     0710                     	;# 
  1254     0711                     	;# 
  1255     0712                     	;# 
  1256     0713                     	;# 
  1257     0714                     	;# 
  1258     0716                     	;# 
  1259     0717                     	;# 
  1260     0718                     	;# 
  1261     0719                     	;# 
  1262     071A                     	;# 
  1263     071B                     	;# 
  1264     071C                     	;# 
  1265     071D                     	;# 
  1266     071E                     	;# 
  1267     0796                     	;# 
  1268     0797                     	;# 
  1269     0798                     	;# 
  1270     0799                     	;# 
  1271     079A                     	;# 
  1272     079B                     	;# 
  1273     079C                     	;# 
  1274     079D                     	;# 
  1275     080C                     	;# 
  1276     080D                     	;# 
  1277     080E                     	;# 
  1278     080F                     	;# 
  1279     0810                     	;# 
  1280     0811                     	;# 
  1281     0812                     	;# 
  1282     0813                     	;# 
  1283     0814                     	;# 
  1284     081A                     	;# 
  1285     081A                     	;# 
  1286     081B                     	;# 
  1287     081C                     	;# 
  1288     081C                     	;# 
  1289     081D                     	;# 
  1290     081E                     	;# 
  1291     081F                     	;# 
  1292     088C                     	;# 
  1293     088D                     	;# 
  1294     088E                     	;# 
  1295     088F                     	;# 
  1296     0890                     	;# 
  1297     0891                     	;# 
  1298     0892                     	;# 
  1299     0893                     	;# 
  1300     0895                     	;# 
  1301     0896                     	;# 
  1302     0897                     	;# 
  1303     0898                     	;# 
  1304     0899                     	;# 
  1305     089A                     	;# 
  1306     089B                     	;# 
  1307     090C                     	;# 
  1308     090E                     	;# 
  1309     090F                     	;# 
  1310     091F                     	;# 
  1311     098F                     	;# 
  1312     098F                     	;# 
  1313     0990                     	;# 
  1314     0991                     	;# 
  1315     0992                     	;# 
  1316     0993                     	;# 
  1317     0994                     	;# 
  1318     0995                     	;# 
  1319     0996                     	;# 
  1320     0997                     	;# 
  1321     1E0F                     	;# 
  1322     1E10                     	;# 
  1323     1E11                     	;# 
  1324     1E12                     	;# 
  1325     1E13                     	;# 
  1326     1E14                     	;# 
  1327     1E15                     	;# 
  1328     1E16                     	;# 
  1329     1E17                     	;# 
  1330     1E18                     	;# 
  1331     1E19                     	;# 
  1332     1E1A                     	;# 
  1333     1E1B                     	;# 
  1334     1E1C                     	;# 
  1335     1E1D                     	;# 
  1336     1E1E                     	;# 
  1337     1E1F                     	;# 
  1338     1E20                     	;# 
  1339     1E21                     	;# 
  1340     1E22                     	;# 
  1341     1E23                     	;# 
  1342     1E24                     	;# 
  1343     1E25                     	;# 
  1344     1E26                     	;# 
  1345     1E27                     	;# 
  1346     1E28                     	;# 
  1347     1E29                     	;# 
  1348     1E2A                     	;# 
  1349     1E2B                     	;# 
  1350     1E2C                     	;# 
  1351     1E2D                     	;# 
  1352     1E2E                     	;# 
  1353     1E2F                     	;# 
  1354     1E30                     	;# 
  1355     1E31                     	;# 
  1356     1E32                     	;# 
  1357     1E33                     	;# 
  1358     1E34                     	;# 
  1359     1E35                     	;# 
  1360     1E36                     	;# 
  1361     1E37                     	;# 
  1362     1E8F                     	;# 
  1363     1E90                     	;# 
  1364     1E91                     	;# 
  1365     1E92                     	;# 
  1366     1E93                     	;# 
  1367     1E94                     	;# 
  1368     1E95                     	;# 
  1369     1E96                     	;# 
  1370     1E97                     	;# 
  1371     1E9C                     	;# 
  1372     1E9D                     	;# 
  1373     1E9E                     	;# 
  1374     1EA1                     	;# 
  1375     1EA2                     	;# 
  1376     1EA3                     	;# 
  1377     1EA4                     	;# 
  1378     1EA9                     	;# 
  1379     1EAA                     	;# 
  1380     1EB1                     	;# 
  1381     1EB2                     	;# 
  1382     1EB8                     	;# 
  1383     1EB9                     	;# 
  1384     1EBA                     	;# 
  1385     1EBB                     	;# 
  1386     1EBC                     	;# 
  1387     1EBD                     	;# 
  1388     1EBE                     	;# 
  1389     1EC3                     	;# 
  1390     1EC5                     	;# 
  1391     1EC6                     	;# 
  1392     1EC7                     	;# 
  1393     1ECB                     	;# 
  1394     1ECB                     	;# 
  1395     1ECB                     	;# 
  1396     1ECC                     	;# 
  1397     1ECC                     	;# 
  1398     1ECC                     	;# 
  1399     1F10                     	;# 
  1400     1F11                     	;# 
  1401     1F12                     	;# 
  1402     1F14                     	;# 
  1403     1F15                     	;# 
  1404     1F1C                     	;# 
  1405     1F1D                     	;# 
  1406     1F1E                     	;# 
  1407     1F1F                     	;# 
  1408     1F20                     	;# 
  1409     1F21                     	;# 
  1410     1F22                     	;# 
  1411     1F23                     	;# 
  1412     1F24                     	;# 
  1413     1F25                     	;# 
  1414     1F26                     	;# 
  1415     1F27                     	;# 
  1416     1F38                     	;# 
  1417     1F39                     	;# 
  1418     1F3A                     	;# 
  1419     1F3B                     	;# 
  1420     1F3C                     	;# 
  1421     1F3D                     	;# 
  1422     1F3E                     	;# 
  1423     1F3F                     	;# 
  1424     1F43                     	;# 
  1425     1F44                     	;# 
  1426     1F45                     	;# 
  1427     1F46                     	;# 
  1428     1F47                     	;# 
  1429     1F48                     	;# 
  1430     1F49                     	;# 
  1431     1F4A                     	;# 
  1432     1F4E                     	;# 
  1433     1F4F                     	;# 
  1434     1F50                     	;# 
  1435     1F51                     	;# 
  1436     1F52                     	;# 
  1437     1F53                     	;# 
  1438     1F54                     	;# 
  1439     1F55                     	;# 
  1440     1FE4                     	;# 
  1441     1FE5                     	;# 
  1442     1FE6                     	;# 
  1443     1FE7                     	;# 
  1444     1FE8                     	;# 
  1445     1FE8                     	;# 
  1446     1FE9                     	;# 
  1447     1FEA                     	;# 
  1448     1FEB                     	;# 
  1449     1FED                     	;# 
  1450     1FEE                     	;# 
  1451     1FEF                     	;# 
  1452     0000                     	;# 
  1453     0001                     	;# 
  1454     0002                     	;# 
  1455     0003                     	;# 
  1456     0004                     	;# 
  1457     0005                     	;# 
  1458     0006                     	;# 
  1459     0007                     	;# 
  1460     0008                     	;# 
  1461     0009                     	;# 
  1462     000A                     	;# 
  1463     000B                     	;# 
  1464     000C                     	;# 
  1465     000D                     	;# 
  1466     000E                     	;# 
  1467     0012                     	;# 
  1468     0013                     	;# 
  1469     0014                     	;# 
  1470     0018                     	;# 
  1471     0019                     	;# 
  1472     001A                     	;# 
  1473     008C                     	;# 
  1474     008C                     	;# 
  1475     008D                     	;# 
  1476     008E                     	;# 
  1477     008E                     	;# 
  1478     008F                     	;# 
  1479     0090                     	;# 
  1480     0090                     	;# 
  1481     0091                     	;# 
  1482     0092                     	;# 
  1483     0092                     	;# 
  1484     0093                     	;# 
  1485     0094                     	;# 
  1486     0094                     	;# 
  1487     0095                     	;# 
  1488     0096                     	;# 
  1489     0096                     	;# 
  1490     0097                     	;# 
  1491     0098                     	;# 
  1492     0099                     	;# 
  1493     009A                     	;# 
  1494     009B                     	;# 
  1495     009B                     	;# 
  1496     009C                     	;# 
  1497     009D                     	;# 
  1498     009D                     	;# 
  1499     009E                     	;# 
  1500     009F                     	;# 
  1501     010C                     	;# 
  1502     010C                     	;# 
  1503     010D                     	;# 
  1504     010E                     	;# 
  1505     010F                     	;# 
  1506     010F                     	;# 
  1507     0110                     	;# 
  1508     0111                     	;# 
  1509     0112                     	;# 
  1510     0113                     	;# 
  1511     0114                     	;# 
  1512     0115                     	;# 
  1513     0116                     	;# 
  1514     0117                     	;# 
  1515     0118                     	;# 
  1516     0119                     	;# 
  1517     0119                     	;# 
  1518     0119                     	;# 
  1519     011A                     	;# 
  1520     011A                     	;# 
  1521     011A                     	;# 
  1522     011B                     	;# 
  1523     011B                     	;# 
  1524     011B                     	;# 
  1525     011B                     	;# 
  1526     011B                     	;# 
  1527     011C                     	;# 
  1528     011C                     	;# 
  1529     011C                     	;# 
  1530     011D                     	;# 
  1531     011D                     	;# 
  1532     011D                     	;# 
  1533     011E                     	;# 
  1534     011E                     	;# 
  1535     011E                     	;# 
  1536     011F                     	;# 
  1537     011F                     	;# 
  1538     011F                     	;# 
  1539     011F                     	;# 
  1540     011F                     	;# 
  1541     018C                     	;# 
  1542     018D                     	;# 
  1543     018E                     	;# 
  1544     018F                     	;# 
  1545     0190                     	;# 
  1546     0191                     	;# 
  1547     0192                     	;# 
  1548     020C                     	;# 
  1549     020D                     	;# 
  1550     020E                     	;# 
  1551     020E                     	;# 
  1552     020F                     	;# 
  1553     020F                     	;# 
  1554     0210                     	;# 
  1555     0210                     	;# 
  1556     0211                     	;# 
  1557     0211                     	;# 
  1558     0212                     	;# 
  1559     0213                     	;# 
  1560     0214                     	;# 
  1561     0214                     	;# 
  1562     0215                     	;# 
  1563     0215                     	;# 
  1564     0216                     	;# 
  1565     0216                     	;# 
  1566     0217                     	;# 
  1567     0217                     	;# 
  1568     0218                     	;# 
  1569     0219                     	;# 
  1570     021A                     	;# 
  1571     021A                     	;# 
  1572     021B                     	;# 
  1573     021B                     	;# 
  1574     021C                     	;# 
  1575     021C                     	;# 
  1576     021D                     	;# 
  1577     021D                     	;# 
  1578     021E                     	;# 
  1579     021F                     	;# 
  1580     028C                     	;# 
  1581     028C                     	;# 
  1582     028D                     	;# 
  1583     028D                     	;# 
  1584     028E                     	;# 
  1585     028F                     	;# 
  1586     0290                     	;# 
  1587     0291                     	;# 
  1588     0292                     	;# 
  1589     0292                     	;# 
  1590     0293                     	;# 
  1591     0293                     	;# 
  1592     0294                     	;# 
  1593     0295                     	;# 
  1594     0296                     	;# 
  1595     0297                     	;# 
  1596     0298                     	;# 
  1597     0298                     	;# 
  1598     0299                     	;# 
  1599     0299                     	;# 
  1600     029A                     	;# 
  1601     029B                     	;# 
  1602     029C                     	;# 
  1603     029D                     	;# 
  1604     029F                     	;# 
  1605     030C                     	;# 
  1606     030C                     	;# 
  1607     030D                     	;# 
  1608     030E                     	;# 
  1609     030F                     	;# 
  1610     0310                     	;# 
  1611     0310                     	;# 
  1612     0311                     	;# 
  1613     0312                     	;# 
  1614     0313                     	;# 
  1615     0314                     	;# 
  1616     0314                     	;# 
  1617     0315                     	;# 
  1618     0316                     	;# 
  1619     0317                     	;# 
  1620     0318                     	;# 
  1621     0318                     	;# 
  1622     0319                     	;# 
  1623     031A                     	;# 
  1624     031B                     	;# 
  1625     038C                     	;# 
  1626     038C                     	;# 
  1627     038D                     	;# 
  1628     038E                     	;# 
  1629     0390                     	;# 
  1630     0390                     	;# 
  1631     0391                     	;# 
  1632     0392                     	;# 
  1633     048C                     	;# 
  1634     048C                     	;# 
  1635     048D                     	;# 
  1636     048E                     	;# 
  1637     048F                     	;# 
  1638     048F                     	;# 
  1639     0490                     	;# 
  1640     0491                     	;# 
  1641     0492                     	;# 
  1642     0492                     	;# 
  1643     0493                     	;# 
  1644     0494                     	;# 
  1645     0495                     	;# 
  1646     0495                     	;# 
  1647     0496                     	;# 
  1648     0497                     	;# 
  1649     0498                     	;# 
  1650     0499                     	;# 
  1651     049A                     	;# 
  1652     049B                     	;# 
  1653     049C                     	;# 
  1654     049D                     	;# 
  1655     058C                     	;# 
  1656     058C                     	;# 
  1657     058D                     	;# 
  1658     058E                     	;# 
  1659     058F                     	;# 
  1660     058F                     	;# 
  1661     0590                     	;# 
  1662     0591                     	;# 
  1663     0592                     	;# 
  1664     0593                     	;# 
  1665     059C                     	;# 
  1666     059C                     	;# 
  1667     059D                     	;# 
  1668     059D                     	;# 
  1669     059E                     	;# 
  1670     059F                     	;# 
  1671     060C                     	;# 
  1672     060C                     	;# 
  1673     060D                     	;# 
  1674     060D                     	;# 
  1675     060E                     	;# 
  1676     060F                     	;# 
  1677     0610                     	;# 
  1678     0611                     	;# 
  1679     0612                     	;# 
  1680     0613                     	;# 
  1681     0614                     	;# 
  1682     0616                     	;# 
  1683     0616                     	;# 
  1684     0617                     	;# 
  1685     0617                     	;# 
  1686     0618                     	;# 
  1687     0619                     	;# 
  1688     061A                     	;# 
  1689     061B                     	;# 
  1690     061C                     	;# 
  1691     061D                     	;# 
  1692     061E                     	;# 
  1693     070C                     	;# 
  1694     070D                     	;# 
  1695     070E                     	;# 
  1696     070F                     	;# 
  1697     0710                     	;# 
  1698     0711                     	;# 
  1699     0712                     	;# 
  1700     0713                     	;# 
  1701     0714                     	;# 
  1702     0716                     	;# 
  1703     0717                     	;# 
  1704     0718                     	;# 
  1705     0719                     	;# 
  1706     071A                     	;# 
  1707     071B                     	;# 
  1708     071C                     	;# 
  1709     071D                     	;# 
  1710     071E                     	;# 
  1711     0796                     	;# 
  1712     0797                     	;# 
  1713     0798                     	;# 
  1714     0799                     	;# 
  1715     079A                     	;# 
  1716     079B                     	;# 
  1717     079C                     	;# 
  1718     079D                     	;# 
  1719     080C                     	;# 
  1720     080D                     	;# 
  1721     080E                     	;# 
  1722     080F                     	;# 
  1723     0810                     	;# 
  1724     0811                     	;# 
  1725     0812                     	;# 
  1726     0813                     	;# 
  1727     0814                     	;# 
  1728     081A                     	;# 
  1729     081A                     	;# 
  1730     081B                     	;# 
  1731     081C                     	;# 
  1732     081C                     	;# 
  1733     081D                     	;# 
  1734     081E                     	;# 
  1735     081F                     	;# 
  1736     088C                     	;# 
  1737     088D                     	;# 
  1738     088E                     	;# 
  1739     088F                     	;# 
  1740     0890                     	;# 
  1741     0891                     	;# 
  1742     0892                     	;# 
  1743     0893                     	;# 
  1744     0895                     	;# 
  1745     0896                     	;# 
  1746     0897                     	;# 
  1747     0898                     	;# 
  1748     0899                     	;# 
  1749     089A                     	;# 
  1750     089B                     	;# 
  1751     090C                     	;# 
  1752     090E                     	;# 
  1753     090F                     	;# 
  1754     091F                     	;# 
  1755     098F                     	;# 
  1756     098F                     	;# 
  1757     0990                     	;# 
  1758     0991                     	;# 
  1759     0992                     	;# 
  1760     0993                     	;# 
  1761     0994                     	;# 
  1762     0995                     	;# 
  1763     0996                     	;# 
  1764     0997                     	;# 
  1765     1E0F                     	;# 
  1766     1E10                     	;# 
  1767     1E11                     	;# 
  1768     1E12                     	;# 
  1769     1E13                     	;# 
  1770     1E14                     	;# 
  1771     1E15                     	;# 
  1772     1E16                     	;# 
  1773     1E17                     	;# 
  1774     1E18                     	;# 
  1775     1E19                     	;# 
  1776     1E1A                     	;# 
  1777     1E1B                     	;# 
  1778     1E1C                     	;# 
  1779     1E1D                     	;# 
  1780     1E1E                     	;# 
  1781     1E1F                     	;# 
  1782     1E20                     	;# 
  1783     1E21                     	;# 
  1784     1E22                     	;# 
  1785     1E23                     	;# 
  1786     1E24                     	;# 
  1787     1E25                     	;# 
  1788     1E26                     	;# 
  1789     1E27                     	;# 
  1790     1E28                     	;# 
  1791     1E29                     	;# 
  1792     1E2A                     	;# 
  1793     1E2B                     	;# 
  1794     1E2C                     	;# 
  1795     1E2D                     	;# 
  1796     1E2E                     	;# 
  1797     1E2F                     	;# 
  1798     1E30                     	;# 
  1799     1E31                     	;# 
  1800     1E32                     	;# 
  1801     1E33                     	;# 
  1802     1E34                     	;# 
  1803     1E35                     	;# 
  1804     1E36                     	;# 
  1805     1E37                     	;# 
  1806     1E8F                     	;# 
  1807     1E90                     	;# 
  1808     1E91                     	;# 
  1809     1E92                     	;# 
  1810     1E93                     	;# 
  1811     1E94                     	;# 
  1812     1E95                     	;# 
  1813     1E96                     	;# 
  1814     1E97                     	;# 
  1815     1E9C                     	;# 
  1816     1E9D                     	;# 
  1817     1E9E                     	;# 
  1818     1EA1                     	;# 
  1819     1EA2                     	;# 
  1820     1EA3                     	;# 
  1821     1EA4                     	;# 
  1822     1EA9                     	;# 
  1823     1EAA                     	;# 
  1824     1EB1                     	;# 
  1825     1EB2                     	;# 
  1826     1EB8                     	;# 
  1827     1EB9                     	;# 
  1828     1EBA                     	;# 
  1829     1EBB                     	;# 
  1830     1EBC                     	;# 
  1831     1EBD                     	;# 
  1832     1EBE                     	;# 
  1833     1EC3                     	;# 
  1834     1EC5                     	;# 
  1835     1EC6                     	;# 
  1836     1EC7                     	;# 
  1837     1ECB                     	;# 
  1838     1ECB                     	;# 
  1839     1ECB                     	;# 
  1840     1ECC                     	;# 
  1841     1ECC                     	;# 
  1842     1ECC                     	;# 
  1843     1F10                     	;# 
  1844     1F11                     	;# 
  1845     1F12                     	;# 
  1846     1F14                     	;# 
  1847     1F15                     	;# 
  1848     1F1C                     	;# 
  1849     1F1D                     	;# 
  1850     1F1E                     	;# 
  1851     1F1F                     	;# 
  1852     1F20                     	;# 
  1853     1F21                     	;# 
  1854     1F22                     	;# 
  1855     1F23                     	;# 
  1856     1F24                     	;# 
  1857     1F25                     	;# 
  1858     1F26                     	;# 
  1859     1F27                     	;# 
  1860     1F38                     	;# 
  1861     1F39                     	;# 
  1862     1F3A                     	;# 
  1863     1F3B                     	;# 
  1864     1F3C                     	;# 
  1865     1F3D                     	;# 
  1866     1F3E                     	;# 
  1867     1F3F                     	;# 
  1868     1F43                     	;# 
  1869     1F44                     	;# 
  1870     1F45                     	;# 
  1871     1F46                     	;# 
  1872     1F47                     	;# 
  1873     1F48                     	;# 
  1874     1F49                     	;# 
  1875     1F4A                     	;# 
  1876     1F4E                     	;# 
  1877     1F4F                     	;# 
  1878     1F50                     	;# 
  1879     1F51                     	;# 
  1880     1F52                     	;# 
  1881     1F53                     	;# 
  1882     1F54                     	;# 
  1883     1F55                     	;# 
  1884     1FE4                     	;# 
  1885     1FE5                     	;# 
  1886     1FE6                     	;# 
  1887     1FE7                     	;# 
  1888     1FE8                     	;# 
  1889     1FE8                     	;# 
  1890     1FE9                     	;# 
  1891     1FEA                     	;# 
  1892     1FEB                     	;# 
  1893     1FED                     	;# 
  1894     1FEE                     	;# 
  1895     1FEF                     	;# 
  1896     0000                     	;# 
  1897     0001                     	;# 
  1898     0002                     	;# 
  1899     0003                     	;# 
  1900     0004                     	;# 
  1901     0005                     	;# 
  1902     0006                     	;# 
  1903     0007                     	;# 
  1904     0008                     	;# 
  1905     0009                     	;# 
  1906     000A                     	;# 
  1907     000B                     	;# 
  1908     000C                     	;# 
  1909     000D                     	;# 
  1910     000E                     	;# 
  1911     0012                     	;# 
  1912     0013                     	;# 
  1913     0014                     	;# 
  1914     0018                     	;# 
  1915     0019                     	;# 
  1916     001A                     	;# 
  1917     008C                     	;# 
  1918     008C                     	;# 
  1919     008D                     	;# 
  1920     008E                     	;# 
  1921     008E                     	;# 
  1922     008F                     	;# 
  1923     0090                     	;# 
  1924     0090                     	;# 
  1925     0091                     	;# 
  1926     0092                     	;# 
  1927     0092                     	;# 
  1928     0093                     	;# 
  1929     0094                     	;# 
  1930     0094                     	;# 
  1931     0095                     	;# 
  1932     0096                     	;# 
  1933     0096                     	;# 
  1934     0097                     	;# 
  1935     0098                     	;# 
  1936     0099                     	;# 
  1937     009A                     	;# 
  1938     009B                     	;# 
  1939     009B                     	;# 
  1940     009C                     	;# 
  1941     009D                     	;# 
  1942     009D                     	;# 
  1943     009E                     	;# 
  1944     009F                     	;# 
  1945     010C                     	;# 
  1946     010C                     	;# 
  1947     010D                     	;# 
  1948     010E                     	;# 
  1949     010F                     	;# 
  1950     010F                     	;# 
  1951     0110                     	;# 
  1952     0111                     	;# 
  1953     0112                     	;# 
  1954     0113                     	;# 
  1955     0114                     	;# 
  1956     0115                     	;# 
  1957     0116                     	;# 
  1958     0117                     	;# 
  1959     0118                     	;# 
  1960     0119                     	;# 
  1961     0119                     	;# 
  1962     0119                     	;# 
  1963     011A                     	;# 
  1964     011A                     	;# 
  1965     011A                     	;# 
  1966     011B                     	;# 
  1967     011B                     	;# 
  1968     011B                     	;# 
  1969     011B                     	;# 
  1970     011B                     	;# 
  1971     011C                     	;# 
  1972     011C                     	;# 
  1973     011C                     	;# 
  1974     011D                     	;# 
  1975     011D                     	;# 
  1976     011D                     	;# 
  1977     011E                     	;# 
  1978     011E                     	;# 
  1979     011E                     	;# 
  1980     011F                     	;# 
  1981     011F                     	;# 
  1982     011F                     	;# 
  1983     011F                     	;# 
  1984     011F                     	;# 
  1985     018C                     	;# 
  1986     018D                     	;# 
  1987     018E                     	;# 
  1988     018F                     	;# 
  1989     0190                     	;# 
  1990     0191                     	;# 
  1991     0192                     	;# 
  1992     020C                     	;# 
  1993     020D                     	;# 
  1994     020E                     	;# 
  1995     020E                     	;# 
  1996     020F                     	;# 
  1997     020F                     	;# 
  1998     0210                     	;# 
  1999     0210                     	;# 
  2000     0211                     	;# 
  2001     0211                     	;# 
  2002     0212                     	;# 
  2003     0213                     	;# 
  2004     0214                     	;# 
  2005     0214                     	;# 
  2006     0215                     	;# 
  2007     0215                     	;# 
  2008     0216                     	;# 
  2009     0216                     	;# 
  2010     0217                     	;# 
  2011     0217                     	;# 
  2012     0218                     	;# 
  2013     0219                     	;# 
  2014     021A                     	;# 
  2015     021A                     	;# 
  2016     021B                     	;# 
  2017     021B                     	;# 
  2018     021C                     	;# 
  2019     021C                     	;# 
  2020     021D                     	;# 
  2021     021D                     	;# 
  2022     021E                     	;# 
  2023     021F                     	;# 
  2024     028C                     	;# 
  2025     028C                     	;# 
  2026     028D                     	;# 
  2027     028D                     	;# 
  2028     028E                     	;# 
  2029     028F                     	;# 
  2030     0290                     	;# 
  2031     0291                     	;# 
  2032     0292                     	;# 
  2033     0292                     	;# 
  2034     0293                     	;# 
  2035     0293                     	;# 
  2036     0294                     	;# 
  2037     0295                     	;# 
  2038     0296                     	;# 
  2039     0297                     	;# 
  2040     0298                     	;# 
  2041     0298                     	;# 
  2042     0299                     	;# 
  2043     0299                     	;# 
  2044     029A                     	;# 
  2045     029B                     	;# 
  2046     029C                     	;# 
  2047     029D                     	;# 
  2048     029F                     	;# 
  2049     030C                     	;# 
  2050     030C                     	;# 
  2051     030D                     	;# 
  2052     030E                     	;# 
  2053     030F                     	;# 
  2054     0310                     	;# 
  2055     0310                     	;# 
  2056     0311                     	;# 
  2057     0312                     	;# 
  2058     0313                     	;# 
  2059     0314                     	;# 
  2060     0314                     	;# 
  2061     0315                     	;# 
  2062     0316                     	;# 
  2063     0317                     	;# 
  2064     0318                     	;# 
  2065     0318                     	;# 
  2066     0319                     	;# 
  2067     031A                     	;# 
  2068     031B                     	;# 
  2069     038C                     	;# 
  2070     038C                     	;# 
  2071     038D                     	;# 
  2072     038E                     	;# 
  2073     0390                     	;# 
  2074     0390                     	;# 
  2075     0391                     	;# 
  2076     0392                     	;# 
  2077     048C                     	;# 
  2078     048C                     	;# 
  2079     048D                     	;# 
  2080     048E                     	;# 
  2081     048F                     	;# 
  2082     048F                     	;# 
  2083     0490                     	;# 
  2084     0491                     	;# 
  2085     0492                     	;# 
  2086     0492                     	;# 
  2087     0493                     	;# 
  2088     0494                     	;# 
  2089     0495                     	;# 
  2090     0495                     	;# 
  2091     0496                     	;# 
  2092     0497                     	;# 
  2093     0498                     	;# 
  2094     0499                     	;# 
  2095     049A                     	;# 
  2096     049B                     	;# 
  2097     049C                     	;# 
  2098     049D                     	;# 
  2099     058C                     	;# 
  2100     058C                     	;# 
  2101     058D                     	;# 
  2102     058E                     	;# 
  2103     058F                     	;# 
  2104     058F                     	;# 
  2105     0590                     	;# 
  2106     0591                     	;# 
  2107     0592                     	;# 
  2108     0593                     	;# 
  2109     059C                     	;# 
  2110     059C                     	;# 
  2111     059D                     	;# 
  2112     059D                     	;# 
  2113     059E                     	;# 
  2114     059F                     	;# 
  2115     060C                     	;# 
  2116     060C                     	;# 
  2117     060D                     	;# 
  2118     060D                     	;# 
  2119     060E                     	;# 
  2120     060F                     	;# 
  2121     0610                     	;# 
  2122     0611                     	;# 
  2123     0612                     	;# 
  2124     0613                     	;# 
  2125     0614                     	;# 
  2126     0616                     	;# 
  2127     0616                     	;# 
  2128     0617                     	;# 
  2129     0617                     	;# 
  2130     0618                     	;# 
  2131     0619                     	;# 
  2132     061A                     	;# 
  2133     061B                     	;# 
  2134     061C                     	;# 
  2135     061D                     	;# 
  2136     061E                     	;# 
  2137     070C                     	;# 
  2138     070D                     	;# 
  2139     070E                     	;# 
  2140     070F                     	;# 
  2141     0710                     	;# 
  2142     0711                     	;# 
  2143     0712                     	;# 
  2144     0713                     	;# 
  2145     0714                     	;# 
  2146     0716                     	;# 
  2147     0717                     	;# 
  2148     0718                     	;# 
  2149     0719                     	;# 
  2150     071A                     	;# 
  2151     071B                     	;# 
  2152     071C                     	;# 
  2153     071D                     	;# 
  2154     071E                     	;# 
  2155     0796                     	;# 
  2156     0797                     	;# 
  2157     0798                     	;# 
  2158     0799                     	;# 
  2159     079A                     	;# 
  2160     079B                     	;# 
  2161     079C                     	;# 
  2162     079D                     	;# 
  2163     080C                     	;# 
  2164     080D                     	;# 
  2165     080E                     	;# 
  2166     080F                     	;# 
  2167     0810                     	;# 
  2168     0811                     	;# 
  2169     0812                     	;# 
  2170     0813                     	;# 
  2171     0814                     	;# 
  2172     081A                     	;# 
  2173     081A                     	;# 
  2174     081B                     	;# 
  2175     081C                     	;# 
  2176     081C                     	;# 
  2177     081D                     	;# 
  2178     081E                     	;# 
  2179     081F                     	;# 
  2180     088C                     	;# 
  2181     088D                     	;# 
  2182     088E                     	;# 
  2183     088F                     	;# 
  2184     0890                     	;# 
  2185     0891                     	;# 
  2186     0892                     	;# 
  2187     0893                     	;# 
  2188     0895                     	;# 
  2189     0896                     	;# 
  2190     0897                     	;# 
  2191     0898                     	;# 
  2192     0899                     	;# 
  2193     089A                     	;# 
  2194     089B                     	;# 
  2195     090C                     	;# 
  2196     090E                     	;# 
  2197     090F                     	;# 
  2198     091F                     	;# 
  2199     098F                     	;# 
  2200     098F                     	;# 
  2201     0990                     	;# 
  2202     0991                     	;# 
  2203     0992                     	;# 
  2204     0993                     	;# 
  2205     0994                     	;# 
  2206     0995                     	;# 
  2207     0996                     	;# 
  2208     0997                     	;# 
  2209     1E0F                     	;# 
  2210     1E10                     	;# 
  2211     1E11                     	;# 
  2212     1E12                     	;# 
  2213     1E13                     	;# 
  2214     1E14                     	;# 
  2215     1E15                     	;# 
  2216     1E16                     	;# 
  2217     1E17                     	;# 
  2218     1E18                     	;# 
  2219     1E19                     	;# 
  2220     1E1A                     	;# 
  2221     1E1B                     	;# 
  2222     1E1C                     	;# 
  2223     1E1D                     	;# 
  2224     1E1E                     	;# 
  2225     1E1F                     	;# 
  2226     1E20                     	;# 
  2227     1E21                     	;# 
  2228     1E22                     	;# 
  2229     1E23                     	;# 
  2230     1E24                     	;# 
  2231     1E25                     	;# 
  2232     1E26                     	;# 
  2233     1E27                     	;# 
  2234     1E28                     	;# 
  2235     1E29                     	;# 
  2236     1E2A                     	;# 
  2237     1E2B                     	;# 
  2238     1E2C                     	;# 
  2239     1E2D                     	;# 
  2240     1E2E                     	;# 
  2241     1E2F                     	;# 
  2242     1E30                     	;# 
  2243     1E31                     	;# 
  2244     1E32                     	;# 
  2245     1E33                     	;# 
  2246     1E34                     	;# 
  2247     1E35                     	;# 
  2248     1E36                     	;# 
  2249     1E37                     	;# 
  2250     1E8F                     	;# 
  2251     1E90                     	;# 
  2252     1E91                     	;# 
  2253     1E92                     	;# 
  2254     1E93                     	;# 
  2255     1E94                     	;# 
  2256     1E95                     	;# 
  2257     1E96                     	;# 
  2258     1E97                     	;# 
  2259     1E9C                     	;# 
  2260     1E9D                     	;# 
  2261     1E9E                     	;# 
  2262     1EA1                     	;# 
  2263     1EA2                     	;# 
  2264     1EA3                     	;# 
  2265     1EA4                     	;# 
  2266     1EA9                     	;# 
  2267     1EAA                     	;# 
  2268     1EB1                     	;# 
  2269     1EB2                     	;# 
  2270     1EB8                     	;# 
  2271     1EB9                     	;# 
  2272     1EBA                     	;# 
  2273     1EBB                     	;# 
  2274     1EBC                     	;# 
  2275     1EBD                     	;# 
  2276     1EBE                     	;# 
  2277     1EC3                     	;# 
  2278     1EC5                     	;# 
  2279     1EC6                     	;# 
  2280     1EC7                     	;# 
  2281     1ECB                     	;# 
  2282     1ECB                     	;# 
  2283     1ECB                     	;# 
  2284     1ECC                     	;# 
  2285     1ECC                     	;# 
  2286     1ECC                     	;# 
  2287     1F10                     	;# 
  2288     1F11                     	;# 
  2289     1F12                     	;# 
  2290     1F14                     	;# 
  2291     1F15                     	;# 
  2292     1F1C                     	;# 
  2293     1F1D                     	;# 
  2294     1F1E                     	;# 
  2295     1F1F                     	;# 
  2296     1F20                     	;# 
  2297     1F21                     	;# 
  2298     1F22                     	;# 
  2299     1F23                     	;# 
  2300     1F24                     	;# 
  2301     1F25                     	;# 
  2302     1F26                     	;# 
  2303     1F27                     	;# 
  2304     1F38                     	;# 
  2305     1F39                     	;# 
  2306     1F3A                     	;# 
  2307     1F3B                     	;# 
  2308     1F3C                     	;# 
  2309     1F3D                     	;# 
  2310     1F3E                     	;# 
  2311     1F3F                     	;# 
  2312     1F43                     	;# 
  2313     1F44                     	;# 
  2314     1F45                     	;# 
  2315     1F46                     	;# 
  2316     1F47                     	;# 
  2317     1F48                     	;# 
  2318     1F49                     	;# 
  2319     1F4A                     	;# 
  2320     1F4E                     	;# 
  2321     1F4F                     	;# 
  2322     1F50                     	;# 
  2323     1F51                     	;# 
  2324     1F52                     	;# 
  2325     1F53                     	;# 
  2326     1F54                     	;# 
  2327     1F55                     	;# 
  2328     1FE4                     	;# 
  2329     1FE5                     	;# 
  2330     1FE6                     	;# 
  2331     1FE7                     	;# 
  2332     1FE8                     	;# 
  2333     1FE8                     	;# 
  2334     1FE9                     	;# 
  2335     1FEA                     	;# 
  2336     1FEB                     	;# 
  2337     1FED                     	;# 
  2338     1FEE                     	;# 
  2339     1FEF                     	;# 
  2340     0000                     	;# 
  2341     0001                     	;# 
  2342     0002                     	;# 
  2343     0003                     	;# 
  2344     0004                     	;# 
  2345     0005                     	;# 
  2346     0006                     	;# 
  2347     0007                     	;# 
  2348     0008                     	;# 
  2349     0009                     	;# 
  2350     000A                     	;# 
  2351     000B                     	;# 
  2352     000C                     	;# 
  2353     000D                     	;# 
  2354     000E                     	;# 
  2355     0012                     	;# 
  2356     0013                     	;# 
  2357     0014                     	;# 
  2358     0018                     	;# 
  2359     0019                     	;# 
  2360     001A                     	;# 
  2361     008C                     	;# 
  2362     008C                     	;# 
  2363     008D                     	;# 
  2364     008E                     	;# 
  2365     008E                     	;# 
  2366     008F                     	;# 
  2367     0090                     	;# 
  2368     0090                     	;# 
  2369     0091                     	;# 
  2370     0092                     	;# 
  2371     0092                     	;# 
  2372     0093                     	;# 
  2373     0094                     	;# 
  2374     0094                     	;# 
  2375     0095                     	;# 
  2376     0096                     	;# 
  2377     0096                     	;# 
  2378     0097                     	;# 
  2379     0098                     	;# 
  2380     0099                     	;# 
  2381     009A                     	;# 
  2382     009B                     	;# 
  2383     009B                     	;# 
  2384     009C                     	;# 
  2385     009D                     	;# 
  2386     009D                     	;# 
  2387     009E                     	;# 
  2388     009F                     	;# 
  2389     010C                     	;# 
  2390     010C                     	;# 
  2391     010D                     	;# 
  2392     010E                     	;# 
  2393     010F                     	;# 
  2394     010F                     	;# 
  2395     0110                     	;# 
  2396     0111                     	;# 
  2397     0112                     	;# 
  2398     0113                     	;# 
  2399     0114                     	;# 
  2400     0115                     	;# 
  2401     0116                     	;# 
  2402     0117                     	;# 
  2403     0118                     	;# 
  2404     0119                     	;# 
  2405     0119                     	;# 
  2406     0119                     	;# 
  2407     011A                     	;# 
  2408     011A                     	;# 
  2409     011A                     	;# 
  2410     011B                     	;# 
  2411     011B                     	;# 
  2412     011B                     	;# 
  2413     011B                     	;# 
  2414     011B                     	;# 
  2415     011C                     	;# 
  2416     011C                     	;# 
  2417     011C                     	;# 
  2418     011D                     	;# 
  2419     011D                     	;# 
  2420     011D                     	;# 
  2421     011E                     	;# 
  2422     011E                     	;# 
  2423     011E                     	;# 
  2424     011F                     	;# 
  2425     011F                     	;# 
  2426     011F                     	;# 
  2427     011F                     	;# 
  2428     011F                     	;# 
  2429     018C                     	;# 
  2430     018D                     	;# 
  2431     018E                     	;# 
  2432     018F                     	;# 
  2433     0190                     	;# 
  2434     0191                     	;# 
  2435     0192                     	;# 
  2436     020C                     	;# 
  2437     020D                     	;# 
  2438     020E                     	;# 
  2439     020E                     	;# 
  2440     020F                     	;# 
  2441     020F                     	;# 
  2442     0210                     	;# 
  2443     0210                     	;# 
  2444     0211                     	;# 
  2445     0211                     	;# 
  2446     0212                     	;# 
  2447     0213                     	;# 
  2448     0214                     	;# 
  2449     0214                     	;# 
  2450     0215                     	;# 
  2451     0215                     	;# 
  2452     0216                     	;# 
  2453     0216                     	;# 
  2454     0217                     	;# 
  2455     0217                     	;# 
  2456     0218                     	;# 
  2457     0219                     	;# 
  2458     021A                     	;# 
  2459     021A                     	;# 
  2460     021B                     	;# 
  2461     021B                     	;# 
  2462     021C                     	;# 
  2463     021C                     	;# 
  2464     021D                     	;# 
  2465     021D                     	;# 
  2466     021E                     	;# 
  2467     021F                     	;# 
  2468     028C                     	;# 
  2469     028C                     	;# 
  2470     028D                     	;# 
  2471     028D                     	;# 
  2472     028E                     	;# 
  2473     028F                     	;# 
  2474     0290                     	;# 
  2475     0291                     	;# 
  2476     0292                     	;# 
  2477     0292                     	;# 
  2478     0293                     	;# 
  2479     0293                     	;# 
  2480     0294                     	;# 
  2481     0295                     	;# 
  2482     0296                     	;# 
  2483     0297                     	;# 
  2484     0298                     	;# 
  2485     0298                     	;# 
  2486     0299                     	;# 
  2487     0299                     	;# 
  2488     029A                     	;# 
  2489     029B                     	;# 
  2490     029C                     	;# 
  2491     029D                     	;# 
  2492     029F                     	;# 
  2493     030C                     	;# 
  2494     030C                     	;# 
  2495     030D                     	;# 
  2496     030E                     	;# 
  2497     030F                     	;# 
  2498     0310                     	;# 
  2499     0310                     	;# 
  2500     0311                     	;# 
  2501     0312                     	;# 
  2502     0313                     	;# 
  2503     0314                     	;# 
  2504     0314                     	;# 
  2505     0315                     	;# 
  2506     0316                     	;# 
  2507     0317                     	;# 
  2508     0318                     	;# 
  2509     0318                     	;# 
  2510     0319                     	;# 
  2511     031A                     	;# 
  2512     031B                     	;# 
  2513     038C                     	;# 
  2514     038C                     	;# 
  2515     038D                     	;# 
  2516     038E                     	;# 
  2517     0390                     	;# 
  2518     0390                     	;# 
  2519     0391                     	;# 
  2520     0392                     	;# 
  2521     048C                     	;# 
  2522     048C                     	;# 
  2523     048D                     	;# 
  2524     048E                     	;# 
  2525     048F                     	;# 
  2526     048F                     	;# 
  2527     0490                     	;# 
  2528     0491                     	;# 
  2529     0492                     	;# 
  2530     0492                     	;# 
  2531     0493                     	;# 
  2532     0494                     	;# 
  2533     0495                     	;# 
  2534     0495                     	;# 
  2535     0496                     	;# 
  2536     0497                     	;# 
  2537     0498                     	;# 
  2538     0499                     	;# 
  2539     049A                     	;# 
  2540     049B                     	;# 
  2541     049C                     	;# 
  2542     049D                     	;# 
  2543     058C                     	;# 
  2544     058C                     	;# 
  2545     058D                     	;# 
  2546     058E                     	;# 
  2547     058F                     	;# 
  2548     058F                     	;# 
  2549     0590                     	;# 
  2550     0591                     	;# 
  2551     0592                     	;# 
  2552     0593                     	;# 
  2553     059C                     	;# 
  2554     059C                     	;# 
  2555     059D                     	;# 
  2556     059D                     	;# 
  2557     059E                     	;# 
  2558     059F                     	;# 
  2559     060C                     	;# 
  2560     060C                     	;# 
  2561     060D                     	;# 
  2562     060D                     	;# 
  2563     060E                     	;# 
  2564     060F                     	;# 
  2565     0610                     	;# 
  2566     0611                     	;# 
  2567     0612                     	;# 
  2568     0613                     	;# 
  2569     0614                     	;# 
  2570     0616                     	;# 
  2571     0616                     	;# 
  2572     0617                     	;# 
  2573     0617                     	;# 
  2574     0618                     	;# 
  2575     0619                     	;# 
  2576     061A                     	;# 
  2577     061B                     	;# 
  2578     061C                     	;# 
  2579     061D                     	;# 
  2580     061E                     	;# 
  2581     070C                     	;# 
  2582     070D                     	;# 
  2583     070E                     	;# 
  2584     070F                     	;# 
  2585     0710                     	;# 
  2586     0711                     	;# 
  2587     0712                     	;# 
  2588     0713                     	;# 
  2589     0714                     	;# 
  2590     0716                     	;# 
  2591     0717                     	;# 
  2592     0718                     	;# 
  2593     0719                     	;# 
  2594     071A                     	;# 
  2595     071B                     	;# 
  2596     071C                     	;# 
  2597     071D                     	;# 
  2598     071E                     	;# 
  2599     0796                     	;# 
  2600     0797                     	;# 
  2601     0798                     	;# 
  2602     0799                     	;# 
  2603     079A                     	;# 
  2604     079B                     	;# 
  2605     079C                     	;# 
  2606     079D                     	;# 
  2607     080C                     	;# 
  2608     080D                     	;# 
  2609     080E                     	;# 
  2610     080F                     	;# 
  2611     0810                     	;# 
  2612     0811                     	;# 
  2613     0812                     	;# 
  2614     0813                     	;# 
  2615     0814                     	;# 
  2616     081A                     	;# 
  2617     081A                     	;# 
  2618     081B                     	;# 
  2619     081C                     	;# 
  2620     081C                     	;# 
  2621     081D                     	;# 
  2622     081E                     	;# 
  2623     081F                     	;# 
  2624     088C                     	;# 
  2625     088D                     	;# 
  2626     088E                     	;# 
  2627     088F                     	;# 
  2628     0890                     	;# 
  2629     0891                     	;# 
  2630     0892                     	;# 
  2631     0893                     	;# 
  2632     0895                     	;# 
  2633     0896                     	;# 
  2634     0897                     	;# 
  2635     0898                     	;# 
  2636     0899                     	;# 
  2637     089A                     	;# 
  2638     089B                     	;# 
  2639     090C                     	;# 
  2640     090E                     	;# 
  2641     090F                     	;# 
  2642     091F                     	;# 
  2643     098F                     	;# 
  2644     098F                     	;# 
  2645     0990                     	;# 
  2646     0991                     	;# 
  2647     0992                     	;# 
  2648     0993                     	;# 
  2649     0994                     	;# 
  2650     0995                     	;# 
  2651     0996                     	;# 
  2652     0997                     	;# 
  2653     1E0F                     	;# 
  2654     1E10                     	;# 
  2655     1E11                     	;# 
  2656     1E12                     	;# 
  2657     1E13                     	;# 
  2658     1E14                     	;# 
  2659     1E15                     	;# 
  2660     1E16                     	;# 
  2661     1E17                     	;# 
  2662     1E18                     	;# 
  2663     1E19                     	;# 
  2664     1E1A                     	;# 
  2665     1E1B                     	;# 
  2666     1E1C                     	;# 
  2667     1E1D                     	;# 
  2668     1E1E                     	;# 
  2669     1E1F                     	;# 
  2670     1E20                     	;# 
  2671     1E21                     	;# 
  2672     1E22                     	;# 
  2673     1E23                     	;# 
  2674     1E24                     	;# 
  2675     1E25                     	;# 
  2676     1E26                     	;# 
  2677     1E27                     	;# 
  2678     1E28                     	;# 
  2679     1E29                     	;# 
  2680     1E2A                     	;# 
  2681     1E2B                     	;# 
  2682     1E2C                     	;# 
  2683     1E2D                     	;# 
  2684     1E2E                     	;# 
  2685     1E2F                     	;# 
  2686     1E30                     	;# 
  2687     1E31                     	;# 
  2688     1E32                     	;# 
  2689     1E33                     	;# 
  2690     1E34                     	;# 
  2691     1E35                     	;# 
  2692     1E36                     	;# 
  2693     1E37                     	;# 
  2694     1E8F                     	;# 
  2695     1E90                     	;# 
  2696     1E91                     	;# 
  2697     1E92                     	;# 
  2698     1E93                     	;# 
  2699     1E94                     	;# 
  2700     1E95                     	;# 
  2701     1E96                     	;# 
  2702     1E97                     	;# 
  2703     1E9C                     	;# 
  2704     1E9D                     	;# 
  2705     1E9E                     	;# 
  2706     1EA1                     	;# 
  2707     1EA2                     	;# 
  2708     1EA3                     	;# 
  2709     1EA4                     	;# 
  2710     1EA9                     	;# 
  2711     1EAA                     	;# 
  2712     1EB1                     	;# 
  2713     1EB2                     	;# 
  2714     1EB8                     	;# 
  2715     1EB9                     	;# 
  2716     1EBA                     	;# 
  2717     1EBB                     	;# 
  2718     1EBC                     	;# 
  2719     1EBD                     	;# 
  2720     1EBE                     	;# 
  2721     1EC3                     	;# 
  2722     1EC5                     	;# 
  2723     1EC6                     	;# 
  2724     1EC7                     	;# 
  2725     1ECB                     	;# 
  2726     1ECB                     	;# 
  2727     1ECB                     	;# 
  2728     1ECC                     	;# 
  2729     1ECC                     	;# 
  2730     1ECC                     	;# 
  2731     1F10                     	;# 
  2732     1F11                     	;# 
  2733     1F12                     	;# 
  2734     1F14                     	;# 
  2735     1F15                     	;# 
  2736     1F1C                     	;# 
  2737     1F1D                     	;# 
  2738     1F1E                     	;# 
  2739     1F1F                     	;# 
  2740     1F20                     	;# 
  2741     1F21                     	;# 
  2742     1F22                     	;# 
  2743     1F23                     	;# 
  2744     1F24                     	;# 
  2745     1F25                     	;# 
  2746     1F26                     	;# 
  2747     1F27                     	;# 
  2748     1F38                     	;# 
  2749     1F39                     	;# 
  2750     1F3A                     	;# 
  2751     1F3B                     	;# 
  2752     1F3C                     	;# 
  2753     1F3D                     	;# 
  2754     1F3E                     	;# 
  2755     1F3F                     	;# 
  2756     1F43                     	;# 
  2757     1F44                     	;# 
  2758     1F45                     	;# 
  2759     1F46                     	;# 
  2760     1F47                     	;# 
  2761     1F48                     	;# 
  2762     1F49                     	;# 
  2763     1F4A                     	;# 
  2764     1F4E                     	;# 
  2765     1F4F                     	;# 
  2766     1F50                     	;# 
  2767     1F51                     	;# 
  2768     1F52                     	;# 
  2769     1F53                     	;# 
  2770     1F54                     	;# 
  2771     1F55                     	;# 
  2772     1FE4                     	;# 
  2773     1FE5                     	;# 
  2774     1FE6                     	;# 
  2775     1FE7                     	;# 
  2776     1FE8                     	;# 
  2777     1FE8                     	;# 
  2778     1FE9                     	;# 
  2779     1FEA                     	;# 
  2780     1FEB                     	;# 
  2781     1FED                     	;# 
  2782     1FEE                     	;# 
  2783     1FEF                     	;# 
  2784     0000                     	;# 
  2785     0001                     	;# 
  2786     0002                     	;# 
  2787     0003                     	;# 
  2788     0004                     	;# 
  2789     0005                     	;# 
  2790     0006                     	;# 
  2791     0007                     	;# 
  2792     0008                     	;# 
  2793     0009                     	;# 
  2794     000A                     	;# 
  2795     000B                     	;# 
  2796     000C                     	;# 
  2797     000D                     	;# 
  2798     000E                     	;# 
  2799     0012                     	;# 
  2800     0013                     	;# 
  2801     0014                     	;# 
  2802     0018                     	;# 
  2803     0019                     	;# 
  2804     001A                     	;# 
  2805     008C                     	;# 
  2806     008C                     	;# 
  2807     008D                     	;# 
  2808     008E                     	;# 
  2809     008E                     	;# 
  2810     008F                     	;# 
  2811     0090                     	;# 
  2812     0090                     	;# 
  2813     0091                     	;# 
  2814     0092                     	;# 
  2815     0092                     	;# 
  2816     0093                     	;# 
  2817     0094                     	;# 
  2818     0094                     	;# 
  2819     0095                     	;# 
  2820     0096                     	;# 
  2821     0096                     	;# 
  2822     0097                     	;# 
  2823     0098                     	;# 
  2824     0099                     	;# 
  2825     009A                     	;# 
  2826     009B                     	;# 
  2827     009B                     	;# 
  2828     009C                     	;# 
  2829     009D                     	;# 
  2830     009D                     	;# 
  2831     009E                     	;# 
  2832     009F                     	;# 
  2833     010C                     	;# 
  2834     010C                     	;# 
  2835     010D                     	;# 
  2836     010E                     	;# 
  2837     010F                     	;# 
  2838     010F                     	;# 
  2839     0110                     	;# 
  2840     0111                     	;# 
  2841     0112                     	;# 
  2842     0113                     	;# 
  2843     0114                     	;# 
  2844     0115                     	;# 
  2845     0116                     	;# 
  2846     0117                     	;# 
  2847     0118                     	;# 
  2848     0119                     	;# 
  2849     0119                     	;# 
  2850     0119                     	;# 
  2851     011A                     	;# 
  2852     011A                     	;# 
  2853     011A                     	;# 
  2854     011B                     	;# 
  2855     011B                     	;# 
  2856     011B                     	;# 
  2857     011B                     	;# 
  2858     011B                     	;# 
  2859     011C                     	;# 
  2860     011C                     	;# 
  2861     011C                     	;# 
  2862     011D                     	;# 
  2863     011D                     	;# 
  2864     011D                     	;# 
  2865     011E                     	;# 
  2866     011E                     	;# 
  2867     011E                     	;# 
  2868     011F                     	;# 
  2869     011F                     	;# 
  2870     011F                     	;# 
  2871     011F                     	;# 
  2872     011F                     	;# 
  2873     018C                     	;# 
  2874     018D                     	;# 
  2875     018E                     	;# 
  2876     018F                     	;# 
  2877     0190                     	;# 
  2878     0191                     	;# 
  2879     0192                     	;# 
  2880     020C                     	;# 
  2881     020D                     	;# 
  2882     020E                     	;# 
  2883     020E                     	;# 
  2884     020F                     	;# 
  2885     020F                     	;# 
  2886     0210                     	;# 
  2887     0210                     	;# 
  2888     0211                     	;# 
  2889     0211                     	;# 
  2890     0212                     	;# 
  2891     0213                     	;# 
  2892     0214                     	;# 
  2893     0214                     	;# 
  2894     0215                     	;# 
  2895     0215                     	;# 
  2896     0216                     	;# 
  2897     0216                     	;# 
  2898     0217                     	;# 
  2899     0217                     	;# 
  2900     0218                     	;# 
  2901     0219                     	;# 
  2902     021A                     	;# 
  2903     021A                     	;# 
  2904     021B                     	;# 
  2905     021B                     	;# 
  2906     021C                     	;# 
  2907     021C                     	;# 
  2908     021D                     	;# 
  2909     021D                     	;# 
  2910     021E                     	;# 
  2911     021F                     	;# 
  2912     028C                     	;# 
  2913     028C                     	;# 
  2914     028D                     	;# 
  2915     028D                     	;# 
  2916     028E                     	;# 
  2917     028F                     	;# 
  2918     0290                     	;# 
  2919     0291                     	;# 
  2920     0292                     	;# 
  2921     0292                     	;# 
  2922     0293                     	;# 
  2923     0293                     	;# 
  2924     0294                     	;# 
  2925     0295                     	;# 
  2926     0296                     	;# 
  2927     0297                     	;# 
  2928     0298                     	;# 
  2929     0298                     	;# 
  2930     0299                     	;# 
  2931     0299                     	;# 
  2932     029A                     	;# 
  2933     029B                     	;# 
  2934     029C                     	;# 
  2935     029D                     	;# 
  2936     029F                     	;# 
  2937     030C                     	;# 
  2938     030C                     	;# 
  2939     030D                     	;# 
  2940     030E                     	;# 
  2941     030F                     	;# 
  2942     0310                     	;# 
  2943     0310                     	;# 
  2944     0311                     	;# 
  2945     0312                     	;# 
  2946     0313                     	;# 
  2947     0314                     	;# 
  2948     0314                     	;# 
  2949     0315                     	;# 
  2950     0316                     	;# 
  2951     0317                     	;# 
  2952     0318                     	;# 
  2953     0318                     	;# 
  2954     0319                     	;# 
  2955     031A                     	;# 
  2956     031B                     	;# 
  2957     038C                     	;# 
  2958     038C                     	;# 
  2959     038D                     	;# 
  2960     038E                     	;# 
  2961     0390                     	;# 
  2962     0390                     	;# 
  2963     0391                     	;# 
  2964     0392                     	;# 
  2965     048C                     	;# 
  2966     048C                     	;# 
  2967     048D                     	;# 
  2968     048E                     	;# 
  2969     048F                     	;# 
  2970     048F                     	;# 
  2971     0490                     	;# 
  2972     0491                     	;# 
  2973     0492                     	;# 
  2974     0492                     	;# 
  2975     0493                     	;# 
  2976     0494                     	;# 
  2977     0495                     	;# 
  2978     0495                     	;# 
  2979     0496                     	;# 
  2980     0497                     	;# 
  2981     0498                     	;# 
  2982     0499                     	;# 
  2983     049A                     	;# 
  2984     049B                     	;# 
  2985     049C                     	;# 
  2986     049D                     	;# 
  2987     058C                     	;# 
  2988     058C                     	;# 
  2989     058D                     	;# 
  2990     058E                     	;# 
  2991     058F                     	;# 
  2992     058F                     	;# 
  2993     0590                     	;# 
  2994     0591                     	;# 
  2995     0592                     	;# 
  2996     0593                     	;# 
  2997     059C                     	;# 
  2998     059C                     	;# 
  2999     059D                     	;# 
  3000     059D                     	;# 
  3001     059E                     	;# 
  3002     059F                     	;# 
  3003     060C                     	;# 
  3004     060C                     	;# 
  3005     060D                     	;# 
  3006     060D                     	;# 
  3007     060E                     	;# 
  3008     060F                     	;# 
  3009     0610                     	;# 
  3010     0611                     	;# 
  3011     0612                     	;# 
  3012     0613                     	;# 
  3013     0614                     	;# 
  3014     0616                     	;# 
  3015     0616                     	;# 
  3016     0617                     	;# 
  3017     0617                     	;# 
  3018     0618                     	;# 
  3019     0619                     	;# 
  3020     061A                     	;# 
  3021     061B                     	;# 
  3022     061C                     	;# 
  3023     061D                     	;# 
  3024     061E                     	;# 
  3025     070C                     	;# 
  3026     070D                     	;# 
  3027     070E                     	;# 
  3028     070F                     	;# 
  3029     0710                     	;# 
  3030     0711                     	;# 
  3031     0712                     	;# 
  3032     0713                     	;# 
  3033     0714                     	;# 
  3034     0716                     	;# 
  3035     0717                     	;# 
  3036     0718                     	;# 
  3037     0719                     	;# 
  3038     071A                     	;# 
  3039     071B                     	;# 
  3040     071C                     	;# 
  3041     071D                     	;# 
  3042     071E                     	;# 
  3043     0796                     	;# 
  3044     0797                     	;# 
  3045     0798                     	;# 
  3046     0799                     	;# 
  3047     079A                     	;# 
  3048     079B                     	;# 
  3049     079C                     	;# 
  3050     079D                     	;# 
  3051     080C                     	;# 
  3052     080D                     	;# 
  3053     080E                     	;# 
  3054     080F                     	;# 
  3055     0810                     	;# 
  3056     0811                     	;# 
  3057     0812                     	;# 
  3058     0813                     	;# 
  3059     0814                     	;# 
  3060     081A                     	;# 
  3061     081A                     	;# 
  3062     081B                     	;# 
  3063     081C                     	;# 
  3064     081C                     	;# 
  3065     081D                     	;# 
  3066     081E                     	;# 
  3067     081F                     	;# 
  3068     088C                     	;# 
  3069     088D                     	;# 
  3070     088E                     	;# 
  3071     088F                     	;# 
  3072     0890                     	;# 
  3073     0891                     	;# 
  3074     0892                     	;# 
  3075     0893                     	;# 
  3076     0895                     	;# 
  3077     0896                     	;# 
  3078     0897                     	;# 
  3079     0898                     	;# 
  3080     0899                     	;# 
  3081     089A                     	;# 
  3082     089B                     	;# 
  3083     090C                     	;# 
  3084     090E                     	;# 
  3085     090F                     	;# 
  3086     091F                     	;# 
  3087     098F                     	;# 
  3088     098F                     	;# 
  3089     0990                     	;# 
  3090     0991                     	;# 
  3091     0992                     	;# 
  3092     0993                     	;# 
  3093     0994                     	;# 
  3094     0995                     	;# 
  3095     0996                     	;# 
  3096     0997                     	;# 
  3097     1E0F                     	;# 
  3098     1E10                     	;# 
  3099     1E11                     	;# 
  3100     1E12                     	;# 
  3101     1E13                     	;# 
  3102     1E14                     	;# 
  3103     1E15                     	;# 
  3104     1E16                     	;# 
  3105     1E17                     	;# 
  3106     1E18                     	;# 
  3107     1E19                     	;# 
  3108     1E1A                     	;# 
  3109     1E1B                     	;# 
  3110     1E1C                     	;# 
  3111     1E1D                     	;# 
  3112     1E1E                     	;# 
  3113     1E1F                     	;# 
  3114     1E20                     	;# 
  3115     1E21                     	;# 
  3116     1E22                     	;# 
  3117     1E23                     	;# 
  3118     1E24                     	;# 
  3119     1E25                     	;# 
  3120     1E26                     	;# 
  3121     1E27                     	;# 
  3122     1E28                     	;# 
  3123     1E29                     	;# 
  3124     1E2A                     	;# 
  3125     1E2B                     	;# 
  3126     1E2C                     	;# 
  3127     1E2D                     	;# 
  3128     1E2E                     	;# 
  3129     1E2F                     	;# 
  3130     1E30                     	;# 
  3131     1E31                     	;# 
  3132     1E32                     	;# 
  3133     1E33                     	;# 
  3134     1E34                     	;# 
  3135     1E35                     	;# 
  3136     1E36                     	;# 
  3137     1E37                     	;# 
  3138     1E8F                     	;# 
  3139     1E90                     	;# 
  3140     1E91                     	;# 
  3141     1E92                     	;# 
  3142     1E93                     	;# 
  3143     1E94                     	;# 
  3144     1E95                     	;# 
  3145     1E96                     	;# 
  3146     1E97                     	;# 
  3147     1E9C                     	;# 
  3148     1E9D                     	;# 
  3149     1E9E                     	;# 
  3150     1EA1                     	;# 
  3151     1EA2                     	;# 
  3152     1EA3                     	;# 
  3153     1EA4                     	;# 
  3154     1EA9                     	;# 
  3155     1EAA                     	;# 
  3156     1EB1                     	;# 
  3157     1EB2                     	;# 
  3158     1EB8                     	;# 
  3159     1EB9                     	;# 
  3160     1EBA                     	;# 
  3161     1EBB                     	;# 
  3162     1EBC                     	;# 
  3163     1EBD                     	;# 
  3164     1EBE                     	;# 
  3165     1EC3                     	;# 
  3166     1EC5                     	;# 
  3167     1EC6                     	;# 
  3168     1EC7                     	;# 
  3169     1ECB                     	;# 
  3170     1ECB                     	;# 
  3171     1ECB                     	;# 
  3172     1ECC                     	;# 
  3173     1ECC                     	;# 
  3174     1ECC                     	;# 
  3175     1F10                     	;# 
  3176     1F11                     	;# 
  3177     1F12                     	;# 
  3178     1F14                     	;# 
  3179     1F15                     	;# 
  3180     1F1C                     	;# 
  3181     1F1D                     	;# 
  3182     1F1E                     	;# 
  3183     1F1F                     	;# 
  3184     1F20                     	;# 
  3185     1F21                     	;# 
  3186     1F22                     	;# 
  3187     1F23                     	;# 
  3188     1F24                     	;# 
  3189     1F25                     	;# 
  3190     1F26                     	;# 
  3191     1F27                     	;# 
  3192     1F38                     	;# 
  3193     1F39                     	;# 
  3194     1F3A                     	;# 
  3195     1F3B                     	;# 
  3196     1F3C                     	;# 
  3197     1F3D                     	;# 
  3198     1F3E                     	;# 
  3199     1F3F                     	;# 
  3200     1F43                     	;# 
  3201     1F44                     	;# 
  3202     1F45                     	;# 
  3203     1F46                     	;# 
  3204     1F47                     	;# 
  3205     1F48                     	;# 
  3206     1F49                     	;# 
  3207     1F4A                     	;# 
  3208     1F4E                     	;# 
  3209     1F4F                     	;# 
  3210     1F50                     	;# 
  3211     1F51                     	;# 
  3212     1F52                     	;# 
  3213     1F53                     	;# 
  3214     1F54                     	;# 
  3215     1F55                     	;# 
  3216     1FE4                     	;# 
  3217     1FE5                     	;# 
  3218     1FE6                     	;# 
  3219     1FE7                     	;# 
  3220     1FE8                     	;# 
  3221     1FE8                     	;# 
  3222     1FE9                     	;# 
  3223     1FEA                     	;# 
  3224     1FEB                     	;# 
  3225     1FED                     	;# 
  3226     1FEE                     	;# 
  3227     1FEF                     	;# 
  3228     0000                     	;# 
  3229     0001                     	;# 
  3230     0002                     	;# 
  3231     0003                     	;# 
  3232     0004                     	;# 
  3233     0005                     	;# 
  3234     0006                     	;# 
  3235     0007                     	;# 
  3236     0008                     	;# 
  3237     0009                     	;# 
  3238     000A                     	;# 
  3239     000B                     	;# 
  3240     000C                     	;# 
  3241     000D                     	;# 
  3242     000E                     	;# 
  3243     0012                     	;# 
  3244     0013                     	;# 
  3245     0014                     	;# 
  3246     0018                     	;# 
  3247     0019                     	;# 
  3248     001A                     	;# 
  3249     008C                     	;# 
  3250     008C                     	;# 
  3251     008D                     	;# 
  3252     008E                     	;# 
  3253     008E                     	;# 
  3254     008F                     	;# 
  3255     0090                     	;# 
  3256     0090                     	;# 
  3257     0091                     	;# 
  3258     0092                     	;# 
  3259     0092                     	;# 
  3260     0093                     	;# 
  3261     0094                     	;# 
  3262     0094                     	;# 
  3263     0095                     	;# 
  3264     0096                     	;# 
  3265     0096                     	;# 
  3266     0097                     	;# 
  3267     0098                     	;# 
  3268     0099                     	;# 
  3269     009A                     	;# 
  3270     009B                     	;# 
  3271     009B                     	;# 
  3272     009C                     	;# 
  3273     009D                     	;# 
  3274     009D                     	;# 
  3275     009E                     	;# 
  3276     009F                     	;# 
  3277     010C                     	;# 
  3278     010C                     	;# 
  3279     010D                     	;# 
  3280     010E                     	;# 
  3281     010F                     	;# 
  3282     010F                     	;# 
  3283     0110                     	;# 
  3284     0111                     	;# 
  3285     0112                     	;# 
  3286     0113                     	;# 
  3287     0114                     	;# 
  3288     0115                     	;# 
  3289     0116                     	;# 
  3290     0117                     	;# 
  3291     0118                     	;# 
  3292     0119                     	;# 
  3293     0119                     	;# 
  3294     0119                     	;# 
  3295     011A                     	;# 
  3296     011A                     	;# 
  3297     011A                     	;# 
  3298     011B                     	;# 
  3299     011B                     	;# 
  3300     011B                     	;# 
  3301     011B                     	;# 
  3302     011B                     	;# 
  3303     011C                     	;# 
  3304     011C                     	;# 
  3305     011C                     	;# 
  3306     011D                     	;# 
  3307     011D                     	;# 
  3308     011D                     	;# 
  3309     011E                     	;# 
  3310     011E                     	;# 
  3311     011E                     	;# 
  3312     011F                     	;# 
  3313     011F                     	;# 
  3314     011F                     	;# 
  3315     011F                     	;# 
  3316     011F                     	;# 
  3317     018C                     	;# 
  3318     018D                     	;# 
  3319     018E                     	;# 
  3320     018F                     	;# 
  3321     0190                     	;# 
  3322     0191                     	;# 
  3323     0192                     	;# 
  3324     020C                     	;# 
  3325     020D                     	;# 
  3326     020E                     	;# 
  3327     020E                     	;# 
  3328     020F                     	;# 
  3329     020F                     	;# 
  3330     0210                     	;# 
  3331     0210                     	;# 
  3332     0211                     	;# 
  3333     0211                     	;# 
  3334     0212                     	;# 
  3335     0213                     	;# 
  3336     0214                     	;# 
  3337     0214                     	;# 
  3338     0215                     	;# 
  3339     0215                     	;# 
  3340     0216                     	;# 
  3341     0216                     	;# 
  3342     0217                     	;# 
  3343     0217                     	;# 
  3344     0218                     	;# 
  3345     0219                     	;# 
  3346     021A                     	;# 
  3347     021A                     	;# 
  3348     021B                     	;# 
  3349     021B                     	;# 
  3350     021C                     	;# 
  3351     021C                     	;# 
  3352     021D                     	;# 
  3353     021D                     	;# 
  3354     021E                     	;# 
  3355     021F                     	;# 
  3356     028C                     	;# 
  3357     028C                     	;# 
  3358     028D                     	;# 
  3359     028D                     	;# 
  3360     028E                     	;# 
  3361     028F                     	;# 
  3362     0290                     	;# 
  3363     0291                     	;# 
  3364     0292                     	;# 
  3365     0292                     	;# 
  3366     0293                     	;# 
  3367     0293                     	;# 
  3368     0294                     	;# 
  3369     0295                     	;# 
  3370     0296                     	;# 
  3371     0297                     	;# 
  3372     0298                     	;# 
  3373     0298                     	;# 
  3374     0299                     	;# 
  3375     0299                     	;# 
  3376     029A                     	;# 
  3377     029B                     	;# 
  3378     029C                     	;# 
  3379     029D                     	;# 
  3380     029F                     	;# 
  3381     030C                     	;# 
  3382     030C                     	;# 
  3383     030D                     	;# 
  3384     030E                     	;# 
  3385     030F                     	;# 
  3386     0310                     	;# 
  3387     0310                     	;# 
  3388     0311                     	;# 
  3389     0312                     	;# 
  3390     0313                     	;# 
  3391     0314                     	;# 
  3392     0314                     	;# 
  3393     0315                     	;# 
  3394     0316                     	;# 
  3395     0317                     	;# 
  3396     0318                     	;# 
  3397     0318                     	;# 
  3398     0319                     	;# 
  3399     031A                     	;# 
  3400     031B                     	;# 
  3401     038C                     	;# 
  3402     038C                     	;# 
  3403     038D                     	;# 
  3404     038E                     	;# 
  3405     0390                     	;# 
  3406     0390                     	;# 
  3407     0391                     	;# 
  3408     0392                     	;# 
  3409     048C                     	;# 
  3410     048C                     	;# 
  3411     048D                     	;# 
  3412     048E                     	;# 
  3413     048F                     	;# 
  3414     048F                     	;# 
  3415     0490                     	;# 
  3416     0491                     	;# 
  3417     0492                     	;# 
  3418     0492                     	;# 
  3419     0493                     	;# 
  3420     0494                     	;# 
  3421     0495                     	;# 
  3422     0495                     	;# 
  3423     0496                     	;# 
  3424     0497                     	;# 
  3425     0498                     	;# 
  3426     0499                     	;# 
  3427     049A                     	;# 
  3428     049B                     	;# 
  3429     049C                     	;# 
  3430     049D                     	;# 
  3431     058C                     	;# 
  3432     058C                     	;# 
  3433     058D                     	;# 
  3434     058E                     	;# 
  3435     058F                     	;# 
  3436     058F                     	;# 
  3437     0590                     	;# 
  3438     0591                     	;# 
  3439     0592                     	;# 
  3440     0593                     	;# 
  3441     059C                     	;# 
  3442     059C                     	;# 
  3443     059D                     	;# 
  3444     059D                     	;# 
  3445     059E                     	;# 
  3446     059F                     	;# 
  3447     060C                     	;# 
  3448     060C                     	;# 
  3449     060D                     	;# 
  3450     060D                     	;# 
  3451     060E                     	;# 
  3452     060F                     	;# 
  3453     0610                     	;# 
  3454     0611                     	;# 
  3455     0612                     	;# 
  3456     0613                     	;# 
  3457     0614                     	;# 
  3458     0616                     	;# 
  3459     0616                     	;# 
  3460     0617                     	;# 
  3461     0617                     	;# 
  3462     0618                     	;# 
  3463     0619                     	;# 
  3464     061A                     	;# 
  3465     061B                     	;# 
  3466     061C                     	;# 
  3467     061D                     	;# 
  3468     061E                     	;# 
  3469     070C                     	;# 
  3470     070D                     	;# 
  3471     070E                     	;# 
  3472     070F                     	;# 
  3473     0710                     	;# 
  3474     0711                     	;# 
  3475     0712                     	;# 
  3476     0713                     	;# 
  3477     0714                     	;# 
  3478     0716                     	;# 
  3479     0717                     	;# 
  3480     0718                     	;# 
  3481     0719                     	;# 
  3482     071A                     	;# 
  3483     071B                     	;# 
  3484     071C                     	;# 
  3485     071D                     	;# 
  3486     071E                     	;# 
  3487     0796                     	;# 
  3488     0797                     	;# 
  3489     0798                     	;# 
  3490     0799                     	;# 
  3491     079A                     	;# 
  3492     079B                     	;# 
  3493     079C                     	;# 
  3494     079D                     	;# 
  3495     080C                     	;# 
  3496     080D                     	;# 
  3497     080E                     	;# 
  3498     080F                     	;# 
  3499     0810                     	;# 
  3500     0811                     	;# 
  3501     0812                     	;# 
  3502     0813                     	;# 
  3503     0814                     	;# 
  3504     081A                     	;# 
  3505     081A                     	;# 
  3506     081B                     	;# 
  3507     081C                     	;# 
  3508     081C                     	;# 
  3509     081D                     	;# 
  3510     081E                     	;# 
  3511     081F                     	;# 
  3512     088C                     	;# 
  3513     088D                     	;# 
  3514     088E                     	;# 
  3515     088F                     	;# 
  3516     0890                     	;# 
  3517     0891                     	;# 
  3518     0892                     	;# 
  3519     0893                     	;# 
  3520     0895                     	;# 
  3521     0896                     	;# 
  3522     0897                     	;# 
  3523     0898                     	;# 
  3524     0899                     	;# 
  3525     089A                     	;# 
  3526     089B                     	;# 
  3527     090C                     	;# 
  3528     090E                     	;# 
  3529     090F                     	;# 
  3530     091F                     	;# 
  3531     098F                     	;# 
  3532     098F                     	;# 
  3533     0990                     	;# 
  3534     0991                     	;# 
  3535     0992                     	;# 
  3536     0993                     	;# 
  3537     0994                     	;# 
  3538     0995                     	;# 
  3539     0996                     	;# 
  3540     0997                     	;# 
  3541     1E0F                     	;# 
  3542     1E10                     	;# 
  3543     1E11                     	;# 
  3544     1E12                     	;# 
  3545     1E13                     	;# 
  3546     1E14                     	;# 
  3547     1E15                     	;# 
  3548     1E16                     	;# 
  3549     1E17                     	;# 
  3550     1E18                     	;# 
  3551     1E19                     	;# 
  3552     1E1A                     	;# 
  3553     1E1B                     	;# 
  3554     1E1C                     	;# 
  3555     1E1D                     	;# 
  3556     1E1E                     	;# 
  3557     1E1F                     	;# 
  3558     1E20                     	;# 
  3559     1E21                     	;# 
  3560     1E22                     	;# 
  3561     1E23                     	;# 
  3562     1E24                     	;# 
  3563     1E25                     	;# 
  3564     1E26                     	;# 
  3565     1E27                     	;# 
  3566     1E28                     	;# 
  3567     1E29                     	;# 
  3568     1E2A                     	;# 
  3569     1E2B                     	;# 
  3570     1E2C                     	;# 
  3571     1E2D                     	;# 
  3572     1E2E                     	;# 
  3573     1E2F                     	;# 
  3574     1E30                     	;# 
  3575     1E31                     	;# 
  3576     1E32                     	;# 
  3577     1E33                     	;# 
  3578     1E34                     	;# 
  3579     1E35                     	;# 
  3580     1E36                     	;# 
  3581     1E37                     	;# 
  3582     1E8F                     	;# 
  3583     1E90                     	;# 
  3584     1E91                     	;# 
  3585     1E92                     	;# 
  3586     1E93                     	;# 
  3587     1E94                     	;# 
  3588     1E95                     	;# 
  3589     1E96                     	;# 
  3590     1E97                     	;# 
  3591     1E9C                     	;# 
  3592     1E9D                     	;# 
  3593     1E9E                     	;# 
  3594     1EA1                     	;# 
  3595     1EA2                     	;# 
  3596     1EA3                     	;# 
  3597     1EA4                     	;# 
  3598     1EA9                     	;# 
  3599     1EAA                     	;# 
  3600     1EB1                     	;# 
  3601     1EB2                     	;# 
  3602     1EB8                     	;# 
  3603     1EB9                     	;# 
  3604     1EBA                     	;# 
  3605     1EBB                     	;# 
  3606     1EBC                     	;# 
  3607     1EBD                     	;# 
  3608     1EBE                     	;# 
  3609     1EC3                     	;# 
  3610     1EC5                     	;# 
  3611     1EC6                     	;# 
  3612     1EC7                     	;# 
  3613     1ECB                     	;# 
  3614     1ECB                     	;# 
  3615     1ECB                     	;# 
  3616     1ECC                     	;# 
  3617     1ECC                     	;# 
  3618     1ECC                     	;# 
  3619     1F10                     	;# 
  3620     1F11                     	;# 
  3621     1F12                     	;# 
  3622     1F14                     	;# 
  3623     1F15                     	;# 
  3624     1F1C                     	;# 
  3625     1F1D                     	;# 
  3626     1F1E                     	;# 
  3627     1F1F                     	;# 
  3628     1F20                     	;# 
  3629     1F21                     	;# 
  3630     1F22                     	;# 
  3631     1F23                     	;# 
  3632     1F24                     	;# 
  3633     1F25                     	;# 
  3634     1F26                     	;# 
  3635     1F27                     	;# 
  3636     1F38                     	;# 
  3637     1F39                     	;# 
  3638     1F3A                     	;# 
  3639     1F3B                     	;# 
  3640     1F3C                     	;# 
  3641     1F3D                     	;# 
  3642     1F3E                     	;# 
  3643     1F3F                     	;# 
  3644     1F43                     	;# 
  3645     1F44                     	;# 
  3646     1F45                     	;# 
  3647     1F46                     	;# 
  3648     1F47                     	;# 
  3649     1F48                     	;# 
  3650     1F49                     	;# 
  3651     1F4A                     	;# 
  3652     1F4E                     	;# 
  3653     1F4F                     	;# 
  3654     1F50                     	;# 
  3655     1F51                     	;# 
  3656     1F52                     	;# 
  3657     1F53                     	;# 
  3658     1F54                     	;# 
  3659     1F55                     	;# 
  3660     1FE4                     	;# 
  3661     1FE5                     	;# 
  3662     1FE6                     	;# 
  3663     1FE7                     	;# 
  3664     1FE8                     	;# 
  3665     1FE8                     	;# 
  3666     1FE9                     	;# 
  3667     1FEA                     	;# 
  3668     1FEB                     	;# 
  3669     1FED                     	;# 
  3670     1FEE                     	;# 
  3671     1FEF                     	;# 
  3672     0000                     	;# 
  3673     0001                     	;# 
  3674     0002                     	;# 
  3675     0003                     	;# 
  3676     0004                     	;# 
  3677     0005                     	;# 
  3678     0006                     	;# 
  3679     0007                     	;# 
  3680     0008                     	;# 
  3681     0009                     	;# 
  3682     000A                     	;# 
  3683     000B                     	;# 
  3684     000C                     	;# 
  3685     000D                     	;# 
  3686     000E                     	;# 
  3687     0012                     	;# 
  3688     0013                     	;# 
  3689     0014                     	;# 
  3690     0018                     	;# 
  3691     0019                     	;# 
  3692     001A                     	;# 
  3693     008C                     	;# 
  3694     008C                     	;# 
  3695     008D                     	;# 
  3696     008E                     	;# 
  3697     008E                     	;# 
  3698     008F                     	;# 
  3699     0090                     	;# 
  3700     0090                     	;# 
  3701     0091                     	;# 
  3702     0092                     	;# 
  3703     0092                     	;# 
  3704     0093                     	;# 
  3705     0094                     	;# 
  3706     0094                     	;# 
  3707     0095                     	;# 
  3708     0096                     	;# 
  3709     0096                     	;# 
  3710     0097                     	;# 
  3711     0098                     	;# 
  3712     0099                     	;# 
  3713     009A                     	;# 
  3714     009B                     	;# 
  3715     009B                     	;# 
  3716     009C                     	;# 
  3717     009D                     	;# 
  3718     009D                     	;# 
  3719     009E                     	;# 
  3720     009F                     	;# 
  3721     010C                     	;# 
  3722     010C                     	;# 
  3723     010D                     	;# 
  3724     010E                     	;# 
  3725     010F                     	;# 
  3726     010F                     	;# 
  3727     0110                     	;# 
  3728     0111                     	;# 
  3729     0112                     	;# 
  3730     0113                     	;# 
  3731     0114                     	;# 
  3732     0115                     	;# 
  3733     0116                     	;# 
  3734     0117                     	;# 
  3735     0118                     	;# 
  3736     0119                     	;# 
  3737     0119                     	;# 
  3738     0119                     	;# 
  3739     011A                     	;# 
  3740     011A                     	;# 
  3741     011A                     	;# 
  3742     011B                     	;# 
  3743     011B                     	;# 
  3744     011B                     	;# 
  3745     011B                     	;# 
  3746     011B                     	;# 
  3747     011C                     	;# 
  3748     011C                     	;# 
  3749     011C                     	;# 
  3750     011D                     	;# 
  3751     011D                     	;# 
  3752     011D                     	;# 
  3753     011E                     	;# 
  3754     011E                     	;# 
  3755     011E                     	;# 
  3756     011F                     	;# 
  3757     011F                     	;# 
  3758     011F                     	;# 
  3759     011F                     	;# 
  3760     011F                     	;# 
  3761     018C                     	;# 
  3762     018D                     	;# 
  3763     018E                     	;# 
  3764     018F                     	;# 
  3765     0190                     	;# 
  3766     0191                     	;# 
  3767     0192                     	;# 
  3768     020C                     	;# 
  3769     020D                     	;# 
  3770     020E                     	;# 
  3771     020E                     	;# 
  3772     020F                     	;# 
  3773     020F                     	;# 
  3774     0210                     	;# 
  3775     0210                     	;# 
  3776     0211                     	;# 
  3777     0211                     	;# 
  3778     0212                     	;# 
  3779     0213                     	;# 
  3780     0214                     	;# 
  3781     0214                     	;# 
  3782     0215                     	;# 
  3783     0215                     	;# 
  3784     0216                     	;# 
  3785     0216                     	;# 
  3786     0217                     	;# 
  3787     0217                     	;# 
  3788     0218                     	;# 
  3789     0219                     	;# 
  3790     021A                     	;# 
  3791     021A                     	;# 
  3792     021B                     	;# 
  3793     021B                     	;# 
  3794     021C                     	;# 
  3795     021C                     	;# 
  3796     021D                     	;# 
  3797     021D                     	;# 
  3798     021E                     	;# 
  3799     021F                     	;# 
  3800     028C                     	;# 
  3801     028C                     	;# 
  3802     028D                     	;# 
  3803     028D                     	;# 
  3804     028E                     	;# 
  3805     028F                     	;# 
  3806     0290                     	;# 
  3807     0291                     	;# 
  3808     0292                     	;# 
  3809     0292                     	;# 
  3810     0293                     	;# 
  3811     0293                     	;# 
  3812     0294                     	;# 
  3813     0295                     	;# 
  3814     0296                     	;# 
  3815     0297                     	;# 
  3816     0298                     	;# 
  3817     0298                     	;# 
  3818     0299                     	;# 
  3819     0299                     	;# 
  3820     029A                     	;# 
  3821     029B                     	;# 
  3822     029C                     	;# 
  3823     029D                     	;# 
  3824     029F                     	;# 
  3825     030C                     	;# 
  3826     030C                     	;# 
  3827     030D                     	;# 
  3828     030E                     	;# 
  3829     030F                     	;# 
  3830     0310                     	;# 
  3831     0310                     	;# 
  3832     0311                     	;# 
  3833     0312                     	;# 
  3834     0313                     	;# 
  3835     0314                     	;# 
  3836     0314                     	;# 
  3837     0315                     	;# 
  3838     0316                     	;# 
  3839     0317                     	;# 
  3840     0318                     	;# 
  3841     0318                     	;# 
  3842     0319                     	;# 
  3843     031A                     	;# 
  3844     031B                     	;# 
  3845     038C                     	;# 
  3846     038C                     	;# 
  3847     038D                     	;# 
  3848     038E                     	;# 
  3849     0390                     	;# 
  3850     0390                     	;# 
  3851     0391                     	;# 
  3852     0392                     	;# 
  3853     048C                     	;# 
  3854     048C                     	;# 
  3855     048D                     	;# 
  3856     048E                     	;# 
  3857     048F                     	;# 
  3858     048F                     	;# 
  3859     0490                     	;# 
  3860     0491                     	;# 
  3861     0492                     	;# 
  3862     0492                     	;# 
  3863     0493                     	;# 
  3864     0494                     	;# 
  3865     0495                     	;# 
  3866     0495                     	;# 
  3867     0496                     	;# 
  3868     0497                     	;# 
  3869     0498                     	;# 
  3870     0499                     	;# 
  3871     049A                     	;# 
  3872     049B                     	;# 
  3873     049C                     	;# 
  3874     049D                     	;# 
  3875     058C                     	;# 
  3876     058C                     	;# 
  3877     058D                     	;# 
  3878     058E                     	;# 
  3879     058F                     	;# 
  3880     058F                     	;# 
  3881     0590                     	;# 
  3882     0591                     	;# 
  3883     0592                     	;# 
  3884     0593                     	;# 
  3885     059C                     	;# 
  3886     059C                     	;# 
  3887     059D                     	;# 
  3888     059D                     	;# 
  3889     059E                     	;# 
  3890     059F                     	;# 
  3891     060C                     	;# 
  3892     060C                     	;# 
  3893     060D                     	;# 
  3894     060D                     	;# 
  3895     060E                     	;# 
  3896     060F                     	;# 
  3897     0610                     	;# 
  3898     0611                     	;# 
  3899     0612                     	;# 
  3900     0613                     	;# 
  3901     0614                     	;# 
  3902     0616                     	;# 
  3903     0616                     	;# 
  3904     0617                     	;# 
  3905     0617                     	;# 
  3906     0618                     	;# 
  3907     0619                     	;# 
  3908     061A                     	;# 
  3909     061B                     	;# 
  3910     061C                     	;# 
  3911     061D                     	;# 
  3912     061E                     	;# 
  3913     070C                     	;# 
  3914     070D                     	;# 
  3915     070E                     	;# 
  3916     070F                     	;# 
  3917     0710                     	;# 
  3918     0711                     	;# 
  3919     0712                     	;# 
  3920     0713                     	;# 
  3921     0714                     	;# 
  3922     0716                     	;# 
  3923     0717                     	;# 
  3924     0718                     	;# 
  3925     0719                     	;# 
  3926     071A                     	;# 
  3927     071B                     	;# 
  3928     071C                     	;# 
  3929     071D                     	;# 
  3930     071E                     	;# 
  3931     0796                     	;# 
  3932     0797                     	;# 
  3933     0798                     	;# 
  3934     0799                     	;# 
  3935     079A                     	;# 
  3936     079B                     	;# 
  3937     079C                     	;# 
  3938     079D                     	;# 
  3939     080C                     	;# 
  3940     080D                     	;# 
  3941     080E                     	;# 
  3942     080F                     	;# 
  3943     0810                     	;# 
  3944     0811                     	;# 
  3945     0812                     	;# 
  3946     0813                     	;# 
  3947     0814                     	;# 
  3948     081A                     	;# 
  3949     081A                     	;# 
  3950     081B                     	;# 
  3951     081C                     	;# 
  3952     081C                     	;# 
  3953     081D                     	;# 
  3954     081E                     	;# 
  3955     081F                     	;# 
  3956     088C                     	;# 
  3957     088D                     	;# 
  3958     088E                     	;# 
  3959     088F                     	;# 
  3960     0890                     	;# 
  3961     0891                     	;# 
  3962     0892                     	;# 
  3963     0893                     	;# 
  3964     0895                     	;# 
  3965     0896                     	;# 
  3966     0897                     	;# 
  3967     0898                     	;# 
  3968     0899                     	;# 
  3969     089A                     	;# 
  3970     089B                     	;# 
  3971     090C                     	;# 
  3972     090E                     	;# 
  3973     090F                     	;# 
  3974     091F                     	;# 
  3975     098F                     	;# 
  3976     098F                     	;# 
  3977     0990                     	;# 
  3978     0991                     	;# 
  3979     0992                     	;# 
  3980     0993                     	;# 
  3981     0994                     	;# 
  3982     0995                     	;# 
  3983     0996                     	;# 
  3984     0997                     	;# 
  3985     1E0F                     	;# 
  3986     1E10                     	;# 
  3987     1E11                     	;# 
  3988     1E12                     	;# 
  3989     1E13                     	;# 
  3990     1E14                     	;# 
  3991     1E15                     	;# 
  3992     1E16                     	;# 
  3993     1E17                     	;# 
  3994     1E18                     	;# 
  3995     1E19                     	;# 
  3996     1E1A                     	;# 
  3997     1E1B                     	;# 
  3998     1E1C                     	;# 
  3999     1E1D                     	;# 
  4000     1E1E                     	;# 
  4001     1E1F                     	;# 
  4002     1E20                     	;# 
  4003     1E21                     	;# 
  4004     1E22                     	;# 
  4005     1E23                     	;# 
  4006     1E24                     	;# 
  4007     1E25                     	;# 
  4008     1E26                     	;# 
  4009     1E27                     	;# 
  4010     1E28                     	;# 
  4011     1E29                     	;# 
  4012     1E2A                     	;# 
  4013     1E2B                     	;# 
  4014     1E2C                     	;# 
  4015     1E2D                     	;# 
  4016     1E2E                     	;# 
  4017     1E2F                     	;# 
  4018     1E30                     	;# 
  4019     1E31                     	;# 
  4020     1E32                     	;# 
  4021     1E33                     	;# 
  4022     1E34                     	;# 
  4023     1E35                     	;# 
  4024     1E36                     	;# 
  4025     1E37                     	;# 
  4026     1E8F                     	;# 
  4027     1E90                     	;# 
  4028     1E91                     	;# 
  4029     1E92                     	;# 
  4030     1E93                     	;# 
  4031     1E94                     	;# 
  4032     1E95                     	;# 
  4033     1E96                     	;# 
  4034     1E97                     	;# 
  4035     1E9C                     	;# 
  4036     1E9D                     	;# 
  4037     1E9E                     	;# 
  4038     1EA1                     	;# 
  4039     1EA2                     	;# 
  4040     1EA3                     	;# 
  4041     1EA4                     	;# 
  4042     1EA9                     	;# 
  4043     1EAA                     	;# 
  4044     1EB1                     	;# 
  4045     1EB2                     	;# 
  4046     1EB8                     	;# 
  4047     1EB9                     	;# 
  4048     1EBA                     	;# 
  4049     1EBB                     	;# 
  4050     1EBC                     	;# 
  4051     1EBD                     	;# 
  4052     1EBE                     	;# 
  4053     1EC3                     	;# 
  4054     1EC5                     	;# 
  4055     1EC6                     	;# 
  4056     1EC7                     	;# 
  4057     1ECB                     	;# 
  4058     1ECB                     	;# 
  4059     1ECB                     	;# 
  4060     1ECC                     	;# 
  4061     1ECC                     	;# 
  4062     1ECC                     	;# 
  4063     1F10                     	;# 
  4064     1F11                     	;# 
  4065     1F12                     	;# 
  4066     1F14                     	;# 
  4067     1F15                     	;# 
  4068     1F1C                     	;# 
  4069     1F1D                     	;# 
  4070     1F1E                     	;# 
  4071     1F1F                     	;# 
  4072     1F20                     	;# 
  4073     1F21                     	;# 
  4074     1F22                     	;# 
  4075     1F23                     	;# 
  4076     1F24                     	;# 
  4077     1F25                     	;# 
  4078     1F26                     	;# 
  4079     1F27                     	;# 
  4080     1F38                     	;# 
  4081     1F39                     	;# 
  4082     1F3A                     	;# 
  4083     1F3B                     	;# 
  4084     1F3C                     	;# 
  4085     1F3D                     	;# 
  4086     1F3E                     	;# 
  4087     1F3F                     	;# 
  4088     1F43                     	;# 
  4089     1F44                     	;# 
  4090     1F45                     	;# 
  4091     1F46                     	;# 
  4092     1F47                     	;# 
  4093     1F48                     	;# 
  4094     1F49                     	;# 
  4095     1F4A                     	;# 
  4096     1F4E                     	;# 
  4097     1F4F                     	;# 
  4098     1F50                     	;# 
  4099     1F51                     	;# 
  4100     1F52                     	;# 
  4101     1F53                     	;# 
  4102     1F54                     	;# 
  4103     1F55                     	;# 
  4104     1FE4                     	;# 
  4105     1FE5                     	;# 
  4106     1FE6                     	;# 
  4107     1FE7                     	;# 
  4108     1FE8                     	;# 
  4109     1FE8                     	;# 
  4110     1FE9                     	;# 
  4111     1FEA                     	;# 
  4112     1FEB                     	;# 
  4113     1FED                     	;# 
  4114     1FEE                     	;# 
  4115     1FEF                     	;# 
  4116                           
  4117                           	psect	eeprom_data
  4118     0000  0001 0052 0001 0003 0000 0004 0002 0006 	db	1,82,1,3,0,4,2,6	;# 
  4119     0008  0000 0052 0005 0007 0001 0000 0002 0004 	db	0,82,5,7,1,0,2,4	;# 
  4120     0010  0000 0052 0005 0007 0001 0000 0001 0005 	db	0,82,5,7,1,0,1,5	;# 
  4121     0018  0000 0052 0005 0002 0003 0002 0009 0009 	db	0,82,5,2,3,2,9,9	;# 
  4122     0020  0000 0052 0004 0005 0006 0009 0000 0003 	db	0,82,4,5,6,9,0,3	;# 
  4123     0028  0000 0052 0004 0000 0009 0004 0002 0000 	db	0,82,4,0,9,4,2,0	;# 
  4124     0030  0000 0052 0003 0003 0007 0001 0008 0007 	db	0,82,3,3,7,1,8,7	;# 
  4125     0038  0000 0052 0004 0000 0009 0004 0003 0001 	db	0,82,4,0,9,4,3,1	;# 
  4126     0040  0001 0052 0000 0004 0008 0005 0009 0006 	db	1,82,0,4,8,5,9,6	;# 
  4127     0048  000A 0052 0002 0007 0005 0003 0004 0009 	db	10,82,2,7,5,3,4,9	;# 
  4128     0050  0000 0052 0004 0005 0006 0009 0001 0004 	db	0,82,4,5,6,9,1,4	;# 
  4129     0058  0000 0052 0005 0002 0003 0003 0000 0007 	db	0,82,5,2,3,3,0,7	;# 
  4130     0060  0000 0052 0005 0007 0001 0000 0004 0006 	db	0,82,5,7,1,0,4,6	;# 
  4131     0068  0001 0052 0001 0003 0000 0002 0003 0008 	db	1,82,1,3,0,2,3,8	;# 
  4132     0070  0001 0052 0000 0004 0008 0005 0009 0006 	db	1,82,0,4,8,5,9,6	;# 
  4133     0000                     	;# 
  4134     0001                     	;# 
  4135     0002                     	;# 
  4136     0003                     	;# 
  4137     0004                     	;# 
  4138     0005                     	;# 
  4139     0006                     	;# 
  4140     0007                     	;# 
  4141     0008                     	;# 
  4142     0009                     	;# 
  4143     000A                     	;# 
  4144     000B                     	;# 
  4145     000C                     	;# 
  4146     000D                     	;# 
  4147     000E                     	;# 
  4148     0012                     	;# 
  4149     0013                     	;# 
  4150     0014                     	;# 
  4151     0018                     	;# 
  4152     0019                     	;# 
  4153     001A                     	;# 
  4154     008C                     	;# 
  4155     008C                     	;# 
  4156     008D                     	;# 
  4157     008E                     	;# 
  4158     008E                     	;# 
  4159     008F                     	;# 
  4160     0090                     	;# 
  4161     0090                     	;# 
  4162     0091                     	;# 
  4163     0092                     	;# 
  4164     0092                     	;# 
  4165     0093                     	;# 
  4166     0094                     	;# 
  4167     0094                     	;# 
  4168     0095                     	;# 
  4169     0096                     	;# 
  4170     0096                     	;# 
  4171     0097                     	;# 
  4172     0098                     	;# 
  4173     0099                     	;# 
  4174     009A                     	;# 
  4175     009B                     	;# 
  4176     009B                     	;# 
  4177     009C                     	;# 
  4178     009D                     	;# 
  4179     009D                     	;# 
  4180     009E                     	;# 
  4181     009F                     	;# 
  4182     010C                     	;# 
  4183     010C                     	;# 
  4184     010D                     	;# 
  4185     010E                     	;# 
  4186     010F                     	;# 
  4187     010F                     	;# 
  4188     0110                     	;# 
  4189     0111                     	;# 
  4190     0112                     	;# 
  4191     0113                     	;# 
  4192     0114                     	;# 
  4193     0115                     	;# 
  4194     0116                     	;# 
  4195     0117                     	;# 
  4196     0118                     	;# 
  4197     0119                     	;# 
  4198     0119                     	;# 
  4199     0119                     	;# 
  4200     011A                     	;# 
  4201     011A                     	;# 
  4202     011A                     	;# 
  4203     011B                     	;# 
  4204     011B                     	;# 
  4205     011B                     	;# 
  4206     011B                     	;# 
  4207     011B                     	;# 
  4208     011C                     	;# 
  4209     011C                     	;# 
  4210     011C                     	;# 
  4211     011D                     	;# 
  4212     011D                     	;# 
  4213     011D                     	;# 
  4214     011E                     	;# 
  4215     011E                     	;# 
  4216     011E                     	;# 
  4217     011F                     	;# 
  4218     011F                     	;# 
  4219     011F                     	;# 
  4220     011F                     	;# 
  4221     011F                     	;# 
  4222     018C                     	;# 
  4223     018D                     	;# 
  4224     018E                     	;# 
  4225     018F                     	;# 
  4226     0190                     	;# 
  4227     0191                     	;# 
  4228     0192                     	;# 
  4229     020C                     	;# 
  4230     020D                     	;# 
  4231     020E                     	;# 
  4232     020E                     	;# 
  4233     020F                     	;# 
  4234     020F                     	;# 
  4235     0210                     	;# 
  4236     0210                     	;# 
  4237     0211                     	;# 
  4238     0211                     	;# 
  4239     0212                     	;# 
  4240     0213                     	;# 
  4241     0214                     	;# 
  4242     0214                     	;# 
  4243     0215                     	;# 
  4244     0215                     	;# 
  4245     0216                     	;# 
  4246     0216                     	;# 
  4247     0217                     	;# 
  4248     0217                     	;# 
  4249     0218                     	;# 
  4250     0219                     	;# 
  4251     021A                     	;# 
  4252     021A                     	;# 
  4253     021B                     	;# 
  4254     021B                     	;# 
  4255     021C                     	;# 
  4256     021C                     	;# 
  4257     021D                     	;# 
  4258     021D                     	;# 
  4259     021E                     	;# 
  4260     021F                     	;# 
  4261     028C                     	;# 
  4262     028C                     	;# 
  4263     028D                     	;# 
  4264     028D                     	;# 
  4265     028E                     	;# 
  4266     028F                     	;# 
  4267     0290                     	;# 
  4268     0291                     	;# 
  4269     0292                     	;# 
  4270     0292                     	;# 
  4271     0293                     	;# 
  4272     0293                     	;# 
  4273     0294                     	;# 
  4274     0295                     	;# 
  4275     0296                     	;# 
  4276     0297                     	;# 
  4277     0298                     	;# 
  4278     0298                     	;# 
  4279     0299                     	;# 
  4280     0299                     	;# 
  4281     029A                     	;# 
  4282     029B                     	;# 
  4283     029C                     	;# 
  4284     029D                     	;# 
  4285     029F                     	;# 
  4286     030C                     	;# 
  4287     030C                     	;# 
  4288     030D                     	;# 
  4289     030E                     	;# 
  4290     030F                     	;# 
  4291     0310                     	;# 
  4292     0310                     	;# 
  4293     0311                     	;# 
  4294     0312                     	;# 
  4295     0313                     	;# 
  4296     0314                     	;# 
  4297     0314                     	;# 
  4298     0315                     	;# 
  4299     0316                     	;# 
  4300     0317                     	;# 
  4301     0318                     	;# 
  4302     0318                     	;# 
  4303     0319                     	;# 
  4304     031A                     	;# 
  4305     031B                     	;# 
  4306     038C                     	;# 
  4307     038C                     	;# 
  4308     038D                     	;# 
  4309     038E                     	;# 
  4310     0390                     	;# 
  4311     0390                     	;# 
  4312     0391                     	;# 
  4313     0392                     	;# 
  4314     048C                     	;# 
  4315     048C                     	;# 
  4316     048D                     	;# 
  4317     048E                     	;# 
  4318     048F                     	;# 
  4319     048F                     	;# 
  4320     0490                     	;# 
  4321     0491                     	;# 
  4322     0492                     	;# 
  4323     0492                     	;# 
  4324     0493                     	;# 
  4325     0494                     	;# 
  4326     0495                     	;# 
  4327     0495                     	;# 
  4328     0496                     	;# 
  4329     0497                     	;# 
  4330     0498                     	;# 
  4331     0499                     	;# 
  4332     049A                     	;# 
  4333     049B                     	;# 
  4334     049C                     	;# 
  4335     049D                     	;# 
  4336     058C                     	;# 
  4337     058C                     	;# 
  4338     058D                     	;# 
  4339     058E                     	;# 
  4340     058F                     	;# 
  4341     058F                     	;# 
  4342     0590                     	;# 
  4343     0591                     	;# 
  4344     0592                     	;# 
  4345     0593                     	;# 
  4346     059C                     	;# 
  4347     059C                     	;# 
  4348     059D                     	;# 
  4349     059D                     	;# 
  4350     059E                     	;# 
  4351     059F                     	;# 
  4352     060C                     	;# 
  4353     060C                     	;# 
  4354     060D                     	;# 
  4355     060D                     	;# 
  4356     060E                     	;# 
  4357     060F                     	;# 
  4358     0610                     	;# 
  4359     0611                     	;# 
  4360     0612                     	;# 
  4361     0613                     	;# 
  4362     0614                     	;# 
  4363     0616                     	;# 
  4364     0616                     	;# 
  4365     0617                     	;# 
  4366     0617                     	;# 
  4367     0618                     	;# 
  4368     0619                     	;# 
  4369     061A                     	;# 
  4370     061B                     	;# 
  4371     061C                     	;# 
  4372     061D                     	;# 
  4373     061E                     	;# 
  4374     070C                     	;# 
  4375     070D                     	;# 
  4376     070E                     	;# 
  4377     070F                     	;# 
  4378     0710                     	;# 
  4379     0711                     	;# 
  4380     0712                     	;# 
  4381     0713                     	;# 
  4382     0714                     	;# 
  4383     0716                     	;# 
  4384     0717                     	;# 
  4385     0718                     	;# 
  4386     0719                     	;# 
  4387     071A                     	;# 
  4388     071B                     	;# 
  4389     071C                     	;# 
  4390     071D                     	;# 
  4391     071E                     	;# 
  4392     0796                     	;# 
  4393     0797                     	;# 
  4394     0798                     	;# 
  4395     0799                     	;# 
  4396     079A                     	;# 
  4397     079B                     	;# 
  4398     079C                     	;# 
  4399     079D                     	;# 
  4400     080C                     	;# 
  4401     080D                     	;# 
  4402     080E                     	;# 
  4403     080F                     	;# 
  4404     0810                     	;# 
  4405     0811                     	;# 
  4406     0812                     	;# 
  4407     0813                     	;# 
  4408     0814                     	;# 
  4409     081A                     	;# 
  4410     081A                     	;# 
  4411     081B                     	;# 
  4412     081C                     	;# 
  4413     081C                     	;# 
  4414     081D                     	;# 
  4415     081E                     	;# 
  4416     081F                     	;# 
  4417     088C                     	;# 
  4418     088D                     	;# 
  4419     088E                     	;# 
  4420     088F                     	;# 
  4421     0890                     	;# 
  4422     0891                     	;# 
  4423     0892                     	;# 
  4424     0893                     	;# 
  4425     0895                     	;# 
  4426     0896                     	;# 
  4427     0897                     	;# 
  4428     0898                     	;# 
  4429     0899                     	;# 
  4430     089A                     	;# 
  4431     089B                     	;# 
  4432     090C                     	;# 
  4433     090E                     	;# 
  4434     090F                     	;# 
  4435     091F                     	;# 
  4436     098F                     	;# 
  4437     098F                     	;# 
  4438     0990                     	;# 
  4439     0991                     	;# 
  4440     0992                     	;# 
  4441     0993                     	;# 
  4442     0994                     	;# 
  4443     0995                     	;# 
  4444     0996                     	;# 
  4445     0997                     	;# 
  4446     1E0F                     	;# 
  4447     1E10                     	;# 
  4448     1E11                     	;# 
  4449     1E12                     	;# 
  4450     1E13                     	;# 
  4451     1E14                     	;# 
  4452     1E15                     	;# 
  4453     1E16                     	;# 
  4454     1E17                     	;# 
  4455     1E18                     	;# 
  4456     1E19                     	;# 
  4457     1E1A                     	;# 
  4458     1E1B                     	;# 
  4459     1E1C                     	;# 
  4460     1E1D                     	;# 
  4461     1E1E                     	;# 
  4462     1E1F                     	;# 
  4463     1E20                     	;# 
  4464     1E21                     	;# 
  4465     1E22                     	;# 
  4466     1E23                     	;# 
  4467     1E24                     	;# 
  4468     1E25                     	;# 
  4469     1E26                     	;# 
  4470     1E27                     	;# 
  4471     1E28                     	;# 
  4472     1E29                     	;# 
  4473     1E2A                     	;# 
  4474     1E2B                     	;# 
  4475     1E2C                     	;# 
  4476     1E2D                     	;# 
  4477     1E2E                     	;# 
  4478     1E2F                     	;# 
  4479     1E30                     	;# 
  4480     1E31                     	;# 
  4481     1E32                     	;# 
  4482     1E33                     	;# 
  4483     1E34                     	;# 
  4484     1E35                     	;# 
  4485     1E36                     	;# 
  4486     1E37                     	;# 
  4487     1E8F                     	;# 
  4488     1E90                     	;# 
  4489     1E91                     	;# 
  4490     1E92                     	;# 
  4491     1E93                     	;# 
  4492     1E94                     	;# 
  4493     1E95                     	;# 
  4494     1E96                     	;# 
  4495     1E97                     	;# 
  4496     1E9C                     	;# 
  4497     1E9D                     	;# 
  4498     1E9E                     	;# 
  4499     1EA1                     	;# 
  4500     1EA2                     	;# 
  4501     1EA3                     	;# 
  4502     1EA4                     	;# 
  4503     1EA9                     	;# 
  4504     1EAA                     	;# 
  4505     1EB1                     	;# 
  4506     1EB2                     	;# 
  4507     1EB8                     	;# 
  4508     1EB9                     	;# 
  4509     1EBA                     	;# 
  4510     1EBB                     	;# 
  4511     1EBC                     	;# 
  4512     1EBD                     	;# 
  4513     1EBE                     	;# 
  4514     1EC3                     	;# 
  4515     1EC5                     	;# 
  4516     1EC6                     	;# 
  4517     1EC7                     	;# 
  4518     1ECB                     	;# 
  4519     1ECB                     	;# 
  4520     1ECB                     	;# 
  4521     1ECC                     	;# 
  4522     1ECC                     	;# 
  4523     1ECC                     	;# 
  4524     1F10                     	;# 
  4525     1F11                     	;# 
  4526     1F12                     	;# 
  4527     1F14                     	;# 
  4528     1F15                     	;# 
  4529     1F1C                     	;# 
  4530     1F1D                     	;# 
  4531     1F1E                     	;# 
  4532     1F1F                     	;# 
  4533     1F20                     	;# 
  4534     1F21                     	;# 
  4535     1F22                     	;# 
  4536     1F23                     	;# 
  4537     1F24                     	;# 
  4538     1F25                     	;# 
  4539     1F26                     	;# 
  4540     1F27                     	;# 
  4541     1F38                     	;# 
  4542     1F39                     	;# 
  4543     1F3A                     	;# 
  4544     1F3B                     	;# 
  4545     1F3C                     	;# 
  4546     1F3D                     	;# 
  4547     1F3E                     	;# 
  4548     1F3F                     	;# 
  4549     1F43                     	;# 
  4550     1F44                     	;# 
  4551     1F45                     	;# 
  4552     1F46                     	;# 
  4553     1F47                     	;# 
  4554     1F48                     	;# 
  4555     1F49                     	;# 
  4556     1F4A                     	;# 
  4557     1F4E                     	;# 
  4558     1F4F                     	;# 
  4559     1F50                     	;# 
  4560     1F51                     	;# 
  4561     1F52                     	;# 
  4562     1F53                     	;# 
  4563     1F54                     	;# 
  4564     1F55                     	;# 
  4565     1FE4                     	;# 
  4566     1FE5                     	;# 
  4567     1FE6                     	;# 
  4568     1FE7                     	;# 
  4569     1FE8                     	;# 
  4570     1FE8                     	;# 
  4571     1FE9                     	;# 
  4572     1FEA                     	;# 
  4573     1FEB                     	;# 
  4574     1FED                     	;# 
  4575     1FEE                     	;# 
  4576     1FEF                     	;# 
  4577     0000                     	;# 
  4578     0001                     	;# 
  4579     0002                     	;# 
  4580     0003                     	;# 
  4581     0004                     	;# 
  4582     0005                     	;# 
  4583     0006                     	;# 
  4584     0007                     	;# 
  4585     0008                     	;# 
  4586     0009                     	;# 
  4587     000A                     	;# 
  4588     000B                     	;# 
  4589     000C                     	;# 
  4590     000D                     	;# 
  4591     000E                     	;# 
  4592     0012                     	;# 
  4593     0013                     	;# 
  4594     0014                     	;# 
  4595     0018                     	;# 
  4596     0019                     	;# 
  4597     001A                     	;# 
  4598     008C                     	;# 
  4599     008C                     	;# 
  4600     008D                     	;# 
  4601     008E                     	;# 
  4602     008E                     	;# 
  4603     008F                     	;# 
  4604     0090                     	;# 
  4605     0090                     	;# 
  4606     0091                     	;# 
  4607     0092                     	;# 
  4608     0092                     	;# 
  4609     0093                     	;# 
  4610     0094                     	;# 
  4611     0094                     	;# 
  4612     0095                     	;# 
  4613     0096                     	;# 
  4614     0096                     	;# 
  4615     0097                     	;# 
  4616     0098                     	;# 
  4617     0099                     	;# 
  4618     009A                     	;# 
  4619     009B                     	;# 
  4620     009B                     	;# 
  4621     009C                     	;# 
  4622     009D                     	;# 
  4623     009D                     	;# 
  4624     009E                     	;# 
  4625     009F                     	;# 
  4626     010C                     	;# 
  4627     010C                     	;# 
  4628     010D                     	;# 
  4629     010E                     	;# 
  4630     010F                     	;# 
  4631     010F                     	;# 
  4632     0110                     	;# 
  4633     0111                     	;# 
  4634     0112                     	;# 
  4635     0113                     	;# 
  4636     0114                     	;# 
  4637     0115                     	;# 
  4638     0116                     	;# 
  4639     0117                     	;# 
  4640     0118                     	;# 
  4641     0119                     	;# 
  4642     0119                     	;# 
  4643     0119                     	;# 
  4644     011A                     	;# 
  4645     011A                     	;# 
  4646     011A                     	;# 
  4647     011B                     	;# 
  4648     011B                     	;# 
  4649     011B                     	;# 
  4650     011B                     	;# 
  4651     011B                     	;# 
  4652     011C                     	;# 
  4653     011C                     	;# 
  4654     011C                     	;# 
  4655     011D                     	;# 
  4656     011D                     	;# 
  4657     011D                     	;# 
  4658     011E                     	;# 
  4659     011E                     	;# 
  4660     011E                     	;# 
  4661     011F                     	;# 
  4662     011F                     	;# 
  4663     011F                     	;# 
  4664     011F                     	;# 
  4665     011F                     	;# 
  4666     018C                     	;# 
  4667     018D                     	;# 
  4668     018E                     	;# 
  4669     018F                     	;# 
  4670     0190                     	;# 
  4671     0191                     	;# 
  4672     0192                     	;# 
  4673     020C                     	;# 
  4674     020D                     	;# 
  4675     020E                     	;# 
  4676     020E                     	;# 
  4677     020F                     	;# 
  4678     020F                     	;# 
  4679     0210                     	;# 
  4680     0210                     	;# 
  4681     0211                     	;# 
  4682     0211                     	;# 
  4683     0212                     	;# 
  4684     0213                     	;# 
  4685     0214                     	;# 
  4686     0214                     	;# 
  4687     0215                     	;# 
  4688     0215                     	;# 
  4689     0216                     	;# 
  4690     0216                     	;# 
  4691     0217                     	;# 
  4692     0217                     	;# 
  4693     0218                     	;# 
  4694     0219                     	;# 
  4695     021A                     	;# 
  4696     021A                     	;# 
  4697     021B                     	;# 
  4698     021B                     	;# 
  4699     021C                     	;# 
  4700     021C                     	;# 
  4701     021D                     	;# 
  4702     021D                     	;# 
  4703     021E                     	;# 
  4704     021F                     	;# 
  4705     028C                     	;# 
  4706     028C                     	;# 
  4707     028D                     	;# 
  4708     028D                     	;# 
  4709     028E                     	;# 
  4710     028F                     	;# 
  4711     0290                     	;# 
  4712     0291                     	;# 
  4713     0292                     	;# 
  4714     0292                     	;# 
  4715     0293                     	;# 
  4716     0293                     	;# 
  4717     0294                     	;# 
  4718     0295                     	;# 
  4719     0296                     	;# 
  4720     0297                     	;# 
  4721     0298                     	;# 
  4722     0298                     	;# 
  4723     0299                     	;# 
  4724     0299                     	;# 
  4725     029A                     	;# 
  4726     029B                     	;# 
  4727     029C                     	;# 
  4728     029D                     	;# 
  4729     029F                     	;# 
  4730     030C                     	;# 
  4731     030C                     	;# 
  4732     030D                     	;# 
  4733     030E                     	;# 
  4734     030F                     	;# 
  4735     0310                     	;# 
  4736     0310                     	;# 
  4737     0311                     	;# 
  4738     0312                     	;# 
  4739     0313                     	;# 
  4740     0314                     	;# 
  4741     0314                     	;# 
  4742     0315                     	;# 
  4743     0316                     	;# 
  4744     0317                     	;# 
  4745     0318                     	;# 
  4746     0318                     	;# 
  4747     0319                     	;# 
  4748     031A                     	;# 
  4749     031B                     	;# 
  4750     038C                     	;# 
  4751     038C                     	;# 
  4752     038D                     	;# 
  4753     038E                     	;# 
  4754     0390                     	;# 
  4755     0390                     	;# 
  4756     0391                     	;# 
  4757     0392                     	;# 
  4758     048C                     	;# 
  4759     048C                     	;# 
  4760     048D                     	;# 
  4761     048E                     	;# 
  4762     048F                     	;# 
  4763     048F                     	;# 
  4764     0490                     	;# 
  4765     0491                     	;# 
  4766     0492                     	;# 
  4767     0492                     	;# 
  4768     0493                     	;# 
  4769     0494                     	;# 
  4770     0495                     	;# 
  4771     0495                     	;# 
  4772     0496                     	;# 
  4773     0497                     	;# 
  4774     0498                     	;# 
  4775     0499                     	;# 
  4776     049A                     	;# 
  4777     049B                     	;# 
  4778     049C                     	;# 
  4779     049D                     	;# 
  4780     058C                     	;# 
  4781     058C                     	;# 
  4782     058D                     	;# 
  4783     058E                     	;# 
  4784     058F                     	;# 
  4785     058F                     	;# 
  4786     0590                     	;# 
  4787     0591                     	;# 
  4788     0592                     	;# 
  4789     0593                     	;# 
  4790     059C                     	;# 
  4791     059C                     	;# 
  4792     059D                     	;# 
  4793     059D                     	;# 
  4794     059E                     	;# 
  4795     059F                     	;# 
  4796     060C                     	;# 
  4797     060C                     	;# 
  4798     060D                     	;# 
  4799     060D                     	;# 
  4800     060E                     	;# 
  4801     060F                     	;# 
  4802     0610                     	;# 
  4803     0611                     	;# 
  4804     0612                     	;# 
  4805     0613                     	;# 
  4806     0614                     	;# 
  4807     0616                     	;# 
  4808     0616                     	;# 
  4809     0617                     	;# 
  4810     0617                     	;# 
  4811     0618                     	;# 
  4812     0619                     	;# 
  4813     061A                     	;# 
  4814     061B                     	;# 
  4815     061C                     	;# 
  4816     061D                     	;# 
  4817     061E                     	;# 
  4818     070C                     	;# 
  4819     070D                     	;# 
  4820     070E                     	;# 
  4821     070F                     	;# 
  4822     0710                     	;# 
  4823     0711                     	;# 
  4824     0712                     	;# 
  4825     0713                     	;# 
  4826     0714                     	;# 
  4827     0716                     	;# 
  4828     0717                     	;# 
  4829     0718                     	;# 
  4830     0719                     	;# 
  4831     071A                     	;# 
  4832     071B                     	;# 
  4833     071C                     	;# 
  4834     071D                     	;# 
  4835     071E                     	;# 
  4836     0796                     	;# 
  4837     0797                     	;# 
  4838     0798                     	;# 
  4839     0799                     	;# 
  4840     079A                     	;# 
  4841     079B                     	;# 
  4842     079C                     	;# 
  4843     079D                     	;# 
  4844     080C                     	;# 
  4845     080D                     	;# 
  4846     080E                     	;# 
  4847     080F                     	;# 
  4848     0810                     	;# 
  4849     0811                     	;# 
  4850     0812                     	;# 
  4851     0813                     	;# 
  4852     0814                     	;# 
  4853     081A                     	;# 
  4854     081A                     	;# 
  4855     081B                     	;# 
  4856     081C                     	;# 
  4857     081C                     	;# 
  4858     081D                     	;# 
  4859     081E                     	;# 
  4860     081F                     	;# 
  4861     088C                     	;# 
  4862     088D                     	;# 
  4863     088E                     	;# 
  4864     088F                     	;# 
  4865     0890                     	;# 
  4866     0891                     	;# 
  4867     0892                     	;# 
  4868     0893                     	;# 
  4869     0895                     	;# 
  4870     0896                     	;# 
  4871     0897                     	;# 
  4872     0898                     	;# 
  4873     0899                     	;# 
  4874     089A                     	;# 
  4875     089B                     	;# 
  4876     090C                     	;# 
  4877     090E                     	;# 
  4878     090F                     	;# 
  4879     091F                     	;# 
  4880     098F                     	;# 
  4881     098F                     	;# 
  4882     0990                     	;# 
  4883     0991                     	;# 
  4884     0992                     	;# 
  4885     0993                     	;# 
  4886     0994                     	;# 
  4887     0995                     	;# 
  4888     0996                     	;# 
  4889     0997                     	;# 
  4890     1E0F                     	;# 
  4891     1E10                     	;# 
  4892     1E11                     	;# 
  4893     1E12                     	;# 
  4894     1E13                     	;# 
  4895     1E14                     	;# 
  4896     1E15                     	;# 
  4897     1E16                     	;# 
  4898     1E17                     	;# 
  4899     1E18                     	;# 
  4900     1E19                     	;# 
  4901     1E1A                     	;# 
  4902     1E1B                     	;# 
  4903     1E1C                     	;# 
  4904     1E1D                     	;# 
  4905     1E1E                     	;# 
  4906     1E1F                     	;# 
  4907     1E20                     	;# 
  4908     1E21                     	;# 
  4909     1E22                     	;# 
  4910     1E23                     	;# 
  4911     1E24                     	;# 
  4912     1E25                     	;# 
  4913     1E26                     	;# 
  4914     1E27                     	;# 
  4915     1E28                     	;# 
  4916     1E29                     	;# 
  4917     1E2A                     	;# 
  4918     1E2B                     	;# 
  4919     1E2C                     	;# 
  4920     1E2D                     	;# 
  4921     1E2E                     	;# 
  4922     1E2F                     	;# 
  4923     1E30                     	;# 
  4924     1E31                     	;# 
  4925     1E32                     	;# 
  4926     1E33                     	;# 
  4927     1E34                     	;# 
  4928     1E35                     	;# 
  4929     1E36                     	;# 
  4930     1E37                     	;# 
  4931     1E8F                     	;# 
  4932     1E90                     	;# 
  4933     1E91                     	;# 
  4934     1E92                     	;# 
  4935     1E93                     	;# 
  4936     1E94                     	;# 
  4937     1E95                     	;# 
  4938     1E96                     	;# 
  4939     1E97                     	;# 
  4940     1E9C                     	;# 
  4941     1E9D                     	;# 
  4942     1E9E                     	;# 
  4943     1EA1                     	;# 
  4944     1EA2                     	;# 
  4945     1EA3                     	;# 
  4946     1EA4                     	;# 
  4947     1EA9                     	;# 
  4948     1EAA                     	;# 
  4949     1EB1                     	;# 
  4950     1EB2                     	;# 
  4951     1EB8                     	;# 
  4952     1EB9                     	;# 
  4953     1EBA                     	;# 
  4954     1EBB                     	;# 
  4955     1EBC                     	;# 
  4956     1EBD                     	;# 
  4957     1EBE                     	;# 
  4958     1EC3                     	;# 
  4959     1EC5                     	;# 
  4960     1EC6                     	;# 
  4961     1EC7                     	;# 
  4962     1ECB                     	;# 
  4963     1ECB                     	;# 
  4964     1ECB                     	;# 
  4965     1ECC                     	;# 
  4966     1ECC                     	;# 
  4967     1ECC                     	;# 
  4968     1F10                     	;# 
  4969     1F11                     	;# 
  4970     1F12                     	;# 
  4971     1F14                     	;# 
  4972     1F15                     	;# 
  4973     1F1C                     	;# 
  4974     1F1D                     	;# 
  4975     1F1E                     	;# 
  4976     1F1F                     	;# 
  4977     1F20                     	;# 
  4978     1F21                     	;# 
  4979     1F22                     	;# 
  4980     1F23                     	;# 
  4981     1F24                     	;# 
  4982     1F25                     	;# 
  4983     1F26                     	;# 
  4984     1F27                     	;# 
  4985     1F38                     	;# 
  4986     1F39                     	;# 
  4987     1F3A                     	;# 
  4988     1F3B                     	;# 
  4989     1F3C                     	;# 
  4990     1F3D                     	;# 
  4991     1F3E                     	;# 
  4992     1F3F                     	;# 
  4993     1F43                     	;# 
  4994     1F44                     	;# 
  4995     1F45                     	;# 
  4996     1F46                     	;# 
  4997     1F47                     	;# 
  4998     1F48                     	;# 
  4999     1F49                     	;# 
  5000     1F4A                     	;# 
  5001     1F4E                     	;# 
  5002     1F4F                     	;# 
  5003     1F50                     	;# 
  5004     1F51                     	;# 
  5005     1F52                     	;# 
  5006     1F53                     	;# 
  5007     1F54                     	;# 
  5008     1F55                     	;# 
  5009     1FE4                     	;# 
  5010     1FE5                     	;# 
  5011     1FE6                     	;# 
  5012     1FE7                     	;# 
  5013     1FE8                     	;# 
  5014     1FE8                     	;# 
  5015     1FE9                     	;# 
  5016     1FEA                     	;# 
  5017     1FEB                     	;# 
  5018     1FED                     	;# 
  5019     1FEE                     	;# 
  5020     1FEF                     	;# 
  5021                           
  5022 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  5023     0000                     
  5024 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  5025     0000                     
  5026 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  5027     0000                     
  5028 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  5029     0000                     
  5030 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  5031     0000                     
  5032 ;; Function _rd1RegCompleteHandler@i2c1_master_example$F143 is unused but had its address taken
  5033     0000                     
  5034 ;; Function _rd2RegCompleteHandler@i2c1_master_example$F154 is unused but had its address taken
  5035     0000                     
  5036 ;; Function _wr1RegCompleteHandler@i2c1_master_example$F160 is unused but had its address taken
  5037     0000                     
  5038 ;; Function _wr2RegCompleteHandler@i2c1_master_example$F166 is unused but had its address taken
  5039     0000                     
  5040 ;; Function _rdBlkRegCompleteHandler@i2c1_master_example$F177 is unused but had its address taken
  5041     0000                     
  5042 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  5043     0000                     
  5044 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  5045     0000                     
  5046 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  5047     0000                     
  5048 ;; Function _I2C1_DO_TX is unused but had its address taken
  5049     0000                     
  5050 ;; Function _I2C1_DO_RX is unused but had its address taken
  5051     0000                     
  5052 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  5053     0000                     
  5054 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  5055     0000                     
  5056 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  5057     0000                     
  5058 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  5059     0000                     
  5060 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  5061     0000                     
  5062 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  5063     0000                     
  5064 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  5065     0000                     
  5066 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  5067     0000                     
  5068 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  5069     0000                     
  5070 ;; Function _I2C1_DO_RESET is unused but had its address taken
  5071     0000                     
  5072 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  5073     0000                     
  5074 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  5075     0000                     
  5076 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  5077     0000                     
  5078                           	psect	idataBANK1
  5079     0D21                     __pidataBANK1:
  5080                           
  5081                           ;initializer for Loader@F11213
  5082     0D21  344C               	retlw	76
  5083     0D22  3401               	retlw	1
  5084     0D23  3402               	retlw	2
  5085     0D24  3403               	retlw	3
  5086     0D25  3404               	retlw	4
  5087     0D26  3405               	retlw	5
  5088     0D27  3406               	retlw	6
  5089     0D28  3407               	retlw	7
  5090     0D29  3408               	retlw	8
  5091     0D2A  3409               	retlw	9
  5092     0D2B  3400               	retlw	0
  5093     0D2C  3452               	retlw	82
  5094                           
  5095                           	psect	idataBANK2
  5096     0783                     __pidataBANK2:
  5097                           
  5098                           ;initializer for _RunLength
  5099     0783  3414               	retlw	20
  5100     0784  341E               	retlw	30
  5101     0785  3428               	retlw	40
  5102     0786  3432               	retlw	50
  5103     0787  3432               	retlw	50
  5104     0788  343C               	retlw	60
  5105     0789  343C               	retlw	60
  5106     078A  3446               	retlw	70
  5107     078B  340F               	retlw	15
  5108     078C  3419               	retlw	25
  5109     078D  3423               	retlw	35
  5110     078E  342D               	retlw	45
  5111     078F  3437               	retlw	55
  5112     0790  3437               	retlw	55
  5113     0791  3437               	retlw	55
  5114     0792  3441               	retlw	65
  5115     0793  3412               	retlw	18
  5116     0794  3413               	retlw	19
  5117     0795  3416               	retlw	22
  5118     0796  3417               	retlw	23
  5119     0797  3418               	retlw	24
  5120     0798  341A               	retlw	26
  5121     0799  341B               	retlw	27
  5122     079A  341C               	retlw	28
  5123     079B  341D               	retlw	29
  5124     079C  341F               	retlw	31
  5125     079D  3420               	retlw	32
  5126     079E  3421               	retlw	33
  5127     079F  3422               	retlw	34
  5128     07A0  3424               	retlw	36
  5129     07A1  3425               	retlw	37
  5130     07A2  3426               	retlw	38
  5131     07A3  3427               	retlw	39
  5132     07A4  3429               	retlw	41
  5133     07A5  342A               	retlw	42
  5134     07A6  342B               	retlw	43
  5135     07A7  342C               	retlw	44
  5136     07A8  342E               	retlw	46
  5137     07A9  342F               	retlw	47
  5138     07AA  3430               	retlw	48
  5139     07AB  3431               	retlw	49
  5140     07AC  3410               	retlw	16
  5141     07AD  3433               	retlw	51
  5142     07AE  3411               	retlw	17
  5143     07AF  3434               	retlw	52
  5144     07B0  3444               	retlw	68
  5145     07B1  3435               	retlw	53
  5146     07B2  3443               	retlw	67
  5147     07B3  3415               	retlw	21
  5148     07B4  3445               	retlw	69
  5149     07B5  3436               	retlw	54
  5150     07B6  3438               	retlw	56
  5151     07B7  3438               	retlw	56
  5152     07B8  3440               	retlw	64
  5153     07B9  3439               	retlw	57
  5154     07BA  3439               	retlw	57
  5155     07BB  3442               	retlw	66
  5156     07BC  343A               	retlw	58
  5157     07BD  343A               	retlw	58
  5158     07BE  343F               	retlw	63
  5159     07BF  343B               	retlw	59
  5160     07C0  343B               	retlw	59
  5161     07C1  343D               	retlw	61
  5162     07C2  343E               	retlw	62
  5163                           
  5164                           	psect	idataEEDATA
  5165     0078                     __pidataEEDATA:
  5166     0078                     _BlankEndStore:	
  5167                           ;initializer for _BlankEndStore
  5168                           
  5169     0078  0016               	db	22
  5170     0079                     _BlankStartStore:	
  5171                           ;initializer for _BlankStartStore
  5172                           
  5173     0079  0016               	db	22
  5174     007A                     _HourTypeStore:	
  5175                           ;initializer for _HourTypeStore
  5176                           
  5177     007A  0001               	db	1
  5178     007B                     _BrightnessStore:	
  5179                           ;initializer for _BrightnessStore
  5180                           
  5181     007B  0005               	db	5
  5182     007C                     _TimeFastStore:	
  5183                           ;initializer for _TimeFastStore
  5184                           
  5185     007C  0001               	db	1
  5186                           
  5187                           	psect	stringtext1
  5188     07FB                     __pstringtext1:
  5189     07FB                     _i2c1_fsmStateTable:
  5190     07FB  3400               	retlw	0
  5191     07FC  3400               	retlw	0
  5192     07FD  3400               	retlw	0
  5193     07FE  3400               	retlw	0
  5194     07FF  3400               	retlw	0
  5195     0800  3400               	retlw	0
  5196     0801  3400               	retlw	0
  5197     0802  3400               	retlw	0
  5198     0803  3400               	retlw	0
  5199     0804  3400               	retlw	0
  5200     0805  3400               	retlw	0
  5201     0806  3400               	retlw	0
  5202     0807  3400               	retlw	0
  5203     0808  3400               	retlw	0
  5204     0809  3400               	retlw	0
  5205     080A  3400               	retlw	0
  5206     080B  3400               	retlw	0
  5207     080C  3400               	retlw	0
  5208     080D  3400               	retlw	0
  5209     080E  3400               	retlw	0
  5210     080F  3400               	retlw	0
  5211     0810  3400               	retlw	0
  5212     0811  3400               	retlw	0
  5213     0812  3400               	retlw	0
  5214     0813  3400               	retlw	0
  5215     0814  3400               	retlw	0
  5216     0815  3400               	retlw	0
  5217     0816  3400               	retlw	0
  5218     0817  3400               	retlw	0
  5219     0818  3400               	retlw	0
  5220     0819  3400               	retlw	0
  5221     081A  3400               	retlw	0
  5222     081B                     __end_of_i2c1_fsmStateTable:
  5223     0003                     _STATUSbits	set	3
  5224     000E                     _PORTCbits	set	14
  5225     000D                     _PORTBbits	set	13
  5226     000B                     _INTCONbits	set	11
  5227     001A                     _LATCbits	set	26
  5228     0019                     _LATBbits	set	25
  5229     0018                     _LATAbits	set	24
  5230     0014                     _TRISC	set	20
  5231     0013                     _TRISB	set	19
  5232     0012                     _TRISA	set	18
  5233     001A                     _LATC	set	26
  5234     0019                     _LATB	set	25
  5235     0018                     _LATA	set	24
  5236     0191                     _SSP1CON2bits	set	401
  5237     018C                     _SSP1BUF	set	396
  5238     0190                     _SSP1CON1bits	set	400
  5239     018D                     _SSP1ADD	set	397
  5240     0191                     _SSP1CON2	set	401
  5241     0190                     _SSP1CON1	set	400
  5242     018F                     _SSP1STAT	set	399
  5243     021F                     _CCPTMRS1bits	set	543
  5244     0294                     _T4CONbits	set	660
  5245     0294                     _T4CON	set	660
  5246     0292                     _T4TMR	set	658
  5247     0293                     _T4PR	set	659
  5248     0297                     _T4RST	set	663
  5249     0295                     _T4HLT	set	661
  5250     0296                     _T4CLKCON	set	662
  5251     028E                     _T2CON	set	654
  5252     028C                     _T2TMR	set	652
  5253     028D                     _T2PR	set	653
  5254     0291                     _T2RST	set	657
  5255     028F                     _T2HLT	set	655
  5256     0290                     _T2CLKCON	set	656
  5257     038E                     _PWM6CONbits	set	910
  5258     038C                     _PWM6DCL	set	908
  5259     038D                     _PWM6DCH	set	909
  5260     038E                     _PWM6CON	set	910
  5261     059E                     _T0CON0bits	set	1438
  5262     059E                     _T0CON0	set	1438
  5263     059C                     _TMR0L	set	1436
  5264     059D                     _TMR0H	set	1437
  5265     059F                     _T0CON1	set	1439
  5266     0719                     _PIE3bits	set	1817
  5267     070F                     _PIR3bits	set	1807
  5268     071A                     _PIE4bits	set	1818
  5269     070C                     _PIR0bits	set	1804
  5270     0710                     _PIR4bits	set	1808
  5271     0716                     _PIE0bits	set	1814
  5272     079D                     _PMD7	set	1949
  5273     079C                     _PMD6	set	1948
  5274     079B                     _PMD5	set	1947
  5275     079A                     _PMD4	set	1946
  5276     0799                     _PMD3	set	1945
  5277     0798                     _PMD2	set	1944
  5278     0797                     _PMD1	set	1943
  5279     0796                     _PMD0	set	1942
  5280     081F                     _NVMCON2	set	2079
  5281     081D                     _NVMDATH	set	2077
  5282     081C                     _NVMDATL	set	2076
  5283     081B                     _NVMADRH	set	2075
  5284     081A                     _NVMADRL	set	2074
  5285     081E                     _NVMCON1bits	set	2078
  5286     0892                     _OSCTUNE	set	2194
  5287     0893                     _OSCFRQ	set	2195
  5288     0891                     _OSCEN	set	2193
  5289     088F                     _OSCCON3	set	2191
  5290     088D                     _OSCCON1	set	2189
  5291     1EC6                     _SSP1DATPPS	set	7878
  5292     1EC5                     _SSP1CLKPPS	set	7877
  5293     1F24                     _RC4PPS	set	7972
  5294     1F1C                     _RB4PPS	set	7964
  5295     1F1E                     _RB6PPS	set	7966
  5296     1F53                     _IOCCPbits	set	8019
  5297     1F54                     _IOCCNbits	set	8020
  5298     1F55                     _IOCCFbits	set	8021
  5299     1F52                     _INLVLC	set	8018
  5300     1F47                     _INLVLB	set	8007
  5301     1F3C                     _INLVLA	set	7996
  5302     1F51                     _SLRCONC	set	8017
  5303     1F46                     _SLRCONB	set	8006
  5304     1F3B                     _SLRCONA	set	7995
  5305     1F50                     _ODCONC	set	8016
  5306     1F45                     _ODCONB	set	8005
  5307     1F3A                     _ODCONA	set	7994
  5308     1F4F                     _WPUC	set	8015
  5309     1F39                     _WPUA	set	7993
  5310     1F44                     _WPUB	set	8004
  5311     1F38                     _ANSELA	set	7992
  5312     1F43                     _ANSELB	set	8003
  5313     1F4E                     _ANSELC	set	8014
  5314                           
  5315                           	psect	cinit
  5316     0019                     start_initialization:	
  5317                           ; #config settings
  5318                           
  5319     0019                     __initialization:
  5320                           
  5321                           ; Initialize objects allocated to BANK1
  5322     0019  3021               	movlw	low __pidataBANK1
  5323     001A  0084               	movwf	4
  5324     001B  308D               	movlw	(high __pidataBANK1)| (0+128)
  5325     001C  0085               	movwf	5
  5326     001D  30BD               	movlw	low __pdataBANK1
  5327     001E  0086               	movwf	6
  5328     001F  3000               	movlw	high __pdataBANK1
  5329     0020  0087               	movwf	7
  5330     0021  300C               	movlw	12
  5331     0022  318C  24B4  3180   	fcall	init_ram
  5332                           
  5333                           ; Initialize objects allocated to BANK2
  5334     0025  3083               	movlw	low __pidataBANK2
  5335     0026  0084               	movwf	4
  5336     0027  3087               	movlw	(high __pidataBANK2)| (0+128)
  5337     0028  0085               	movwf	5
  5338     0029  3020               	movlw	low __pdataBANK2
  5339     002A  0086               	movwf	6
  5340     002B  3001               	movlw	high __pdataBANK2
  5341     002C  0087               	movwf	7
  5342     002D  3040               	movlw	64
  5343     002E  318C  24B4  3180   	fcall	init_ram
  5344                           
  5345                           ; Clear objects allocated to BITCOMMON
  5346     0031  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  5347                           
  5348                           ; Clear objects allocated to BANK0
  5349     0032  3020               	movlw	low __pbssBANK0
  5350     0033  0084               	movwf	4
  5351     0034  3000               	movlw	high __pbssBANK0
  5352     0035  0085               	movwf	5
  5353     0036  3033               	movlw	51
  5354     0037  318C  24AE  3180   	fcall	clear_ram0
  5355                           
  5356                           ; Clear objects allocated to BANK1
  5357     003A  30A0               	movlw	low __pbssBANK1
  5358     003B  0084               	movwf	4
  5359     003C  3000               	movlw	high __pbssBANK1
  5360     003D  0085               	movwf	5
  5361     003E  301D               	movlw	29
  5362     003F  318C  24AE         	fcall	clear_ram0
  5363     0041                     end_of_initialization:	
  5364                           ;End of C runtime variable initialization code
  5365                           
  5366     0041                     __end_of__initialization:
  5367     0041  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5368     0042  0140               	movlb	0
  5369     0043  3180  2845         	ljmp	_main	;jump to C main() function
  5370                           
  5371                           	psect	bssEEDATA
  5372     007D                     __pbssEEDATA:
  5373     007D                     _TimeAdjStore:
  5374     007D  0000               	db	0
  5375     007E  0000               	db	0
  5376     007F                     _DateFormatStore:
  5377     007F  0000               	db	0
  5378                           
  5379                           	psect	dataEEDATA
  5380     0000                     __pdataEEDATA:
  5381                           
  5382                           	psect	bitbssCOMMON
  5383     03E0                     __pbitbssCOMMON:
  5384     03E0                     _StartupDone:
  5385     03E0                     	ds	1
  5386     03E1                     _TimeSet:
  5387     03E1                     	ds	1
  5388     03E2                     _Toggle:
  5389     03E2                     	ds	1
  5390     03E3                     _GoDM:
  5391     03E3                     	ds	1
  5392     03E4                     _GoDate:
  5393     03E4                     	ds	1
  5394     03E5                     _Action:
  5395     03E5                     	ds	1
  5396     03E6                     _NegWL:
  5397     03E6                     	ds	1
  5398                           
  5399                           	psect	bssBANK0
  5400     0020                     __pbssBANK0:
  5401     0020                     _DisplaySave:
  5402     0020                     	ds	8
  5403     0028                     _AnimBuf:
  5404     0028                     	ds	8
  5405     0030                     _DisplayBuf:
  5406     0030                     	ds	8
  5407     0038                     _BCDSplit:
  5408     0038                     	ds	2
  5409     003A                     _TimeAdj:
  5410     003A                     	ds	2
  5411     003C                     _TMR4_InterruptHandler:
  5412     003C                     	ds	2
  5413     003E                     _buttoncounter:
  5414     003E                     	ds	2
  5415     0040                     _timer0ReloadVal16bit:
  5416     0040                     	ds	2
  5417     0042                     _IOCCF1_InterruptHandler:
  5418     0042                     	ds	2
  5419     0044                     _IOCCF0_InterruptHandler:
  5420     0044                     	ds	2
  5421     0046                     _OldSet:
  5422     0046                     	ds	1
  5423     0047                     _Temp:
  5424     0047                     	ds	1
  5425     0048                     _BlankEnd:
  5426     0048                     	ds	1
  5427     0049                     _BlankStart:
  5428     0049                     	ds	1
  5429     004A                     _TimeFast:
  5430     004A                     	ds	1
  5431     004B                     _Pos:
  5432     004B                     	ds	1
  5433     004C                     _seed:
  5434     004C                     	ds	4
  5435     0050                     _HourType:
  5436     0050                     	ds	1
  5437     0051                     _Brightness:
  5438     0051                     	ds	1
  5439     0052                     _DateFormat:
  5440     0052                     	ds	1
  5441                           
  5442                           	psect	bssBANK1
  5443     00A0                     __pbssBANK1:
  5444     00A0                     _I2C1_Status:
  5445     00A0                     	ds	29
  5446                           
  5447                           	psect	dataBANK1
  5448     00BD                     __pdataBANK1:
  5449     00BD                     Loader@F11213:
  5450     00BD                     	ds	12
  5451                           
  5452                           	psect	dataBANK2
  5453     0120                     __pdataBANK2:
  5454     0120                     _RunLength:
  5455     0120                     	ds	64
  5456                           
  5457                           	psect	inittext
  5458     0CB4                     init_ram:
  5459     0CB4  00FE               	movwf	126
  5460     0CB5                     initloop:
  5461     0CB5  0012               	moviw fsr0++
  5462     0CB6  001E               	movwi fsr1++
  5463     0CB7  0BFE               	decfsz	126,f
  5464     0CB8  2CB5               	goto	initloop
  5465     0CB9  3400               	retlw	0
  5466                           
  5467                           	psect	clrtext
  5468     0CAE                     clear_ram0:	
  5469                           ;	Called with FSR0 containing the base address, and
  5470                           ;	WREG with the size to clear
  5471                           
  5472     0CAE  0064               	clrwdt	;clear the watchdog before getting into this loop
  5473     0CAF                     clrloop0:
  5474     0CAF  0180               	clrf	0	;clear RAM location pointed to by FSR
  5475     0CB0  3101               	addfsr 0,1
  5476     0CB1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5477     0CB2  2CAF               	goto	clrloop0	;have we reached the end yet?
  5478     0CB3  3400               	retlw	0	;all done for this memory range, return
  5479                           
  5480                           	psect	cstackCOMMON
  5481     0070                     __pcstackCOMMON:
  5482     0070                     ?_SW1Interrupt:
  5483     0070                     ??_SW1Interrupt:	
  5484                           ; 1 bytes @ 0x0
  5485                           
  5486     0070                     ?_SW2Interrupt:	
  5487                           ; 1 bytes @ 0x0
  5488                           
  5489     0070                     ??_SW2Interrupt:	
  5490                           ; 1 bytes @ 0x0
  5491                           
  5492     0070                     ?_PMD_Initialize:	
  5493                           ; 1 bytes @ 0x0
  5494                           
  5495     0070                     ?_I2C1_Initialize:	
  5496                           ; 1 bytes @ 0x0
  5497                           
  5498     0070                     ?_OSCILLATOR_Initialize:	
  5499                           ; 1 bytes @ 0x0
  5500                           
  5501     0070                     ?_PWM6_Initialize:	
  5502                           ; 1 bytes @ 0x0
  5503                           
  5504     0070                     ?_TMR4_Initialize:	
  5505                           ; 1 bytes @ 0x0
  5506                           
  5507     0070                     ?_TMR2_Initialize:	
  5508                           ; 1 bytes @ 0x0
  5509                           
  5510     0070                     ?_TMR0_Initialize:	
  5511                           ; 1 bytes @ 0x0
  5512                           
  5513     0070                     ?_TMR4_ISR:	
  5514                           ; 1 bytes @ 0x0
  5515                           
  5516     0070                     ??_TMR4_ISR:	
  5517                           ; 1 bytes @ 0x0
  5518                           
  5519     0070                     ?_TMR4_DefaultInterruptHandler:	
  5520                           ; 1 bytes @ 0x0
  5521                           
  5522     0070                     ??_TMR4_DefaultInterruptHandler:	
  5523                           ; 1 bytes @ 0x0
  5524                           
  5525     0070                     ?_TMR4_CallBack:	
  5526                           ; 1 bytes @ 0x0
  5527                           
  5528     0070                     ??_TMR4_CallBack:	
  5529                           ; 1 bytes @ 0x0
  5530                           
  5531     0070                     ?_I2CRead:	
  5532                           ; 1 bytes @ 0x0
  5533                           
  5534     0070                     ?_EmptyTubes:	
  5535                           ; 1 bytes @ 0x0
  5536                           
  5537     0070                     ?_Loader:	
  5538                           ; 1 bytes @ 0x0
  5539                           
  5540     0070                     ?_TubesOn:	
  5541                           ; 1 bytes @ 0x0
  5542                           
  5543     0070                     ?_DateDisplay:	
  5544                           ; 1 bytes @ 0x0
  5545                           
  5546     0070                     ?_DMDisplay:	
  5547                           ; 1 bytes @ 0x0
  5548                           
  5549     0070                     ?_BCD2Bin:	
  5550                           ; 1 bytes @ 0x0
  5551                           
  5552     0070                     ?_SplitLoad:	
  5553                           ; 1 bytes @ 0x0
  5554                           
  5555     0070                     ?_DisplayBufSave:	
  5556                           ; 1 bytes @ 0x0
  5557                           
  5558     0070                     ?_TubesOff:	
  5559                           ; 1 bytes @ 0x0
  5560                           
  5561     0070                     ?_FixedWL:	
  5562                           ; 1 bytes @ 0x0
  5563                           
  5564     0070                     ?_Settings:	
  5565                           ; 1 bytes @ 0x0
  5566                           
  5567     0070                     ?_EEPROMBufferFill:	
  5568                           ; 1 bytes @ 0x0
  5569                           
  5570     0070                     ?_Buttons:	
  5571                           ; 1 bytes @ 0x0
  5572                           
  5573     0070                     ?_RandomWL:	
  5574                           ; 1 bytes @ 0x0
  5575                           
  5576     0070                     ?_TubeValuePicker:	
  5577                           ; 1 bytes @ 0x0
  5578                           
  5579     0070                     ?_EEPROM_Read:	
  5580                           ; 1 bytes @ 0x0
  5581                           
  5582     0070                     ?_RandomNum:	
  5583                           ; 1 bytes @ 0x0
  5584                           
  5585     0070                     ?_NumSplit:	
  5586                           ; 1 bytes @ 0x0
  5587                           
  5588     0070                     ?_I2COpen:	
  5589                           ; 1 bytes @ 0x0
  5590                           
  5591     0070                     ?_I2CIrqWait:	
  5592                           ; 1 bytes @ 0x0
  5593                           
  5594     0070                     ?_I2CFail:	
  5595                           ; 1 bytes @ 0x0
  5596                           
  5597     0070                     ?_I2CClose:	
  5598                           ; 1 bytes @ 0x0
  5599                           
  5600     0070                     ?_PIN_MANAGER_Initialize:	
  5601                           ; 1 bytes @ 0x0
  5602                           
  5603     0070                     ?_PIN_MANAGER_IOC:	
  5604                           ; 1 bytes @ 0x0
  5605                           
  5606     0070                     ?_SYSTEM_Initialize:	
  5607                           ; 1 bytes @ 0x0
  5608                           
  5609     0070                     ?_INTERRUPT_InterruptManager:	
  5610                           ; 1 bytes @ 0x0
  5611                           
  5612     0070                     ?_TMR0_StartTimer:	
  5613                           ; 1 bytes @ 0x0
  5614                           
  5615     0070                     ?_TMR4_Start:	
  5616                           ; 1 bytes @ 0x0
  5617                           
  5618     0070                     ?_TMR4_Stop:	
  5619                           ; 1 bytes @ 0x0
  5620                           
  5621     0070                     ?_Startup:	
  5622                           ; 1 bytes @ 0x0
  5623                           
  5624     0070                     ?_main:	
  5625                           ; 1 bytes @ 0x0
  5626                           
  5627     0070                     ?_Pulse:	
  5628                           ; 1 bytes @ 0x0
  5629                           
  5630     0070                     ?___eetoc:	
  5631                           ; 1 bytes @ 0x0
  5632                           
  5633                           
  5634                           ; 1 bytes @ 0x0
  5635     0070                     	ds	1
  5636     0071                     ??_PMD_Initialize:
  5637     0071                     ??_I2C1_Initialize:	
  5638                           ; 1 bytes @ 0x1
  5639                           
  5640     0071                     ??_OSCILLATOR_Initialize:	
  5641                           ; 1 bytes @ 0x1
  5642                           
  5643     0071                     ??_PWM6_Initialize:	
  5644                           ; 1 bytes @ 0x1
  5645                           
  5646     0071                     ??_TMR2_Initialize:	
  5647                           ; 1 bytes @ 0x1
  5648                           
  5649     0071                     ??_TMR0_Initialize:	
  5650                           ; 1 bytes @ 0x1
  5651                           
  5652     0071                     ?_TMR4_SetInterruptHandler:	
  5653                           ; 1 bytes @ 0x1
  5654                           
  5655     0071                     ??_EmptyTubes:	
  5656                           ; 1 bytes @ 0x1
  5657                           
  5658     0071                     ??_Loader:	
  5659                           ; 1 bytes @ 0x1
  5660                           
  5661     0071                     ??_BCD2Bin:	
  5662                           ; 1 bytes @ 0x1
  5663                           
  5664     0071                     ??_SplitLoad:	
  5665                           ; 1 bytes @ 0x1
  5666                           
  5667     0071                     ??_DisplayBufSave:	
  5668                           ; 1 bytes @ 0x1
  5669                           
  5670     0071                     ??_TubesOff:	
  5671                           ; 1 bytes @ 0x1
  5672                           
  5673     0071                     ??_Buttons:	
  5674                           ; 1 bytes @ 0x1
  5675                           
  5676     0071                     ?_EEPROM_Write:	
  5677                           ; 1 bytes @ 0x1
  5678                           
  5679     0071                     ??_EEPROM_Read:	
  5680                           ; 1 bytes @ 0x1
  5681                           
  5682     0071                     ??_NumSplit:	
  5683                           ; 1 bytes @ 0x1
  5684                           
  5685     0071                     ??_I2CIrqWait:	
  5686                           ; 1 bytes @ 0x1
  5687                           
  5688     0071                     ??_I2CClose:	
  5689                           ; 1 bytes @ 0x1
  5690                           
  5691     0071                     ??_PIN_MANAGER_Initialize:	
  5692                           ; 1 bytes @ 0x1
  5693                           
  5694     0071                     ??_PIN_MANAGER_IOC:	
  5695                           ; 1 bytes @ 0x1
  5696                           
  5697     0071                     ??_INTERRUPT_InterruptManager:	
  5698                           ; 1 bytes @ 0x1
  5699                           
  5700     0071                     ??_TMR0_StartTimer:	
  5701                           ; 1 bytes @ 0x1
  5702                           
  5703     0071                     ??_TMR4_Start:	
  5704                           ; 1 bytes @ 0x1
  5705                           
  5706     0071                     ??_TMR4_Stop:	
  5707                           ; 1 bytes @ 0x1
  5708                           
  5709     0071                     ?___eecpymem:	
  5710                           ; 1 bytes @ 0x1
  5711                           
  5712     0071                     ?_TMR0_ReadTimer:	
  5713                           ; 1 bytes @ 0x1
  5714                           
  5715     0071                     ?___wmul:	
  5716                           ; 2 bytes @ 0x1
  5717                           
  5718     0071                     ?___lmul:	
  5719                           ; 2 bytes @ 0x1
  5720                           
  5721     0071                     I2C1_Initialize@bits:	
  5722                           ; 4 bytes @ 0x1
  5723                           
  5724     0071                     SplitLoad@first:	
  5725                           ; 1 bytes @ 0x1
  5726                           
  5727     0071                     EEPROM_Read@addr:	
  5728                           ; 1 bytes @ 0x1
  5729                           
  5730     0071                     EEPROM_Write@data:	
  5731                           ; 1 bytes @ 0x1
  5732                           
  5733     0071                     ___eecpymem@from:	
  5734                           ; 1 bytes @ 0x1
  5735                           
  5736     0071                     TMR4_SetInterruptHandler@InterruptHandler:	
  5737                           ; 1 bytes @ 0x1
  5738                           
  5739     0071                     ___wmul@multiplier:	
  5740                           ; 2 bytes @ 0x1
  5741                           
  5742     0071                     ___lmul@multiplier:	
  5743                           ; 2 bytes @ 0x1
  5744                           
  5745                           
  5746                           ; 4 bytes @ 0x1
  5747     0071                     	ds	1
  5748     0072                     ??_EEPROMBufferFill:
  5749     0072                     ??_EEPROM_Write:	
  5750                           ; 1 bytes @ 0x2
  5751                           
  5752     0072                     ??_I2COpen:	
  5753                           ; 1 bytes @ 0x2
  5754                           
  5755     0072                     ??_I2CFail:	
  5756                           ; 1 bytes @ 0x2
  5757                           
  5758     0072                     EEPROMBufferFill@addr:	
  5759                           ; 1 bytes @ 0x2
  5760                           
  5761     0072                     EEPROM_Write@addr:	
  5762                           ; 1 bytes @ 0x2
  5763                           
  5764     0072                     I2COpen@regptr:	
  5765                           ; 1 bytes @ 0x2
  5766                           
  5767     0072                     NumSplit@input:	
  5768                           ; 1 bytes @ 0x2
  5769                           
  5770     0072                     BCD2Bin@input:	
  5771                           ; 1 bytes @ 0x2
  5772                           
  5773     0072                     ___eecpymem@size:	
  5774                           ; 1 bytes @ 0x2
  5775                           
  5776     0072                     Buttons@presstime:	
  5777                           ; 1 bytes @ 0x2
  5778                           
  5779                           
  5780                           ; 2 bytes @ 0x2
  5781     0072                     	ds	1
  5782     0073                     ??_TMR4_Initialize:
  5783     0073                     ??_TMR4_SetInterruptHandler:	
  5784                           ; 1 bytes @ 0x3
  5785                           
  5786     0073                     ??_I2CRead:	
  5787                           ; 1 bytes @ 0x3
  5788                           
  5789     0073                     ??_I2CWrite:	
  5790                           ; 1 bytes @ 0x3
  5791                           
  5792     0073                     ??_SYSTEM_Initialize:	
  5793                           ; 1 bytes @ 0x3
  5794                           
  5795     0073                     ??_TMR0_ReadTimer:	
  5796                           ; 1 bytes @ 0x3
  5797                           
  5798     0073                     ??___eecpymem:	
  5799                           ; 1 bytes @ 0x3
  5800                           
  5801     0073                     I2CRead@reg:	
  5802                           ; 1 bytes @ 0x3
  5803                           
  5804     0073                     I2CWrite@reg:	
  5805                           ; 1 bytes @ 0x3
  5806                           
  5807     0073                     ___wmul@multiplicand:	
  5808                           ; 1 bytes @ 0x3
  5809                           
  5810                           
  5811                           ; 2 bytes @ 0x3
  5812     0073                     	ds	1
  5813     0074                     ??_TubeValuePicker:
  5814     0074                     I2CRead@receiveddata:	
  5815                           ; 1 bytes @ 0x4
  5816                           
  5817     0074                     ___eecpymem@cp:	
  5818                           ; 1 bytes @ 0x4
  5819                           
  5820                           
  5821                           ; 1 bytes @ 0x4
  5822     0074                     	ds	1
  5823     0075                     ??_BCDSetInc:
  5824     0075                     ??___wmul:	
  5825                           ; 1 bytes @ 0x5
  5826                           
  5827     0075                     TubeValuePicker@start:	
  5828                           ; 1 bytes @ 0x5
  5829                           
  5830     0075                     ___eecpymem@to:	
  5831                           ; 1 bytes @ 0x5
  5832                           
  5833     0075                     ___wmul@product:	
  5834                           ; 1 bytes @ 0x5
  5835                           
  5836     0075                     ___lmul@multiplicand:	
  5837                           ; 2 bytes @ 0x5
  5838                           
  5839                           
  5840                           ; 4 bytes @ 0x5
  5841     0075                     	ds	1
  5842     0076                     ??___eetoc:
  5843     0076                     ?___eetoi:	
  5844                           ; 1 bytes @ 0x6
  5845                           
  5846     0076                     ___eetoc@data:	
  5847                           ; 2 bytes @ 0x6
  5848                           
  5849                           
  5850                           ; 1 bytes @ 0x6
  5851     0076                     	ds	1
  5852     0077                     ?___awdiv:
  5853     0077                     ___eetoc@addr:	
  5854                           ; 2 bytes @ 0x7
  5855                           
  5856     0077                     ___awdiv@divisor:	
  5857                           ; 1 bytes @ 0x7
  5858                           
  5859                           
  5860                           ; 2 bytes @ 0x7
  5861     0077                     	ds	1
  5862     0078                     ??___eetoi:
  5863     0078                     ___eetoi@addr:	
  5864                           ; 1 bytes @ 0x8
  5865                           
  5866     0078                     TMR0_ReadTimer@readVal:	
  5867                           ; 1 bytes @ 0x8
  5868                           
  5869                           
  5870                           ; 2 bytes @ 0x8
  5871     0078                     	ds	1
  5872     0079                     ??___lmul:
  5873     0079                     ??___awmod:	
  5874                           ; 1 bytes @ 0x9
  5875                           
  5876     0079                     BCDSetInc@max:	
  5877                           ; 1 bytes @ 0x9
  5878                           
  5879     0079                     ___eetoi@data:	
  5880                           ; 1 bytes @ 0x9
  5881                           
  5882     0079                     ___awdiv@dividend:	
  5883                           ; 2 bytes @ 0x9
  5884                           
  5885                           
  5886                           ; 2 bytes @ 0x9
  5887     0079                     	ds	1
  5888     007A                     TMR0_ReadTimer@readValLow:
  5889     007A                     BCDSetInc@value:	
  5890                           ; 1 bytes @ 0xA
  5891                           
  5892     007A                     ___awmod@counter:	
  5893                           ; 1 bytes @ 0xA
  5894                           
  5895                           
  5896                           ; 1 bytes @ 0xA
  5897     007A                     	ds	1
  5898     007B                     ??___awdiv:
  5899     007B                     TMR0_ReadTimer@readValHigh:	
  5900                           ; 1 bytes @ 0xB
  5901                           
  5902     007B                     ___awmod@sign:	
  5903                           ; 1 bytes @ 0xB
  5904                           
  5905                           
  5906                           ; 1 bytes @ 0xB
  5907     007B                     	ds	1
  5908     007C                     ??_RandomNum:
  5909     007C                     ??_srand:	
  5910                           ; 1 bytes @ 0xC
  5911                           
  5912                           
  5913                           	psect	cstackBANK0
  5914     0053                     __pcstackBANK0:	
  5915                           ; 1 bytes @ 0xC
  5916                           
  5917     0053                     ?_srand:
  5918     0053                     ___awdiv@counter:	
  5919                           ; 1 bytes @ 0x0
  5920                           
  5921     0053                     srand@s:	
  5922                           ; 1 bytes @ 0x0
  5923                           
  5924     0053                     ___lmul@product:	
  5925                           ; 2 bytes @ 0x0
  5926                           
  5927     0053                     Loader@shftregpln:	
  5928                           ; 4 bytes @ 0x0
  5929                           
  5930                           
  5931                           ; 12 bytes @ 0x0
  5932     0053                     	ds	1
  5933     0054                     ___awdiv@sign:
  5934                           
  5935                           ; 1 bytes @ 0x1
  5936     0054                     	ds	1
  5937     0055                     ___awdiv@quotient:
  5938                           
  5939                           ; 2 bytes @ 0x2
  5940     0055                     	ds	2
  5941     0057                     ?_PWM6_LoadDutyValue:
  5942     0057                     ?_rand:	
  5943                           ; 1 bytes @ 0x4
  5944                           
  5945     0057                     PWM6_LoadDutyValue@dutyValue:	
  5946                           ; 2 bytes @ 0x4
  5947                           
  5948                           
  5949                           ; 2 bytes @ 0x4
  5950     0057                     	ds	2
  5951     0059                     ??_rand:
  5952     0059                     ??_PWM6_LoadDutyValue:	
  5953                           ; 1 bytes @ 0x6
  5954                           
  5955                           
  5956                           ; 1 bytes @ 0x6
  5957     0059                     	ds	2
  5958     005B                     ??_TubesOn:
  5959     005B                     ??_Pulse:	
  5960                           ; 1 bytes @ 0x8
  5961                           
  5962                           
  5963                           ; 1 bytes @ 0x8
  5964     005B                     	ds	2
  5965     005D                     ?___awmod:
  5966     005D                     ___awmod@divisor:	
  5967                           ; 2 bytes @ 0xA
  5968                           
  5969                           
  5970                           ; 2 bytes @ 0xA
  5971     005D                     	ds	2
  5972     005F                     Loader@regp:
  5973     005F                     ___awmod@dividend:	
  5974                           ; 1 bytes @ 0xC
  5975                           
  5976                           
  5977                           ; 2 bytes @ 0xC
  5978     005F                     	ds	1
  5979     0060                     ?_I2CWrite:
  5980     0060                     ?_OtherSetInc:	
  5981                           ; 1 bytes @ 0xD
  5982                           
  5983     0060                     OtherSetInc@min:	
  5984                           ; 1 bytes @ 0xD
  5985                           
  5986     0060                     I2CWrite@data:	
  5987                           ; 1 bytes @ 0xD
  5988                           
  5989                           
  5990                           ; 1 bytes @ 0xD
  5991     0060                     	ds	1
  5992     0061                     ?_BCDSetInc:
  5993     0061                     ??_Startup:	
  5994                           ; 1 bytes @ 0xE
  5995                           
  5996     0061                     BCDSetInc@min:	
  5997                           ; 1 bytes @ 0xE
  5998                           
  5999     0061                     OtherSetInc@eeaddr:	
  6000                           ; 1 bytes @ 0xE
  6001                           
  6002     0061                     RandomNum@upper:	
  6003                           ; 1 bytes @ 0xE
  6004                           
  6005                           
  6006                           ; 1 bytes @ 0xE
  6007     0061                     	ds	1
  6008     0062                     BCDSetInc@i2creg:
  6009     0062                     OtherSetInc@value:	
  6010                           ; 1 bytes @ 0xF
  6011                           
  6012     0062                     RandomNum@rand_num:	
  6013                           ; 1 bytes @ 0xF
  6014                           
  6015                           
  6016                           ; 1 bytes @ 0xF
  6017     0062                     	ds	1
  6018     0063                     ??_FixedWL:
  6019     0063                     ??_RandomWL:	
  6020                           ; 1 bytes @ 0x10
  6021                           
  6022     0063                     ??_OtherSetInc:	
  6023                           ; 1 bytes @ 0x10
  6024                           
  6025                           
  6026                           ; 1 bytes @ 0x10
  6027     0063                     	ds	1
  6028     0064                     RandomWL@WLtype:
  6029                           
  6030                           ; 1 bytes @ 0x11
  6031     0064                     	ds	1
  6032     0065                     ??_DMDisplay:
  6033                           
  6034                           ; 1 bytes @ 0x12
  6035     0065                     	ds	1
  6036     0066                     DMDisplay@seedadr:
  6037                           
  6038                           ; 1 bytes @ 0x13
  6039     0066                     	ds	1
  6040     0067                     OtherSetInc@max:
  6041                           
  6042                           ; 1 bytes @ 0x14
  6043     0067                     	ds	1
  6044     0068                     ??_Settings:
  6045                           
  6046                           ; 1 bytes @ 0x15
  6047     0068                     	ds	2
  6048     006A                     ??_DateDisplay:
  6049                           
  6050                           ; 1 bytes @ 0x17
  6051     006A                     	ds	1
  6052     006B                     ??_main:
  6053                           
  6054                           ; 1 bytes @ 0x18
  6055     006B                     	ds	1
  6056     006C                     main@oldsec:
  6057                           
  6058                           ; 1 bytes @ 0x19
  6059     006C                     	ds	1
  6060     006D                     main@spincount:
  6061                           
  6062                           ; 1 bytes @ 0x1A
  6063     006D                     	ds	1
  6064     006E                     main@shift:
  6065                           
  6066                           ; 1 bytes @ 0x1B
  6067     006E                     	ds	1
  6068     006F                     main@newsec:
  6069                           
  6070                           ; 1 bytes @ 0x1C
  6071     006F                     	ds	1
  6072                           
  6073                           	psect	maintext
  6074     0045                     __pmaintext:	
  6075 ;;
  6076 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  6077 ;;
  6078 ;; *************** function _main *****************
  6079 ;; Defined at:
  6080 ;;		line 180 in file "main.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;		None
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  newsec          1   28[BANK0 ] unsigned char 
  6085 ;;  shift           1   27[BANK0 ] unsigned char 
  6086 ;;  spincount       1   26[BANK0 ] unsigned char 
  6087 ;;  oldsec          1   25[BANK0 ] unsigned char 
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      void 
  6090 ;; Registers used:
  6091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : B3F/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6097 ;;      Params:         0       0       0       0       0       0       0       0
  6098 ;;      Locals:         0       4       0       0       0       0       0       0
  6099 ;;      Temps:          0       1       0       0       0       0       0       0
  6100 ;;      Totals:         0       5       0       0       0       0       0       0
  6101 ;;Total ram usage:        5 bytes
  6102 ;; Hardware stack levels required when called: 11
  6103 ;; This function calls:
  6104 ;;		_BCD2Bin
  6105 ;;		_DMDisplay
  6106 ;;		_DateDisplay
  6107 ;;		_DisplayBufSave
  6108 ;;		_FixedWL
  6109 ;;		_I2CRead
  6110 ;;		_I2CWrite
  6111 ;;		_Loader
  6112 ;;		_SplitLoad
  6113 ;;		_Startup
  6114 ;;		_TubesOff
  6115 ;;		_TubesOn
  6116 ;;		___eetoi
  6117 ;; This function is called by:
  6118 ;;		Startup code after reset
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122     0045                     _main:	
  6123                           ;psect for function _main
  6124                           
  6125                           
  6126                           ;main.c: 182:     uint8_t newsec;;main.c: 183:     uint8_t oldsec;;main.c: 184:     uint
      +                          8_t spincount;;main.c: 185:     uint8_t shift;;main.c: 187:     if (!StartupDone)
  6127                           
  6128                           ;incstack = 0
  6129                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6130     0045  187C               	btfsc	_StartupDone/(0+8),_StartupDone& (0+7)
  6131     0046  284A               	goto	l5931
  6132                           
  6133                           ;main.c: 188:         Startup();
  6134     0047  3184  2451  3180   	fcall	_Startup
  6135     004A                     l5931:
  6136                           
  6137                           ;main.c: 189:     (INTCONbits.GIE = 1);
  6138     004A  178B               	bsf	11,7	;volatile
  6139     004B                     l5933:
  6140                           
  6141                           ;main.c: 191:     {;main.c: 192:         if (GoDate == 1)
  6142     004B  1E7C               	btfss	_GoDate/(0+8),_GoDate& (0+7)
  6143     004C  2851               	goto	l1042
  6144                           
  6145                           ;main.c: 193:             DateDisplay();
  6146     004D  3185  25A7  3180   	fcall	_DateDisplay
  6147     0050  2856               	goto	l5939
  6148     0051                     l1042:	
  6149                           ;main.c: 194:         else if (GoDM == 1)
  6150                           
  6151     0051  1DFC               	btfss	_GoDM/(0+8),_GoDM& (0+7)
  6152     0052  2856               	goto	l5939
  6153                           
  6154                           ;main.c: 195:             DMDisplay();
  6155     0053  3184  24CF  3180   	fcall	_DMDisplay
  6156     0056                     l5939:
  6157                           
  6158                           ;main.c: 196:         oldsec = newsec;
  6159     0056  0140               	movlb	0	; select bank0
  6160     0057  086F               	movf	main@newsec,w
  6161     0058  00EC               	movwf	main@oldsec
  6162                           
  6163                           ;main.c: 197:         newsec = I2CRead(0x00);
  6164     0059  3000               	movlw	0
  6165     005A  318F  2705  3180   	fcall	_I2CRead
  6166     005D  0140               	movlb	0	; select bank0
  6167     005E  00EF               	movwf	main@newsec
  6168                           
  6169                           ;main.c: 198:         if (newsec == 0x59)
  6170     005F  3059               	movlw	89
  6171     0060  066F               	xorwf	main@newsec,w
  6172     0061  1D03               	btfss	3,2
  6173     0062  2869               	goto	l5947
  6174                           
  6175                           ;main.c: 199:             newsec = I2CRead(0x00);
  6176     0063  3000               	movlw	0
  6177     0064  318F  2705  3180   	fcall	_I2CRead
  6178     0067  0140               	movlb	0	; select bank0
  6179     0068  00EF               	movwf	main@newsec
  6180     0069                     l5947:
  6181                           
  6182                           ;main.c: 200:         BCD2Bin(newsec);
  6183     0069  086F               	movf	main@newsec,w
  6184     006A  318D  2581  3180   	fcall	_BCD2Bin
  6185                           
  6186                           ;main.c: 201:         if (newsec != oldsec)
  6187     006D  086F               	movf	main@newsec,w
  6188     006E  066C               	xorwf	main@oldsec,w
  6189     006F  1903               	skipnz
  6190     0070  284B               	goto	l5933
  6191                           
  6192                           ;main.c: 202:         {;main.c: 203:             SplitLoad(6);
  6193     0071  3006               	movlw	6
  6194     0072  318D  2547  3180   	fcall	_SplitLoad
  6195                           
  6196                           ;main.c: 204:             if (newsec == 0x30)
  6197     0075  3030               	movlw	48
  6198     0076  066F               	xorwf	main@newsec,w
  6199     0077  1D03               	btfss	3,2
  6200     0078  28B2               	goto	l5975
  6201                           
  6202                           ;main.c: 205:             {;main.c: 206:                 DisplayBuf[0] = 0;
  6203     0079  01B0               	clrf	_DisplayBuf
  6204                           
  6205                           ;main.c: 207:                 DisplayBuf[2] = 0;
  6206     007A  01B2               	clrf	_DisplayBuf+2
  6207                           
  6208                           ;main.c: 208:                 DisplayBuf[5] = 0;
  6209     007B  01B5               	clrf	_DisplayBuf+5
  6210                           
  6211                           ;main.c: 209:                 for (spincount=41; spincount--;)
  6212     007C  3029               	movlw	41
  6213     007D  00ED               	movwf	main@spincount
  6214     007E                     l5971:
  6215     007E  3001               	movlw	1
  6216     007F  0140               	movlb	0	; select bank0
  6217     0080  02ED               	subwf	main@spincount,f
  6218     0081  0A6D               	incf	main@spincount,w
  6219     0082  1903               	btfsc	3,2
  6220     0083  28AE               	goto	l5973
  6221                           
  6222                           ;main.c: 210:                 {;main.c: 211:                     for (Pos=8; Pos--;)
  6223     0084  3008               	movlw	8
  6224     0085  00CB               	movwf	_Pos
  6225     0086                     l5965:
  6226     0086  3001               	movlw	1
  6227     0087  02CB               	subwf	_Pos,f
  6228     0088  0A4B               	incf	_Pos,w
  6229     0089  1903               	btfsc	3,2
  6230     008A  28A1               	goto	l5967
  6231                           
  6232                           ;main.c: 212:                     {;main.c: 213:                         DisplayBuf[Pos]
      +                          ++;
  6233     008B  3001               	movlw	1
  6234     008C  00EB               	movwf	??_main
  6235     008D  084B               	movf	_Pos,w
  6236     008E  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
  6237     008F  0086               	movwf	6
  6238     0090  0187               	clrf	7
  6239     0091  086B               	movf	??_main,w
  6240     0092  0781               	addwf	1,f
  6241                           
  6242                           ;main.c: 214:                         if (DisplayBuf[Pos] == 10)
  6243     0093  084B               	movf	_Pos,w
  6244     0094  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
  6245     0095  0086               	movwf	6
  6246     0096  0187               	clrf	7
  6247     0097  300A               	movlw	10
  6248     0098  0601               	xorwf	1,w
  6249     0099  1D03               	btfss	3,2
  6250     009A  2886               	goto	l5965
  6251                           
  6252                           ;main.c: 215:                             DisplayBuf[Pos] = 0;
  6253     009B  084B               	movf	_Pos,w
  6254     009C  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
  6255     009D  0086               	movwf	6
  6256     009E  0187               	clrf	7
  6257     009F  0181               	clrf	1
  6258     00A0  2886               	goto	l5965
  6259     00A1                     l5967:
  6260                           
  6261                           ;main.c: 217:                     Loader();
  6262     00A1  318F  27C8  3180   	fcall	_Loader
  6263                           
  6264                           ;main.c: 218:                     _delay(16000);
  6265     00A4  3015               	movlw	21
  6266     00A5  0140               	movlb	0	; select bank0
  6267     00A6  00EB               	movwf	??_main
  6268     00A7  30C6               	movlw	198
  6269     00A8                     u4647:
  6270     00A8  0B89               	decfsz	9,f
  6271     00A9  28A8               	goto	u4647
  6272     00AA  0BEB               	decfsz	??_main,f
  6273     00AB  28A8               	goto	u4647
  6274     00AC  0000               	nop
  6275     00AD  287E               	goto	l5971
  6276     00AE                     l5973:
  6277                           
  6278                           ;main.c: 220:                 DateDisplay();
  6279     00AE  3185  25A7  3180   	fcall	_DateDisplay
  6280                           
  6281                           ;main.c: 221:             }
  6282     00B1  2912               	goto	l6023
  6283     00B2                     l5975:
  6284     00B2  3059               	movlw	89
  6285     00B3  066F               	xorwf	main@newsec,w
  6286     00B4  1D03               	btfss	3,2
  6287     00B5  2912               	goto	l6023
  6288                           
  6289                           ;main.c: 223:             {;main.c: 224:                 DisplayBufSave();
  6290     00B6  318D  259F  3180   	fcall	_DisplayBufSave
  6291                           
  6292                           ;main.c: 225:                 for (shift=8; shift--;)
  6293     00B9  3008               	movlw	8
  6294     00BA  00EE               	movwf	main@shift
  6295     00BB                     l5999:
  6296     00BB  3001               	movlw	1
  6297     00BC  0140               	movlb	0	; select bank0
  6298     00BD  02EE               	subwf	main@shift,f
  6299     00BE  0A6E               	incf	main@shift,w
  6300     00BF  1903               	btfsc	3,2
  6301     00C0  28E4               	goto	l6001
  6302                           
  6303                           ;main.c: 226:                 {;main.c: 227:                     for (Pos=0; Pos<8; Pos+
      +                          +)
  6304     00C1  01CB               	clrf	_Pos
  6305     00C2                     l5983:
  6306     00C2  3008               	movlw	8
  6307     00C3  024B               	subwf	_Pos,w
  6308     00C4  1803               	btfsc	3,0
  6309     00C5  28D5               	goto	l5993
  6310                           
  6311                           ;main.c: 228:                     {;main.c: 229:                         DisplayBuf[Pos]
      +                           = DisplayBuf[Pos + 1];
  6312     00C6  084B               	movf	_Pos,w
  6313     00C7  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
  6314     00C8  0086               	movwf	6
  6315     00C9  0187               	clrf	7
  6316     00CA  084B               	movf	_Pos,w
  6317     00CB  3E31               	addlw	(low ((_DisplayBuf| 0+1)))& (0+255)
  6318     00CC  0084               	movwf	4
  6319     00CD  0185               	clrf	5
  6320     00CE  0800               	movf	0,w
  6321     00CF  0081               	movwf	1
  6322                           
  6323                           ;main.c: 230:                     }
  6324     00D0  3001               	movlw	1
  6325     00D1  00EB               	movwf	??_main
  6326     00D2  086B               	movf	??_main,w
  6327     00D3  07CB               	addwf	_Pos,f
  6328     00D4  28C2               	goto	l5983
  6329     00D5                     l5993:
  6330                           
  6331                           ;main.c: 231:                     DisplayBuf[7] = 10;
  6332     00D5  300A               	movlw	10
  6333     00D6  00B7               	movwf	_DisplayBuf+7
  6334                           
  6335                           ;main.c: 232:                     Loader();
  6336     00D7  318F  27C8  3180   	fcall	_Loader
  6337                           
  6338                           ;main.c: 233:                     _delay(40000);
  6339     00DA  3034               	movlw	52
  6340     00DB  0140               	movlb	0	; select bank0
  6341     00DC  00EB               	movwf	??_main
  6342     00DD  30F1               	movlw	241
  6343     00DE                     u4657:
  6344     00DE  0B89               	decfsz	9,f
  6345     00DF  28DE               	goto	u4657
  6346     00E0  0BEB               	decfsz	??_main,f
  6347     00E1  28DE               	goto	u4657
  6348     00E2  3200               	nop2
  6349     00E3  28BB               	goto	l5999
  6350     00E4                     l6001:
  6351                           
  6352                           ;main.c: 235:                 for (shift=8; shift--;)
  6353     00E4  3008               	movlw	8
  6354     00E5  00EE               	movwf	main@shift
  6355     00E6                     l6021:
  6356     00E6  3001               	movlw	1
  6357     00E7  02EE               	subwf	main@shift,f
  6358     00E8  0A6E               	incf	main@shift,w
  6359     00E9  1903               	btfsc	3,2
  6360     00EA  2912               	goto	l6023
  6361                           
  6362                           ;main.c: 236:                 {;main.c: 237:                     DisplayBuf[7] = Display
      +                          Save[shift];
  6363     00EB  086E               	movf	main@shift,w
  6364     00EC  3E20               	addlw	(low (_DisplaySave| 0))& (0+255)
  6365     00ED  0086               	movwf	6
  6366     00EE  0187               	clrf	7
  6367     00EF  0801               	movf	1,w
  6368     00F0  00B7               	movwf	_DisplayBuf+7
  6369                           
  6370                           ;main.c: 238:                     Loader();
  6371     00F1  318F  27C8  3180   	fcall	_Loader
  6372                           
  6373                           ;main.c: 239:                     _delay(40000);
  6374     00F4  3034               	movlw	52
  6375     00F5  0140               	movlb	0	; select bank0
  6376     00F6  00EB               	movwf	??_main
  6377     00F7  30F1               	movlw	241
  6378     00F8                     u4667:
  6379     00F8  0B89               	decfsz	9,f
  6380     00F9  28F8               	goto	u4667
  6381     00FA  0BEB               	decfsz	??_main,f
  6382     00FB  28F8               	goto	u4667
  6383     00FC  3200               	nop2
  6384                           
  6385                           ;main.c: 240:                     for (Pos=0; Pos<8; Pos++)
  6386     00FD  0140               	movlb	0	; select bank0
  6387     00FE  01CB               	clrf	_Pos
  6388     00FF                     l6011:
  6389     00FF  3008               	movlw	8
  6390     0100  024B               	subwf	_Pos,w
  6391     0101  1803               	btfsc	3,0
  6392     0102  28E6               	goto	l6021
  6393                           
  6394                           ;main.c: 241:                     {;main.c: 242:                         DisplayBuf[Pos]
      +                           = DisplayBuf[Pos + 1];
  6395     0103  084B               	movf	_Pos,w
  6396     0104  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
  6397     0105  0086               	movwf	6
  6398     0106  0187               	clrf	7
  6399     0107  084B               	movf	_Pos,w
  6400     0108  3E31               	addlw	(low ((_DisplayBuf| 0+1)))& (0+255)
  6401     0109  0084               	movwf	4
  6402     010A  0185               	clrf	5
  6403     010B  0800               	movf	0,w
  6404     010C  0081               	movwf	1
  6405                           
  6406                           ;main.c: 243:                     }
  6407     010D  3001               	movlw	1
  6408     010E  00EB               	movwf	??_main
  6409     010F  086B               	movf	??_main,w
  6410     0110  07CB               	addwf	_Pos,f
  6411     0111  28FF               	goto	l6011
  6412     0112                     l6023:
  6413                           
  6414                           ;main.c: 246:             BCD2Bin(I2CRead(0x01));
  6415     0112  3001               	movlw	1
  6416     0113  318F  2705  3180   	fcall	_I2CRead
  6417     0116  318D  2581  3180   	fcall	_BCD2Bin
  6418                           
  6419                           ;main.c: 247:             SplitLoad(3);
  6420     0119  3003               	movlw	3
  6421     011A  318D  2547  3180   	fcall	_SplitLoad
  6422                           
  6423                           ;main.c: 248:             Temp = I2CRead(0x02);
  6424     011D  3002               	movlw	2
  6425     011E  318F  2705  3180   	fcall	_I2CRead
  6426     0121  0140               	movlb	0	; select bank0
  6427     0122  00C7               	movwf	_Temp
  6428                           
  6429                           ;main.c: 249:             BCD2Bin(Temp);
  6430     0123  0847               	movf	_Temp,w
  6431     0124  318D  2581  3180   	fcall	_BCD2Bin
  6432                           
  6433                           ;main.c: 250:             if (Temp == BlankStart)
  6434     0127  0847               	movf	_Temp,w
  6435     0128  0649               	xorwf	_BlankStart,w
  6436     0129  1D03               	skipz
  6437     012A  292F               	goto	l6035
  6438                           
  6439                           ;main.c: 251:                 TubesOff();
  6440     012B  318C  24A8  3180   	fcall	_TubesOff
  6441     012E  2936               	goto	l6039
  6442     012F                     l6035:
  6443     012F  0847               	movf	_Temp,w
  6444     0130  0648               	xorwf	_BlankEnd,w
  6445     0131  1D03               	skipz
  6446     0132  2936               	goto	l6039
  6447                           
  6448                           ;main.c: 253:                 TubesOn();
  6449     0133  318E  26E1  3180   	fcall	_TubesOn
  6450     0136                     l6039:
  6451                           
  6452                           ;main.c: 254:             SplitLoad(0);
  6453     0136  3000               	movlw	0
  6454     0137  318D  2547  3180   	fcall	_SplitLoad
  6455                           
  6456                           ;main.c: 255:             if (HourType == 1)
  6457     013A  0350               	decf	_HourType,w
  6458     013B  1D03               	btfss	3,2
  6459     013C  294A               	goto	l1070
  6460                           
  6461                           ;main.c: 256:             {;main.c: 257:                 if (Temp > 0x12)
  6462     013D  3013               	movlw	19
  6463     013E  0247               	subwf	_Temp,w
  6464     013F  1C03               	skipc
  6465     0140  2945               	goto	l1071
  6466                           
  6467                           ;main.c: 258:                 {;main.c: 259:                     DisplayBuf[0] -= 1;
  6468     0141  3001               	movlw	1
  6469     0142  02B0               	subwf	_DisplayBuf,f
  6470                           
  6471                           ;main.c: 260:                     DisplayBuf[1] -= 2;
  6472     0143  3002               	movlw	2
  6473     0144  02B1               	subwf	_DisplayBuf+1,f
  6474     0145                     l1071:	
  6475                           ;main.c: 261:                 }
  6476                           
  6477                           
  6478                           ;main.c: 262:                 if (DisplayBuf[0] == 0)
  6479     0145  0830               	movf	_DisplayBuf,w
  6480     0146  1D03               	btfss	3,2
  6481     0147  294A               	goto	l1070
  6482                           
  6483                           ;main.c: 263:                 {;main.c: 264:                     DisplayBuf[0] = 10;
  6484     0148  300A               	movlw	10
  6485     0149  00B0               	movwf	_DisplayBuf
  6486     014A                     l1070:	
  6487                           ;main.c: 266:             }
  6488                           
  6489                           
  6490                           ;main.c: 267:             DisplayBuf[2] = 0x52;
  6491     014A  3052               	movlw	82
  6492     014B  00B2               	movwf	_DisplayBuf+2
  6493                           
  6494                           ;main.c: 268:             DisplayBuf[5] = 0x52;
  6495     014C  3052               	movlw	82
  6496     014D  00B5               	movwf	_DisplayBuf+5
  6497                           
  6498                           ;main.c: 269:             if (DisplayBuf[7] & 1)
  6499     014E  1C37               	btfss	_DisplayBuf+7,0
  6500     014F  2954               	goto	l6053
  6501                           
  6502                           ;main.c: 270:             {;main.c: 271:                 DisplayBuf[2] = 0x4C;
  6503     0150  304C               	movlw	76
  6504     0151  00B2               	movwf	_DisplayBuf+2
  6505                           
  6506                           ;main.c: 272:                 DisplayBuf[5] = 0x4C;
  6507     0152  304C               	movlw	76
  6508     0153  00B5               	movwf	_DisplayBuf+5
  6509     0154                     l6053:
  6510                           
  6511                           ;main.c: 274:             if (TimeAdj != 0)
  6512     0154  083A               	movf	_TimeAdj,w
  6513     0155  043B               	iorwf	_TimeAdj+1,w
  6514     0156  1903               	btfsc	3,2
  6515     0157  297C               	goto	l6071
  6516                           
  6517                           ;main.c: 275:             {;main.c: 276:                 TimeAdj--;
  6518     0158  3001               	movlw	1
  6519     0159  02BA               	subwf	_TimeAdj,f
  6520     015A  3000               	movlw	0
  6521     015B  3BBB               	subwfb	_TimeAdj+1,f
  6522                           
  6523                           ;main.c: 277:                 if (TimeAdj == 0)
  6524     015C  083A               	movf	_TimeAdj,w
  6525     015D  043B               	iorwf	_TimeAdj+1,w
  6526     015E  1D03               	btfss	3,2
  6527     015F  297C               	goto	l6071
  6528     0160                     l6061:
  6529     0160  3000               	movlw	0
  6530     0161  318F  2705  3180   	fcall	_I2CRead
  6531     0164  3A01               	xorlw	1
  6532     0165  1D03               	skipz
  6533     0166  2960               	goto	l6061
  6534                           
  6535                           ;main.c: 280:                     if (TimeFast == 1)
  6536     0167  0140               	movlb	0	; select bank0
  6537     0168  034A               	decf	_TimeFast,w
  6538     0169  1D03               	btfss	3,2
  6539     016A  296D               	goto	l6067
  6540                           
  6541                           ;main.c: 281:                         I2CWrite(0x00, 0b00000000);
  6542     016B  01E0               	clrf	I2CWrite@data
  6543     016C  296F               	goto	L1
  6544     016D                     l6067:
  6545                           
  6546                           ;main.c: 283:                         I2CWrite(0x00, 0b00000010);
  6547     016D  3002               	movlw	2
  6548     016E  00E0               	movwf	I2CWrite@data
  6549     016F                     L1:
  6550     016F  3000               	movlw	0
  6551     0170  318D  25B1  3180   	fcall	_I2CWrite
  6552                           
  6553                           ;main.c: 284:                     TimeAdj = TimeAdjStore;
  6554     0173  307D               	movlw	(low _TimeAdjStore)& (0+255)
  6555     0174  318D  253A  3180   	fcall	___eetoi
  6556     0177  0877               	movf	?___eetoi+1,w
  6557     0178  0140               	movlb	0	; select bank0
  6558     0179  00BB               	movwf	_TimeAdj+1
  6559     017A  0876               	movf	?___eetoi,w
  6560     017B  00BA               	movwf	_TimeAdj
  6561     017C                     l6071:
  6562                           
  6563                           ;main.c: 287:             if ((DisplayBuf[3]|DisplayBuf[4]|DisplayBuf[6]|DisplayBuf[7]) 
      +                          == 0)
  6564     017C  0833               	movf	_DisplayBuf+3,w
  6565     017D  0434               	iorwf	_DisplayBuf+4,w
  6566     017E  0436               	iorwf	_DisplayBuf+6,w
  6567     017F  0437               	iorwf	_DisplayBuf+7,w
  6568     0180  1D03               	btfss	3,2
  6569     0181  2988               	goto	l1081
  6570                           
  6571                           ;main.c: 288:             {;main.c: 289:                 DisplayBufSave();
  6572     0182  318D  259F  3180   	fcall	_DisplayBufSave
  6573                           
  6574                           ;main.c: 290:                 FixedWL();
  6575     0185  3185  253C  3180   	fcall	_FixedWL
  6576     0188                     l1081:	
  6577                           ;main.c: 291:             }
  6578                           
  6579                           
  6580                           ;main.c: 292:             Loader();
  6581     0188  318F  27C8  3180   	fcall	_Loader
  6582                           
  6583                           ;main.c: 293:             _delay(16000);
  6584     018B  3015               	movlw	21
  6585     018C  0140               	movlb	0	; select bank0
  6586     018D  00EB               	movwf	??_main
  6587     018E  30C6               	movlw	198
  6588     018F                     u4677:
  6589     018F  0B89               	decfsz	9,f
  6590     0190  298F               	goto	u4677
  6591     0191  0BEB               	decfsz	??_main,f
  6592     0192  298F               	goto	u4677
  6593     0193  0000               	nop
  6594     0194  284B               	goto	l5933
  6595     0195                     __end_of_main:
  6596                           
  6597                           	psect	text1
  6598     0CA8                     __ptext1:	
  6599 ;; *************** function _TubesOff *****************
  6600 ;; Defined at:
  6601 ;;		line 43 in file "Subroutines.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;		None
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;		None
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  1    wreg      void 
  6608 ;; Registers used:
  6609 ;;		None
  6610 ;; Tracked objects:
  6611 ;;		On entry : 3F/0
  6612 ;;		On exit  : 3F/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6615 ;;      Params:         0       0       0       0       0       0       0       0
  6616 ;;      Locals:         0       0       0       0       0       0       0       0
  6617 ;;      Temps:          0       0       0       0       0       0       0       0
  6618 ;;      Totals:         0       0       0       0       0       0       0       0
  6619 ;;Total ram usage:        0 bytes
  6620 ;; Hardware stack levels used: 1
  6621 ;; Hardware stack levels required when called: 4
  6622 ;; This function calls:
  6623 ;;		Nothing
  6624 ;; This function is called by:
  6625 ;;		_main
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629     0CA8                     _TubesOff:	
  6630                           ;psect for function _TubesOff
  6631                           
  6632                           
  6633                           ;Subroutines.c: 45:     PWM6CONbits.PWM6EN = 0;
  6634                           
  6635                           ;incstack = 0
  6636                           ; Regs used in _TubesOff: []
  6637     0CA8  0147               	movlb	7	; select bank7
  6638     0CA9  138E               	bcf	14,7	;volatile
  6639                           
  6640                           ;Subroutines.c: 46:     LATCbits.LATC4 = 0;
  6641     0CAA  0140               	movlb	0	; select bank0
  6642     0CAB  121A               	bcf	26,4	;volatile
  6643                           
  6644                           ;Subroutines.c: 47:     LATCbits.LATC7 = 0;
  6645     0CAC  139A               	bcf	26,7	;volatile
  6646     0CAD  0008               	return
  6647     0CAE                     __end_of_TubesOff:
  6648                           
  6649                           	psect	text2
  6650     0451                     __ptext2:	
  6651 ;; *************** function _Startup *****************
  6652 ;; Defined at:
  6653 ;;		line 139 in file "main.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;		None
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;		None
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  1    wreg      void 
  6660 ;; Registers used:
  6661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6662 ;; Tracked objects:
  6663 ;;		On entry : B3F/0
  6664 ;;		On exit  : 3F/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6667 ;;      Params:         0       0       0       0       0       0       0       0
  6668 ;;      Locals:         0       0       0       0       0       0       0       0
  6669 ;;      Temps:          0       1       0       0       0       0       0       0
  6670 ;;      Totals:         0       1       0       0       0       0       0       0
  6671 ;;Total ram usage:        1 bytes
  6672 ;; Hardware stack levels used: 1
  6673 ;; Hardware stack levels required when called: 8
  6674 ;; This function calls:
  6675 ;;		_EmptyTubes
  6676 ;;		_I2CRead
  6677 ;;		_I2CWrite
  6678 ;;		_Loader
  6679 ;;		_SYSTEM_Initialize
  6680 ;;		_TMR0_StartTimer
  6681 ;;		_TubesOn
  6682 ;;		___eetoc
  6683 ;;		___eetoi
  6684 ;; This function is called by:
  6685 ;;		_main
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689     0451                     _Startup:	
  6690                           ;psect for function _Startup
  6691                           
  6692                           
  6693                           ;main.c: 142:     SYSTEM_Initialize();
  6694                           
  6695                           ;incstack = 0
  6696                           ; Regs used in _Startup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6697     0451  318E  261D  3184   	fcall	_SYSTEM_Initialize
  6698                           
  6699                           ;main.c: 143:     TMR0_StartTimer();
  6700     0454  3180  2002  3184   	fcall	_TMR0_StartTimer
  6701                           
  6702                           ;main.c: 148:     (INTCONbits.PEIE = 1);
  6703     0457  170B               	bsf	11,6	;volatile
  6704                           
  6705                           ;main.c: 151:     TimeFast = TimeFastStore;
  6706     0458  307C               	movlw	(low _TimeFastStore)& (0+255)
  6707     0459  318C  24E8  3184   	fcall	___eetoc
  6708     045C  0140               	movlb	0	; select bank0
  6709     045D  00CA               	movwf	_TimeFast
  6710                           
  6711                           ;main.c: 152:     TimeAdj = TimeAdjStore;
  6712     045E  307D               	movlw	(low _TimeAdjStore)& (0+255)
  6713     045F  318D  253A  3184   	fcall	___eetoi
  6714     0462  0877               	movf	?___eetoi+1,w
  6715     0463  0140               	movlb	0	; select bank0
  6716     0464  00BB               	movwf	_TimeAdj+1
  6717     0465  0876               	movf	?___eetoi,w
  6718     0466  00BA               	movwf	_TimeAdj
  6719                           
  6720                           ;main.c: 153:     DateFormat = DateFormatStore;
  6721     0467  307F               	movlw	(low _DateFormatStore)& (0+255)
  6722     0468  318C  24E8  3184   	fcall	___eetoc
  6723     046B  0140               	movlb	0	; select bank0
  6724     046C  00D2               	movwf	_DateFormat
  6725                           
  6726                           ;main.c: 154:     Brightness = BrightnessStore;
  6727     046D  307B               	movlw	(low _BrightnessStore)& (0+255)
  6728     046E  318C  24E8  3184   	fcall	___eetoc
  6729     0471  0140               	movlb	0	; select bank0
  6730     0472  00D1               	movwf	_Brightness
  6731                           
  6732                           ;main.c: 155:     HourType = HourTypeStore;
  6733     0473  307A               	movlw	(low _HourTypeStore)& (0+255)
  6734     0474  318C  24E8  3184   	fcall	___eetoc
  6735     0477  0140               	movlb	0	; select bank0
  6736     0478  00D0               	movwf	_HourType
  6737                           
  6738                           ;main.c: 156:     BlankStart = BlankStartStore;
  6739     0479  3079               	movlw	(low _BlankStartStore)& (0+255)
  6740     047A  318C  24E8  3184   	fcall	___eetoc
  6741     047D  0140               	movlb	0	; select bank0
  6742     047E  00C9               	movwf	_BlankStart
  6743                           
  6744                           ;main.c: 157:     BlankEnd = BlankEndStore;
  6745     047F  3078               	movlw	(low _BlankEndStore)& (0+255)
  6746     0480  318C  24E8  3184   	fcall	___eetoc
  6747     0483  0140               	movlb	0	; select bank0
  6748     0484  00C8               	movwf	_BlankEnd
  6749                           
  6750                           ;main.c: 160:     if ((I2CRead(0x0E) & 0b00000011) == 0b00000011)
  6751     0485  300E               	movlw	14
  6752     0486  318F  2705  3184   	fcall	_I2CRead
  6753     0489  0140               	movlb	0	; select bank0
  6754     048A  00E1               	movwf	??_Startup
  6755     048B  3003               	movlw	3
  6756     048C  0561               	andwf	??_Startup,w
  6757     048D  3A03               	xorlw	3
  6758     048E  1D03               	skipz
  6759     048F  2CC5               	goto	l5813
  6760                           
  6761                           ;main.c: 161:     {;main.c: 162:         I2CWrite(0x0E, 0);
  6762     0490  01E0               	clrf	I2CWrite@data
  6763     0491  300E               	movlw	14
  6764     0492  318D  25B1  3184   	fcall	_I2CWrite
  6765                           
  6766                           ;main.c: 163:         I2CWrite(0x0F, 0b00000001);
  6767     0495  0140               	movlb	0	; select bank0
  6768     0496  01E0               	clrf	I2CWrite@data
  6769     0497  0AE0               	incf	I2CWrite@data,f
  6770     0498  300F               	movlw	15
  6771     0499  318D  25B1  3184   	fcall	_I2CWrite
  6772                           
  6773                           ;main.c: 164:         I2CWrite(0x01, 0x30);
  6774     049C  3030               	movlw	48
  6775     049D  0140               	movlb	0	; select bank0
  6776     049E  00E0               	movwf	I2CWrite@data
  6777     049F  3001               	movlw	1
  6778     04A0  318D  25B1  3184   	fcall	_I2CWrite
  6779                           
  6780                           ;main.c: 165:         I2CWrite(0x02, 0x12);
  6781     04A3  3012               	movlw	18
  6782     04A4  0140               	movlb	0	; select bank0
  6783     04A5  00E0               	movwf	I2CWrite@data
  6784     04A6  3002               	movlw	2
  6785     04A7  318D  25B1  3184   	fcall	_I2CWrite
  6786                           
  6787                           ;main.c: 166:         I2CWrite(0x04, 0x28);
  6788     04AA  3028               	movlw	40
  6789     04AB  0140               	movlb	0	; select bank0
  6790     04AC  00E0               	movwf	I2CWrite@data
  6791     04AD  3004               	movlw	4
  6792     04AE  318D  25B1  3184   	fcall	_I2CWrite
  6793                           
  6794                           ;main.c: 167:         I2CWrite(0x05, 0x7);
  6795     04B1  3007               	movlw	7
  6796     04B2  0140               	movlb	0	; select bank0
  6797     04B3  00E0               	movwf	I2CWrite@data
  6798     04B4  3005               	movlw	5
  6799     04B5  318D  25B1  3184   	fcall	_I2CWrite
  6800                           
  6801                           ;main.c: 168:         I2CWrite(0x06, 0x10);
  6802     04B8  3010               	movlw	16
  6803     04B9  0140               	movlb	0	; select bank0
  6804     04BA  00E0               	movwf	I2CWrite@data
  6805     04BB  3006               	movlw	6
  6806     04BC  318D  25B1  3184   	fcall	_I2CWrite
  6807                           
  6808                           ;main.c: 169:         I2CWrite(0x0F, 0b00000000);
  6809     04BF  0140               	movlb	0	; select bank0
  6810     04C0  01E0               	clrf	I2CWrite@data
  6811     04C1  300F               	movlw	15
  6812     04C2  318D  25B1  3184   	fcall	_I2CWrite
  6813     04C5                     l5813:
  6814                           
  6815                           ;main.c: 173:     EmptyTubes();
  6816     04C5  318D  2572  3184   	fcall	_EmptyTubes
  6817                           
  6818                           ;main.c: 174:     Loader();
  6819     04C8  318F  27C8  3184   	fcall	_Loader
  6820                           
  6821                           ;main.c: 175:     TubesOn();
  6822     04CB  318E  26E1         	fcall	_TubesOn
  6823                           
  6824                           ;main.c: 177:     StartupDone = 1;
  6825     04CD  147C               	bsf	_StartupDone/(0+8),_StartupDone& (0+7)
  6826     04CE  0008               	return
  6827     04CF                     __end_of_Startup:
  6828                           
  6829                           	psect	text3
  6830     0D3A                     __ptext3:	
  6831 ;; *************** function ___eetoi *****************
  6832 ;; Defined at:
  6833 ;;		line 112 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;  addr            1    wreg     PTR eeprom void 
  6836 ;;		 -> TimeAdjStore(2), 
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;  addr            1    8[COMMON] PTR eeprom void 
  6839 ;;		 -> TimeAdjStore(2), 
  6840 ;;  data            2    9[COMMON] unsigned int 
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  2    6[COMMON] unsigned int 
  6843 ;; Registers used:
  6844 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6845 ;; Tracked objects:
  6846 ;;		On entry : 3C/3
  6847 ;;		On exit  : 3F/10
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6850 ;;      Params:         2       0       0       0       0       0       0       0
  6851 ;;      Locals:         3       0       0       0       0       0       0       0
  6852 ;;      Temps:          0       0       0       0       0       0       0       0
  6853 ;;      Totals:         5       0       0       0       0       0       0       0
  6854 ;;Total ram usage:        5 bytes
  6855 ;; Hardware stack levels used: 1
  6856 ;; Hardware stack levels required when called: 5
  6857 ;; This function calls:
  6858 ;;		___eecpymem
  6859 ;; This function is called by:
  6860 ;;		_Startup
  6861 ;;		_main
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865     0D3A                     ___eetoi:	
  6866                           ;psect for function ___eetoi
  6867                           
  6868                           
  6869                           ;incstack = 0
  6870                           ; Regs used in ___eetoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6871                           ;___eetoi@addr stored from wreg
  6872     0D3A  00F8               	movwf	___eetoi@addr
  6873                           
  6874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 112: __eetoi(__eep
      +                          rom void *addr);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 113
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 114:  unsigned 
      +                          int data;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 115:  __e
      +                          ecpymem((unsigned char *) &data,addr,2);
  6875     0D3B  0878               	movf	___eetoi@addr,w
  6876     0D3C  00F1               	movwf	___eecpymem@from
  6877     0D3D  3002               	movlw	2
  6878     0D3E  00F2               	movwf	___eecpymem@size
  6879     0D3F  3079               	movlw	(low (___eetoi@data| 0))& (0+255)
  6880     0D40  318E  26A2         	fcall	___eecpymem
  6881                           
  6882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 116:  return data;
  6883     0D42  087A               	movf	___eetoi@data+1,w
  6884     0D43  00F7               	movwf	?___eetoi+1
  6885     0D44  0879               	movf	___eetoi@data,w
  6886     0D45  00F6               	movwf	?___eetoi
  6887     0D46  0008               	return
  6888     0D47                     __end_of___eetoi:
  6889                           
  6890                           	psect	text4
  6891     0CE8                     __ptext4:	
  6892 ;; *************** function ___eetoc *****************
  6893 ;; Defined at:
  6894 ;;		line 104 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  addr            1    wreg     PTR eeprom void 
  6897 ;;		 -> BlankEndStore(1), BlankStartStore(1), HourTypeStore(1), BrightnessStore(1), 
  6898 ;;		 -> DateFormatStore(1), TimeFastStore(1), 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;  addr            1    7[COMMON] PTR eeprom void 
  6901 ;;		 -> BlankEndStore(1), BlankStartStore(1), HourTypeStore(1), BrightnessStore(1), 
  6902 ;;		 -> DateFormatStore(1), TimeFastStore(1), 
  6903 ;;  data            1    6[COMMON] unsigned char 
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  1    wreg      unsigned char 
  6906 ;; Registers used:
  6907 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6908 ;; Tracked objects:
  6909 ;;		On entry : 34/B
  6910 ;;		On exit  : 3F/10
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6913 ;;      Params:         0       0       0       0       0       0       0       0
  6914 ;;      Locals:         2       0       0       0       0       0       0       0
  6915 ;;      Temps:          0       0       0       0       0       0       0       0
  6916 ;;      Totals:         2       0       0       0       0       0       0       0
  6917 ;;Total ram usage:        2 bytes
  6918 ;; Hardware stack levels used: 1
  6919 ;; Hardware stack levels required when called: 5
  6920 ;; This function calls:
  6921 ;;		___eecpymem
  6922 ;; This function is called by:
  6923 ;;		_Startup
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927     0CE8                     ___eetoc:	
  6928                           ;psect for function ___eetoc
  6929                           
  6930                           
  6931                           ;incstack = 0
  6932                           ; Regs used in ___eetoc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6933                           ;___eetoc@addr stored from wreg
  6934     0CE8  00F7               	movwf	___eetoc@addr
  6935                           
  6936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 104: __eetoc(__eep
      +                          rom void *addr);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 105
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 106:  unsigned 
      +                          char data;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 107:  __
      +                          eecpymem((unsigned char *) &data,addr,1);
  6937     0CE9  0877               	movf	___eetoc@addr,w
  6938     0CEA  00F1               	movwf	___eecpymem@from
  6939     0CEB  01F2               	clrf	___eecpymem@size
  6940     0CEC  0AF2               	incf	___eecpymem@size,f
  6941     0CED  3076               	movlw	(low (___eetoc@data| 0))& (0+255)
  6942     0CEE  318E  26A2         	fcall	___eecpymem
  6943                           
  6944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 108:  return data;
  6945     0CF0  0876               	movf	___eetoc@data,w
  6946     0CF1  0008               	return
  6947     0CF2                     __end_of___eetoc:
  6948                           
  6949                           	psect	text5
  6950     0EA2                     __ptext5:	
  6951 ;; *************** function ___eecpymem *****************
  6952 ;; Defined at:
  6953 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;  to              1    wreg     PTR volatile unsigned ch
  6956 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  6957 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  6958 ;;  from            1    1[COMMON] PTR eeprom unsigned char
  6959 ;;		 -> BlankEndStore(1), BlankStartStore(1), HourTypeStore(1), BrightnessStore(1), 
  6960 ;;		 -> DateFormatStore(1), TimeAdjStore(2), TimeFastStore(1), 
  6961 ;;  size            1    2[COMMON] unsigned char 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  to              1    5[COMMON] PTR volatile unsigned ch
  6964 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  6965 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  6966 ;;  cp              1    4[COMMON] PTR volatile unsigned ch
  6967 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  6968 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  6969 ;; Return value:  Size  Location     Type
  6970 ;;                  1    wreg      void 
  6971 ;; Registers used:
  6972 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6973 ;; Tracked objects:
  6974 ;;		On entry : 34/3
  6975 ;;		On exit  : 3F/10
  6976 ;;		Unchanged: 0/0
  6977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6978 ;;      Params:         2       0       0       0       0       0       0       0
  6979 ;;      Locals:         2       0       0       0       0       0       0       0
  6980 ;;      Temps:          1       0       0       0       0       0       0       0
  6981 ;;      Totals:         5       0       0       0       0       0       0       0
  6982 ;;Total ram usage:        5 bytes
  6983 ;; Hardware stack levels used: 1
  6984 ;; Hardware stack levels required when called: 4
  6985 ;; This function calls:
  6986 ;;		Nothing
  6987 ;; This function is called by:
  6988 ;;		___eetoc
  6989 ;;		___eetoi
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993     0EA2                     ___eecpymem:	
  6994                           ;psect for function ___eecpymem
  6995                           
  6996                           
  6997                           ;incstack = 0
  6998                           ; Regs used in ___eecpymem: [wreg+fsr1l+fsr1h+status,2+status,0]
  6999                           ;___eecpymem@to stored from wreg
  7000     0EA2  00F5               	movwf	___eecpymem@to
  7001                           
  7002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 6: __eecpymem(vola
      +                          tile unsigned char *to, __eeprom unsigned char * from, unsigned char size);C:\Program Fi
      +                          les\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 6: };C:\Program Files\Microchip\
      +                          xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 6: ;C:\Program Files\Microchip\xc8\v2.40\pic\s
      +                          ources\c99\pic\__eeprom.c: 6: ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\
      +                          __eeprom.c: 6: };C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 7:
      +                           {
  7003     0EA3  0875               	movf	___eecpymem@to,w
  7004     0EA4  00F4               	movwf	___eecpymem@cp
  7005     0EA5                     l1522:	
  7006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 24:  };C:\Program 
      +                          Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 24: __fltoee(__eeprom void *ad
      +                          dr, double data)
  7007                           
  7008                           
  7009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 22:  while (NVMCON
      +                          1bits.WR) {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 22: 
  7010     0EA5  0150               	movlb	16	; select bank16
  7011     0EA6  189E               	btfsc	30,1	;volsfr
  7012     0EA7  2EA5               	goto	l1522
  7013                           
  7014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 25:  NVMCON1bits.N
      +                          VMREGS = 1;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 25: {
  7015     0EA8  171E               	bsf	30,6	;volsfr
  7016                           
  7017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 26:  NVMADRL = (un
      +                          signed char) from;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 
      +                          26:  __memcpyee(addr,(unsigned char *) &data,4);
  7018     0EA9  0871               	movf	___eecpymem@from,w
  7019     0EAA  009A               	movwf	26	;volatile
  7020                           
  7021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 27:  NVMADRH = 0x7
      +                          0;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 27:  return data
      +                          ;
  7022     0EAB  3070               	movlw	112
  7023     0EAC  009B               	movwf	27	;volatile
  7024     0EAD                     l4217:	
  7025                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 28:  while (size--
      +                          ) {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 28: }
  7026                           
  7027                           
  7028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 28:  while (size--
      +                          ) {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 28: }
  7029     0EAD  3001               	movlw	1
  7030     0EAE  02F2               	subwf	___eecpymem@size,f
  7031     0EAF  0A72               	incf	___eecpymem@size,w
  7032     0EB0  1903               	btfsc	3,2
  7033     0EB1  0008               	return
  7034                           
  7035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 29:   NVMCON1bits.
      +                          RD = 1;
  7036     0EB2  141E               	bsf	30,0	;volsfr
  7037                           
  7038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 30:   *cp++ = NVMD
      +                          ATL;
  7039     0EB3  0874               	movf	___eecpymem@cp,w
  7040     0EB4  0086               	movwf	6
  7041     0EB5  0187               	clrf	7
  7042     0EB6  081C               	movf	28,w	;volatile
  7043     0EB7  0081               	movwf	1
  7044     0EB8  3001               	movlw	1
  7045     0EB9  00F3               	movwf	??___eecpymem
  7046     0EBA  0873               	movf	??___eecpymem,w
  7047     0EBB  07F4               	addwf	___eecpymem@cp,f
  7048                           
  7049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeprom.c: 31:   NVMADRL++;
  7050     0EBC  3001               	movlw	1
  7051     0EBD  00F3               	movwf	??___eecpymem
  7052     0EBE  0873               	movf	??___eecpymem,w
  7053     0EBF  079A               	addwf	26,f	;volatile
  7054     0EC0  2EAD               	goto	l4217
  7055     0EC1                     __end_of___eecpymem:
  7056                           
  7057                           	psect	text6
  7058     0EE1                     __ptext6:	
  7059 ;; *************** function _TubesOn *****************
  7060 ;; Defined at:
  7061 ;;		line 50 in file "Subroutines.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;		None
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;		None
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg, status,2, status,0, pclath, cstack
  7070 ;; Tracked objects:
  7071 ;;		On entry : 3F/0
  7072 ;;		On exit  : 3F/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7075 ;;      Params:         0       0       0       0       0       0       0       0
  7076 ;;      Locals:         0       0       0       0       0       0       0       0
  7077 ;;      Temps:          0       2       0       0       0       0       0       0
  7078 ;;      Totals:         0       2       0       0       0       0       0       0
  7079 ;;Total ram usage:        2 bytes
  7080 ;; Hardware stack levels used: 1
  7081 ;; Hardware stack levels required when called: 5
  7082 ;; This function calls:
  7083 ;;		_PWM6_LoadDutyValue
  7084 ;;		___awdiv
  7085 ;;		___wmul
  7086 ;; This function is called by:
  7087 ;;		_Startup
  7088 ;;		_main
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092     0EE1                     _TubesOn:	
  7093                           ;psect for function _TubesOn
  7094                           
  7095                           
  7096                           ;Subroutines.c: 52:     PWM6_LoadDutyValue(((5190 * Brightness) / 100));
  7097                           
  7098                           ;incstack = 0
  7099                           ; Regs used in _TubesOn: [wreg+status,2+status,0+pclath+cstack]
  7100     0EE1  3064               	movlw	100
  7101     0EE2  00F7               	movwf	___awdiv@divisor
  7102     0EE3  3000               	movlw	0
  7103     0EE4  00F8               	movwf	___awdiv@divisor+1
  7104     0EE5  0851               	movf	_Brightness,w
  7105     0EE6  00DB               	movwf	??_TubesOn
  7106     0EE7  01DC               	clrf	??_TubesOn+1
  7107     0EE8  085B               	movf	??_TubesOn,w
  7108     0EE9  00F1               	movwf	___wmul@multiplier
  7109     0EEA  085C               	movf	??_TubesOn+1,w
  7110     0EEB  00F2               	movwf	___wmul@multiplier+1
  7111     0EEC  3046               	movlw	70
  7112     0EED  00F3               	movwf	___wmul@multiplicand
  7113     0EEE  3014               	movlw	20
  7114     0EEF  00F4               	movwf	___wmul@multiplicand+1
  7115     0EF0  318E  264E  318E   	fcall	___wmul
  7116     0EF3  0872               	movf	?___wmul+1,w
  7117     0EF4  00FA               	movwf	___awdiv@dividend+1
  7118     0EF5  0871               	movf	?___wmul,w
  7119     0EF6  00F9               	movwf	___awdiv@dividend
  7120     0EF7  3186  265F  318E   	fcall	___awdiv
  7121     0EFA  0878               	movf	?___awdiv+1,w
  7122     0EFB  00D8               	movwf	PWM6_LoadDutyValue@dutyValue+1
  7123     0EFC  0877               	movf	?___awdiv,w
  7124     0EFD  00D7               	movwf	PWM6_LoadDutyValue@dutyValue
  7125     0EFE  318E  2605         	fcall	_PWM6_LoadDutyValue
  7126                           
  7127                           ;Subroutines.c: 53:     PWM6CONbits.PWM6EN = 1;
  7128     0F00  178E               	bsf	14,7	;volatile
  7129                           
  7130                           ;Subroutines.c: 54:     LATCbits.LATC4 = 1;
  7131     0F01  0140               	movlb	0	; select bank0
  7132     0F02  161A               	bsf	26,4	;volatile
  7133                           
  7134                           ;Subroutines.c: 55:     LATCbits.LATC7 = 1;
  7135     0F03  179A               	bsf	26,7	;volatile
  7136     0F04  0008               	return
  7137     0F05                     __end_of_TubesOn:
  7138                           
  7139                           	psect	text7
  7140     0002                     __ptext7:	
  7141 ;; *************** function _TMR0_StartTimer *****************
  7142 ;; Defined at:
  7143 ;;		line 88 in file "mcc_generated_files/tmr0.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;		None
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;		None
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  1    wreg      void 
  7150 ;; Registers used:
  7151 ;;		None
  7152 ;; Tracked objects:
  7153 ;;		On entry : 3F/B
  7154 ;;		On exit  : 3F/B
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7157 ;;      Params:         0       0       0       0       0       0       0       0
  7158 ;;      Locals:         0       0       0       0       0       0       0       0
  7159 ;;      Temps:          0       0       0       0       0       0       0       0
  7160 ;;      Totals:         0       0       0       0       0       0       0       0
  7161 ;;Total ram usage:        0 bytes
  7162 ;; Hardware stack levels used: 1
  7163 ;; Hardware stack levels required when called: 4
  7164 ;; This function calls:
  7165 ;;		Nothing
  7166 ;; This function is called by:
  7167 ;;		_Startup
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171     0002                     _TMR0_StartTimer:	
  7172                           ;psect for function _TMR0_StartTimer
  7173                           
  7174                           
  7175                           ;mcc_generated_files/tmr0.c: 91:     T0CON0bits.T0EN = 1;
  7176                           
  7177                           ;incstack = 0
  7178                           ; Regs used in _TMR0_StartTimer: []
  7179     0002  179E               	bsf	30,7	;volatile
  7180     0003  0008               	return
  7181     0004                     __end_of_TMR0_StartTimer:
  7182                           
  7183                           	psect	text8
  7184     0E1D                     __ptext8:	
  7185 ;; *************** function _SYSTEM_Initialize *****************
  7186 ;; Defined at:
  7187 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;		None
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;		None
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  1    wreg      void 
  7194 ;; Registers used:
  7195 ;;		wreg, status,2, status,0, pclath, cstack
  7196 ;; Tracked objects:
  7197 ;;		On entry : B3F/0
  7198 ;;		On exit  : 3F/B
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7201 ;;      Params:         0       0       0       0       0       0       0       0
  7202 ;;      Locals:         0       0       0       0       0       0       0       0
  7203 ;;      Temps:          0       0       0       0       0       0       0       0
  7204 ;;      Totals:         0       0       0       0       0       0       0       0
  7205 ;;Total ram usage:        0 bytes
  7206 ;; Hardware stack levels used: 1
  7207 ;; Hardware stack levels required when called: 6
  7208 ;; This function calls:
  7209 ;;		_I2C1_Initialize
  7210 ;;		_OSCILLATOR_Initialize
  7211 ;;		_PIN_MANAGER_Initialize
  7212 ;;		_PMD_Initialize
  7213 ;;		_PWM6_Initialize
  7214 ;;		_TMR0_Initialize
  7215 ;;		_TMR2_Initialize
  7216 ;;		_TMR4_Initialize
  7217 ;; This function is called by:
  7218 ;;		_Startup
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222     0E1D                     _SYSTEM_Initialize:	
  7223                           ;psect for function _SYSTEM_Initialize
  7224                           
  7225                           
  7226                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  7227                           
  7228                           ;incstack = 0
  7229                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7230     0E1D  318C  24DE  318E   	fcall	_PMD_Initialize
  7231                           
  7232                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  7233     0E20  3186  26F9  318E   	fcall	_I2C1_Initialize
  7234                           
  7235                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7236     0E23  3187  27C3  318E   	fcall	_PIN_MANAGER_Initialize
  7237                           
  7238                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7239     0E26  318C  24CB  318E   	fcall	_OSCILLATOR_Initialize
  7240                           
  7241                           ;mcc_generated_files/mcc.c: 56:     PWM6_Initialize();
  7242     0E29  318D  2515  318E   	fcall	_PWM6_Initialize
  7243                           
  7244                           ;mcc_generated_files/mcc.c: 57:     TMR4_Initialize();
  7245     0E2C  318D  25EF  318E   	fcall	_TMR4_Initialize
  7246                           
  7247                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  7248     0E2F  318D  2555  318E   	fcall	_TMR2_Initialize
  7249                           
  7250                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  7251     0E32  318D  25C5         	fcall	_TMR0_Initialize
  7252     0E34  0008               	return
  7253     0E35                     __end_of_SYSTEM_Initialize:
  7254                           
  7255                           	psect	text9
  7256     0DEF                     __ptext9:	
  7257 ;; *************** function _TMR4_Initialize *****************
  7258 ;; Defined at:
  7259 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;		None
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      void 
  7266 ;; Registers used:
  7267 ;;		wreg, status,2, status,0, pclath, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 3F/4
  7270 ;;		On exit  : 3F/5
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7273 ;;      Params:         0       0       0       0       0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0       0
  7275 ;;      Temps:          0       0       0       0       0       0       0       0
  7276 ;;      Totals:         0       0       0       0       0       0       0       0
  7277 ;;Total ram usage:        0 bytes
  7278 ;; Hardware stack levels used: 1
  7279 ;; Hardware stack levels required when called: 5
  7280 ;; This function calls:
  7281 ;;		_TMR4_SetInterruptHandler
  7282 ;; This function is called by:
  7283 ;;		_SYSTEM_Initialize
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287     0DEF                     _TMR4_Initialize:	
  7288                           ;psect for function _TMR4_Initialize
  7289                           
  7290                           
  7291                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x03;
  7292                           
  7293                           ;incstack = 0
  7294                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7295     0DEF  3003               	movlw	3
  7296     0DF0  0145               	movlb	5	; select bank5
  7297     0DF1  0096               	movwf	22	;volatile
  7298                           
  7299                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x20;
  7300     0DF2  3020               	movlw	32
  7301     0DF3  0095               	movwf	21	;volatile
  7302                           
  7303                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
  7304     0DF4  0197               	clrf	23	;volatile
  7305                           
  7306                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0xF9;
  7307     0DF5  30F9               	movlw	249
  7308     0DF6  0093               	movwf	19	;volatile
  7309                           
  7310                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
  7311     0DF7  0192               	clrf	18	;volatile
  7312                           
  7313                           ;mcc_generated_files/tmr4.c: 84:     PIR4bits.TMR4IF = 0;
  7314     0DF8  014E               	movlb	14	; select bank14
  7315     0DF9  1190               	bcf	16,3	;volatile
  7316                           
  7317                           ;mcc_generated_files/tmr4.c: 87:     PIE4bits.TMR4IE = 1;
  7318     0DFA  159A               	bsf	26,3	;volatile
  7319                           
  7320                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  7321     0DFB  3098               	movlw	low _TMR4_DefaultInterruptHandler
  7322     0DFC  00F1               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  7323     0DFD  300C               	movlw	high _TMR4_DefaultInterruptHandler
  7324     0DFE  00F2               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  7325     0DFF  318C  24A2         	fcall	_TMR4_SetInterruptHandler
  7326                           
  7327                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0x40;
  7328     0E01  3040               	movlw	64
  7329     0E02  0145               	movlb	5	; select bank5
  7330     0E03  0094               	movwf	20	;volatile
  7331     0E04  0008               	return
  7332     0E05                     __end_of_TMR4_Initialize:
  7333                           
  7334                           	psect	text10
  7335     0CA2                     __ptext10:	
  7336 ;; *************** function _TMR4_SetInterruptHandler *****************
  7337 ;; Defined at:
  7338 ;;		line 186 in file "mcc_generated_files/tmr4.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  7341 ;;		 -> TMR4_DefaultInterruptHandler(1), 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;		None
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  1    wreg      void 
  7346 ;; Registers used:
  7347 ;;		wreg
  7348 ;; Tracked objects:
  7349 ;;		On entry : 3F/E
  7350 ;;		On exit  : 3F/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7353 ;;      Params:         2       0       0       0       0       0       0       0
  7354 ;;      Locals:         0       0       0       0       0       0       0       0
  7355 ;;      Temps:          0       0       0       0       0       0       0       0
  7356 ;;      Totals:         2       0       0       0       0       0       0       0
  7357 ;;Total ram usage:        2 bytes
  7358 ;; Hardware stack levels used: 1
  7359 ;; Hardware stack levels required when called: 4
  7360 ;; This function calls:
  7361 ;;		Nothing
  7362 ;; This function is called by:
  7363 ;;		_TMR4_Initialize
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367     0CA2                     _TMR4_SetInterruptHandler:	
  7368                           ;psect for function _TMR4_SetInterruptHandler
  7369                           
  7370                           
  7371                           ;mcc_generated_files/tmr4.c: 187:     TMR4_InterruptHandler = InterruptHandler;
  7372                           
  7373                           ;incstack = 0
  7374                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  7375     0CA2  0872               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
  7376     0CA3  0140               	movlb	0	; select bank0
  7377     0CA4  00BD               	movwf	_TMR4_InterruptHandler+1
  7378     0CA5  0871               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
  7379     0CA6  00BC               	movwf	_TMR4_InterruptHandler
  7380     0CA7  0008               	return
  7381     0CA8                     __end_of_TMR4_SetInterruptHandler:
  7382                           
  7383                           	psect	text11
  7384     0D55                     __ptext11:	
  7385 ;; *************** function _TMR2_Initialize *****************
  7386 ;; Defined at:
  7387 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;		None
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;		None
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  1    wreg      void 
  7394 ;; Registers used:
  7395 ;;		wreg, status,2
  7396 ;; Tracked objects:
  7397 ;;		On entry : 3F/5
  7398 ;;		On exit  : 3F/5
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7401 ;;      Params:         0       0       0       0       0       0       0       0
  7402 ;;      Locals:         0       0       0       0       0       0       0       0
  7403 ;;      Temps:          0       0       0       0       0       0       0       0
  7404 ;;      Totals:         0       0       0       0       0       0       0       0
  7405 ;;Total ram usage:        0 bytes
  7406 ;; Hardware stack levels used: 1
  7407 ;; Hardware stack levels required when called: 4
  7408 ;; This function calls:
  7409 ;;		Nothing
  7410 ;; This function is called by:
  7411 ;;		_SYSTEM_Initialize
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415     0D55                     _TMR2_Initialize:	
  7416                           ;psect for function _TMR2_Initialize
  7417                           
  7418                           
  7419                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  7420                           
  7421                           ;incstack = 0
  7422                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  7423     0D55  3001               	movlw	1
  7424     0D56  0090               	movwf	16	;volatile
  7425                           
  7426                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x20;
  7427     0D57  3020               	movlw	32
  7428     0D58  008F               	movwf	15	;volatile
  7429                           
  7430                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  7431     0D59  0191               	clrf	17	;volatile
  7432                           
  7433                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x81;
  7434     0D5A  3081               	movlw	129
  7435     0D5B  008D               	movwf	13	;volatile
  7436                           
  7437                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  7438     0D5C  018C               	clrf	12	;volatile
  7439                           
  7440                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  7441     0D5D  014E               	movlb	14	; select bank14
  7442     0D5E  1090               	bcf	16,1	;volatile
  7443                           
  7444                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xA0;
  7445     0D5F  30A0               	movlw	160
  7446     0D60  0145               	movlb	5	; select bank5
  7447     0D61  008E               	movwf	14	;volatile
  7448     0D62  0008               	return
  7449     0D63                     __end_of_TMR2_Initialize:
  7450                           
  7451                           	psect	text12
  7452     0DC5                     __ptext12:	
  7453 ;; *************** function _TMR0_Initialize *****************
  7454 ;; Defined at:
  7455 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;		None
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;		None
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  1    wreg      void 
  7462 ;; Registers used:
  7463 ;;		wreg
  7464 ;; Tracked objects:
  7465 ;;		On entry : 3F/5
  7466 ;;		On exit  : 3F/B
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7469 ;;      Params:         0       0       0       0       0       0       0       0
  7470 ;;      Locals:         0       0       0       0       0       0       0       0
  7471 ;;      Temps:          0       0       0       0       0       0       0       0
  7472 ;;      Totals:         0       0       0       0       0       0       0       0
  7473 ;;Total ram usage:        0 bytes
  7474 ;; Hardware stack levels used: 1
  7475 ;; Hardware stack levels required when called: 4
  7476 ;; This function calls:
  7477 ;;		Nothing
  7478 ;; This function is called by:
  7479 ;;		_SYSTEM_Initialize
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483     0DC5                     _TMR0_Initialize:	
  7484                           ;psect for function _TMR0_Initialize
  7485                           
  7486                           
  7487                           ;mcc_generated_files/tmr0.c: 70:     T0CON1 = 0x50;
  7488                           
  7489                           ;incstack = 0
  7490                           ; Regs used in _TMR0_Initialize: [wreg]
  7491     0DC5  3050               	movlw	80
  7492     0DC6  014B               	movlb	11	; select bank11
  7493     0DC7  009F               	movwf	31	;volatile
  7494                           
  7495                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0xFE;
  7496     0DC8  30FE               	movlw	254
  7497     0DC9  009D               	movwf	29	;volatile
  7498                           
  7499                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0x0C;
  7500     0DCA  300C               	movlw	12
  7501     0DCB  009C               	movwf	28	;volatile
  7502                           
  7503                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  7504     0DCC  081D               	movf	29,w	;volatile
  7505     0DCD  0140               	movlb	0	; select bank0
  7506     0DCE  00C1               	movwf	_timer0ReloadVal16bit+1	;volatile
  7507     0DCF  014B               	movlb	11	; select bank11
  7508     0DD0  081C               	movf	28,w	;volatile
  7509     0DD1  0140               	movlb	0	; select bank0
  7510     0DD2  00C0               	movwf	_timer0ReloadVal16bit	;volatile
  7511                           
  7512                           ;mcc_generated_files/tmr0.c: 82:     PIR0bits.TMR0IF = 0;
  7513     0DD3  014E               	movlb	14	; select bank14
  7514     0DD4  128C               	bcf	12,5	;volatile
  7515                           
  7516                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x90;
  7517     0DD5  3090               	movlw	144
  7518     0DD6  014B               	movlb	11	; select bank11
  7519     0DD7  009E               	movwf	30	;volatile
  7520     0DD8  0008               	return
  7521     0DD9                     __end_of_TMR0_Initialize:
  7522                           
  7523                           	psect	text13
  7524     0D15                     __ptext13:	
  7525 ;; *************** function _PWM6_Initialize *****************
  7526 ;; Defined at:
  7527 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;		None
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;		None
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  1    wreg      void 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2, status,0
  7536 ;; Tracked objects:
  7537 ;;		On entry : 3F/11
  7538 ;;		On exit  : 3F/4
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7541 ;;      Params:         0       0       0       0       0       0       0       0
  7542 ;;      Locals:         0       0       0       0       0       0       0       0
  7543 ;;      Temps:          0       0       0       0       0       0       0       0
  7544 ;;      Totals:         0       0       0       0       0       0       0       0
  7545 ;;Total ram usage:        0 bytes
  7546 ;; Hardware stack levels used: 1
  7547 ;; Hardware stack levels required when called: 4
  7548 ;; This function calls:
  7549 ;;		Nothing
  7550 ;; This function is called by:
  7551 ;;		_SYSTEM_Initialize
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555     0D15                     _PWM6_Initialize:	
  7556                           ;psect for function _PWM6_Initialize
  7557                           
  7558                           
  7559                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x00;
  7560                           
  7561                           ;incstack = 0
  7562                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  7563     0D15  0147               	movlb	7	; select bank7
  7564     0D16  018E               	clrf	14	;volatile
  7565                           
  7566                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x40;
  7567     0D17  3040               	movlw	64
  7568     0D18  008D               	movwf	13	;volatile
  7569                           
  7570                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
  7571     0D19  30C0               	movlw	192
  7572     0D1A  008C               	movwf	12	;volatile
  7573                           
  7574                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  7575     0D1B  0144               	movlb	4	; select bank4
  7576     0D1C  081F               	movf	31,w	;volatile
  7577     0D1D  39F3               	andlw	-13
  7578     0D1E  3804               	iorlw	4
  7579     0D1F  009F               	movwf	31	;volatile
  7580     0D20  0008               	return
  7581     0D21                     __end_of_PWM6_Initialize:
  7582                           
  7583                           	psect	text14
  7584     0CDE                     __ptext14:	
  7585 ;; *************** function _PMD_Initialize *****************
  7586 ;; Defined at:
  7587 ;;		line 76 in file "mcc_generated_files/mcc.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;		None
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		status,2
  7596 ;; Tracked objects:
  7597 ;;		On entry : B3F/0
  7598 ;;		On exit  : B3F/F
  7599 ;;		Unchanged: B00/0
  7600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7601 ;;      Params:         0       0       0       0       0       0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0
  7603 ;;      Temps:          0       0       0       0       0       0       0       0
  7604 ;;      Totals:         0       0       0       0       0       0       0       0
  7605 ;;Total ram usage:        0 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 4
  7608 ;; This function calls:
  7609 ;;		Nothing
  7610 ;; This function is called by:
  7611 ;;		_SYSTEM_Initialize
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615     0CDE                     _PMD_Initialize:	
  7616                           ;psect for function _PMD_Initialize
  7617                           
  7618                           
  7619                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
  7620                           
  7621                           ;incstack = 0
  7622                           ; Regs used in _PMD_Initialize: [status,2]
  7623     0CDE  014F               	movlb	15	; select bank15
  7624     0CDF  0196               	clrf	22	;volatile
  7625                           
  7626                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
  7627     0CE0  0197               	clrf	23	;volatile
  7628                           
  7629                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
  7630     0CE1  0198               	clrf	24	;volatile
  7631                           
  7632                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
  7633     0CE2  0199               	clrf	25	;volatile
  7634                           
  7635                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
  7636     0CE3  019A               	clrf	26	;volatile
  7637                           
  7638                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
  7639     0CE4  019B               	clrf	27	;volatile
  7640                           
  7641                           ;mcc_generated_files/mcc.c: 91:     PMD6 = 0x00;
  7642     0CE5  019C               	clrf	28	;volatile
  7643                           
  7644                           ;mcc_generated_files/mcc.c: 93:     PMD7 = 0x00;
  7645     0CE6  019D               	clrf	29	;volatile
  7646     0CE7  0008               	return
  7647     0CE8                     __end_of_PMD_Initialize:
  7648                           
  7649                           	psect	text15
  7650     07C3                     __ptext15:	
  7651 ;; *************** function _PIN_MANAGER_Initialize *****************
  7652 ;; Defined at:
  7653 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;		None
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1    wreg      void 
  7660 ;; Registers used:
  7661 ;;		wreg, status,2
  7662 ;; Tracked objects:
  7663 ;;		On entry : 3F/3
  7664 ;;		On exit  : 3F/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7667 ;;      Params:         0       0       0       0       0       0       0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0
  7669 ;;      Temps:          0       0       0       0       0       0       0       0
  7670 ;;      Totals:         0       0       0       0       0       0       0       0
  7671 ;;Total ram usage:        0 bytes
  7672 ;; Hardware stack levels used: 1
  7673 ;; Hardware stack levels required when called: 4
  7674 ;; This function calls:
  7675 ;;		Nothing
  7676 ;; This function is called by:
  7677 ;;		_SYSTEM_Initialize
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           
  7681     07C3                     _PIN_MANAGER_Initialize:	
  7682                           ;psect for function _PIN_MANAGER_Initialize
  7683                           
  7684                           
  7685                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7686                           
  7687                           ;incstack = 0
  7688                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7689     07C3  0140               	movlb	0	; select bank0
  7690     07C4  0198               	clrf	24	;volatile
  7691                           
  7692                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7693     07C5  0199               	clrf	25	;volatile
  7694                           
  7695                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7696     07C6  019A               	clrf	26	;volatile
  7697                           
  7698                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x0B;
  7699     07C7  300B               	movlw	11
  7700     07C8  0092               	movwf	18	;volatile
  7701                           
  7702                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x50;
  7703     07C9  3050               	movlw	80
  7704     07CA  0093               	movwf	19	;volatile
  7705                           
  7706                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x03;
  7707     07CB  3003               	movlw	3
  7708     07CC  0094               	movwf	20	;volatile
  7709                           
  7710                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFC;
  7711     07CD  30FC               	movlw	252
  7712     07CE  017E               	movlb	62	; select bank62
  7713     07CF  00CE               	movwf	78	;volatile
  7714                           
  7715                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xA0;
  7716     07D0  30A0               	movlw	160
  7717     07D1  00C3               	movwf	67	;volatile
  7718                           
  7719                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
  7720     07D2  3037               	movlw	55
  7721     07D3  00B8               	movwf	56	;volatile
  7722                           
  7723                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  7724     07D4  01C4               	clrf	68	;volatile
  7725                           
  7726                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  7727     07D5  01B9               	clrf	57	;volatile
  7728                           
  7729                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  7730     07D6  01CF               	clrf	79	;volatile
  7731                           
  7732                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  7733     07D7  01BA               	clrf	58	;volatile
  7734                           
  7735                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  7736     07D8  01C5               	clrf	69	;volatile
  7737                           
  7738                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  7739     07D9  01D0               	clrf	80	;volatile
  7740                           
  7741                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  7742     07DA  3037               	movlw	55
  7743     07DB  00BB               	movwf	59	;volatile
  7744                           
  7745                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  7746     07DC  30F0               	movlw	240
  7747     07DD  00C6               	movwf	70	;volatile
  7748                           
  7749                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  7750     07DE  30FF               	movlw	255
  7751     07DF  00D1               	movwf	81	;volatile
  7752                           
  7753                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  7754     07E0  303F               	movlw	63
  7755     07E1  00BC               	movwf	60	;volatile
  7756                           
  7757                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
  7758     07E2  30F0               	movlw	240
  7759     07E3  00C7               	movwf	71	;volatile
  7760                           
  7761                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
  7762     07E4  30FF               	movlw	255
  7763     07E5  00D2               	movwf	82	;volatile
  7764                           
  7765                           ;mcc_generated_files/pin_manager.c: 110:     IOCCFbits.IOCCF0 = 0;
  7766     07E6  1055               	bcf	85,0	;volatile
  7767                           
  7768                           ;mcc_generated_files/pin_manager.c: 112:     IOCCFbits.IOCCF1 = 0;
  7769     07E7  10D5               	bcf	85,1	;volatile
  7770                           
  7771                           ;mcc_generated_files/pin_manager.c: 114:     IOCCNbits.IOCCN0 = 0;
  7772     07E8  1054               	bcf	84,0	;volatile
  7773                           
  7774                           ;mcc_generated_files/pin_manager.c: 116:     IOCCNbits.IOCCN1 = 0;
  7775     07E9  10D4               	bcf	84,1	;volatile
  7776                           
  7777                           ;mcc_generated_files/pin_manager.c: 118:     IOCCPbits.IOCCP0 = 1;
  7778     07EA  1453               	bsf	83,0	;volatile
  7779                           
  7780                           ;mcc_generated_files/pin_manager.c: 120:     IOCCPbits.IOCCP1 = 1;
  7781     07EB  14D3               	bsf	83,1	;volatile
  7782                           
  7783                           ;mcc_generated_files/pin_manager.c: 127:     PIE0bits.IOCIE = 1;
  7784     07EC  014E               	movlb	14	; select bank14
  7785     07ED  1616               	bsf	22,4	;volatile
  7786     07EE  0140               	movlb	0	; select bank0
  7787     07EF  1118               	bcf	24,2	;volatile
  7788     07F0  1218               	bcf	24,4	;volatile
  7789     07F1  1298               	bcf	24,5	;volatile
  7790     07F2  1299               	bcf	25,5	;volatile
  7791     07F3  1399               	bcf	25,7	;volatile
  7792                           
  7793                           ;mcc_generated_files/pin_manager.c: 135:     LATCbits.LATC0 = 0;
  7794     07F4  101A               	bcf	26,0	;volatile
  7795                           
  7796                           ;mcc_generated_files/pin_manager.c: 136:     LATCbits.LATC1 = 0;
  7797     07F5  109A               	bcf	26,1	;volatile
  7798                           
  7799                           ;mcc_generated_files/pin_manager.c: 137:     LATCbits.LATC4 = 0;
  7800     07F6  121A               	bcf	26,4	;volatile
  7801                           
  7802                           ;mcc_generated_files/pin_manager.c: 138:     LATCbits.LATC6 = 0;
  7803     07F7  131A               	bcf	26,6	;volatile
  7804                           
  7805                           ;mcc_generated_files/pin_manager.c: 139:     LATCbits.LATC3 = 0;
  7806     07F8  119A               	bcf	26,3	;volatile
  7807                           
  7808                           ;mcc_generated_files/pin_manager.c: 140:     LATCbits.LATC7 = 0;
  7809     07F9  139A               	bcf	26,7	;volatile
  7810     07FA  0008               	return
  7811     07FB                     __end_of_PIN_MANAGER_Initialize:
  7812                           
  7813                           	psect	text16
  7814     0CCB                     __ptext16:	
  7815 ;; *************** function _OSCILLATOR_Initialize *****************
  7816 ;; Defined at:
  7817 ;;		line 62 in file "mcc_generated_files/mcc.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;		None
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;		None
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  1    wreg      void 
  7824 ;; Registers used:
  7825 ;;		wreg, status,2
  7826 ;; Tracked objects:
  7827 ;;		On entry : 3F/0
  7828 ;;		On exit  : 3F/11
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7831 ;;      Params:         0       0       0       0       0       0       0       0
  7832 ;;      Locals:         0       0       0       0       0       0       0       0
  7833 ;;      Temps:          0       0       0       0       0       0       0       0
  7834 ;;      Totals:         0       0       0       0       0       0       0       0
  7835 ;;Total ram usage:        0 bytes
  7836 ;; Hardware stack levels used: 1
  7837 ;; Hardware stack levels required when called: 4
  7838 ;; This function calls:
  7839 ;;		Nothing
  7840 ;; This function is called by:
  7841 ;;		_SYSTEM_Initialize
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845     0CCB                     _OSCILLATOR_Initialize:	
  7846                           ;psect for function _OSCILLATOR_Initialize
  7847                           
  7848                           
  7849                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
  7850                           
  7851                           ;incstack = 0
  7852                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7853     0CCB  3060               	movlw	96
  7854     0CCC  0151               	movlb	17	; select bank17
  7855     0CCD  008D               	movwf	13	;volatile
  7856                           
  7857                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
  7858     0CCE  018F               	clrf	15	;volatile
  7859                           
  7860                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
  7861     0CCF  0191               	clrf	17	;volatile
  7862                           
  7863                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x02;
  7864     0CD0  3002               	movlw	2
  7865     0CD1  0093               	movwf	19	;volatile
  7866                           
  7867                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  7868     0CD2  0192               	clrf	18	;volatile
  7869     0CD3  0008               	return
  7870     0CD4                     __end_of_OSCILLATOR_Initialize:
  7871                           
  7872                           	psect	text17
  7873     06F9                     __ptext17:	
  7874 ;; *************** function _I2C1_Initialize *****************
  7875 ;; Defined at:
  7876 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;		None
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;  bits            1    1[COMMON] unsigned char 
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  1    wreg      void 
  7883 ;; Registers used:
  7884 ;;		wreg, status,2, status,0
  7885 ;; Tracked objects:
  7886 ;;		On entry : B3F/F
  7887 ;;		On exit  : 3F/3
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7890 ;;      Params:         0       0       0       0       0       0       0       0
  7891 ;;      Locals:         1       0       0       0       0       0       0       0
  7892 ;;      Temps:          0       0       0       0       0       0       0       0
  7893 ;;      Totals:         1       0       0       0       0       0       0       0
  7894 ;;Total ram usage:        1 bytes
  7895 ;; Hardware stack levels used: 1
  7896 ;; Hardware stack levels required when called: 4
  7897 ;; This function calls:
  7898 ;;		Nothing
  7899 ;; This function is called by:
  7900 ;;		_SYSTEM_Initialize
  7901 ;; This function uses a non-reentrant model
  7902 ;;
  7903                           
  7904     06F9                     _I2C1_Initialize:	
  7905                           ;psect for function _I2C1_Initialize
  7906                           
  7907                           
  7908                           ;mcc_generated_files/i2c1_master.c: 170:     RB6PPS = 0;
  7909                           
  7910                           ;incstack = 0
  7911                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0]
  7912     06F9  017E               	movlb	62	; select bank62
  7913     06FA  019E               	clrf	30	;volatile
  7914                           
  7915                           ;mcc_generated_files/i2c1_master.c: 171:     TRISB = 0;
  7916     06FB  0140               	movlb	0	; select bank0
  7917     06FC  0193               	clrf	19	;volatile
  7918                           
  7919                           ;mcc_generated_files/i2c1_master.c: 172:     LATBbits.LATB6 = 1;
  7920     06FD  1719               	bsf	25,6	;volatile
  7921                           
  7922                           ;mcc_generated_files/i2c1_master.c: 173:     if (PORTBbits.RB6 == 0)
  7923     06FE  1B0D               	btfsc	13,6	;volatile
  7924     06FF  2F25               	goto	l3963
  7925                           
  7926                           ;mcc_generated_files/i2c1_master.c: 174:     {;mcc_generated_files/i2c1_master.c: 175:  
      +                                 RB4PPS = 0;
  7927     0700  017E               	movlb	62	; select bank62
  7928     0701  019C               	clrf	28	;volatile
  7929                           
  7930                           ;mcc_generated_files/i2c1_master.c: 176:         TRISB = 0x40;
  7931     0702  3040               	movlw	64
  7932     0703  0140               	movlb	0	; select bank0
  7933     0704  0093               	movwf	19	;volatile
  7934                           
  7935                           ;mcc_generated_files/i2c1_master.c: 177:         for (char bits=9; bits--;)
  7936     0705  3009               	movlw	9
  7937     0706  00F1               	movwf	I2C1_Initialize@bits
  7938     0707                     l3953:
  7939     0707  3001               	movlw	1
  7940     0708  02F1               	subwf	I2C1_Initialize@bits,f
  7941     0709  0A71               	incf	I2C1_Initialize@bits,w
  7942     070A  1903               	btfsc	3,2
  7943     070B  2F1D               	goto	l3955
  7944                           
  7945                           ;mcc_generated_files/i2c1_master.c: 178:         {;mcc_generated_files/i2c1_master.c: 17
      +                          9:             LATBbits.LATB4 = 0;
  7946     070C  1219               	bcf	25,4	;volatile
  7947                           
  7948                           ;mcc_generated_files/i2c1_master.c: 180:             _delay(6);
  7949     070D  3200               	nop2	;2 cycle nop
  7950     070E  3200               	nop2	;2 cycle nop
  7951     070F  3200               	nop2	;2 cycle nop
  7952                           
  7953                           ;mcc_generated_files/i2c1_master.c: 181:             LATBbits.LATB4 = 1;
  7954     0710  0140               	movlb	0	; select bank0
  7955     0711  1619               	bsf	25,4	;volatile
  7956                           
  7957                           ;mcc_generated_files/i2c1_master.c: 182:             _delay(6);
  7958     0712  3200               	nop2	;2 cycle nop
  7959     0713  3200               	nop2	;2 cycle nop
  7960     0714  3200               	nop2	;2 cycle nop
  7961                           
  7962                           ;mcc_generated_files/i2c1_master.c: 183:             LATBbits.LATB4 = 0;
  7963     0715  0140               	movlb	0	; select bank0
  7964     0716  1219               	bcf	25,4	;volatile
  7965                           
  7966                           ;mcc_generated_files/i2c1_master.c: 184:             _delay(6);
  7967     0717  3200               	nop2	;2 cycle nop
  7968     0718  3200               	nop2	;2 cycle nop
  7969     0719  3200               	nop2	;2 cycle nop
  7970                           
  7971                           ;mcc_generated_files/i2c1_master.c: 185:             if (PORTBbits.RB6 == 1)
  7972     071A  0140               	movlb	0	; select bank0
  7973     071B  1F0D               	btfss	13,6	;volatile
  7974     071C  2F07               	goto	l3953
  7975     071D                     l3955:
  7976                           
  7977                           ;mcc_generated_files/i2c1_master.c: 188:         TRISB = 0;
  7978     071D  0193               	clrf	19	;volatile
  7979                           
  7980                           ;mcc_generated_files/i2c1_master.c: 189:         LATB = 0;
  7981     071E  0199               	clrf	25	;volatile
  7982                           
  7983                           ;mcc_generated_files/i2c1_master.c: 190:         LATBbits.LATB4 = 1;
  7984     071F  1619               	bsf	25,4	;volatile
  7985                           
  7986                           ;mcc_generated_files/i2c1_master.c: 191:         _delay(6);
  7987     0720  3200               	nop2	;2 cycle nop
  7988     0721  3200               	nop2	;2 cycle nop
  7989     0722  3200               	nop2	;2 cycle nop
  7990                           
  7991                           ;mcc_generated_files/i2c1_master.c: 192:         LATBbits.LATB6 = 1;
  7992     0723  0140               	movlb	0	; select bank0
  7993     0724  1719               	bsf	25,6	;volatile
  7994     0725                     l3963:
  7995                           
  7996                           ;mcc_generated_files/i2c1_master.c: 194:     TRISB = 0x50;
  7997     0725  3050               	movlw	80
  7998     0726  0093               	movwf	19	;volatile
  7999                           
  8000                           ;mcc_generated_files/i2c1_master.c: 195:     LATB = 0;
  8001     0727  0199               	clrf	25	;volatile
  8002                           
  8003                           ;mcc_generated_files/i2c1_master.c: 197:     SSP1CLKPPS = 0x0C;
  8004     0728  300C               	movlw	12
  8005     0729  017D               	movlb	61	; select bank61
  8006     072A  00C5               	movwf	69	;volatile
  8007                           
  8008                           ;mcc_generated_files/i2c1_master.c: 198:     RB6PPS = 0x14;
  8009     072B  3014               	movlw	20
  8010     072C  017E               	movlb	62	; select bank62
  8011     072D  009E               	movwf	30	;volatile
  8012                           
  8013                           ;mcc_generated_files/i2c1_master.c: 199:     RC4PPS = 0x0D;
  8014     072E  300D               	movlw	13
  8015     072F  00A4               	movwf	36	;volatile
  8016                           
  8017                           ;mcc_generated_files/i2c1_master.c: 200:     RB4PPS = 0x13;
  8018     0730  3013               	movlw	19
  8019     0731  009C               	movwf	28	;volatile
  8020                           
  8021                           ;mcc_generated_files/i2c1_master.c: 201:     SSP1DATPPS = 0x0E;
  8022     0732  300E               	movlw	14
  8023     0733  017D               	movlb	61	; select bank61
  8024     0734  00C6               	movwf	70	;volatile
  8025                           
  8026                           ;mcc_generated_files/i2c1_master.c: 203:     SSP1STAT = 0x00;
  8027     0735  0143               	movlb	3	; select bank3
  8028     0736  018F               	clrf	15	;volatile
  8029                           
  8030                           ;mcc_generated_files/i2c1_master.c: 204:     SSP1CON1 = 0x08;
  8031     0737  3008               	movlw	8
  8032     0738  0090               	movwf	16	;volatile
  8033                           
  8034                           ;mcc_generated_files/i2c1_master.c: 205:     SSP1CON2 = 0x00;
  8035     0739  0191               	clrf	17	;volatile
  8036                           
  8037                           ;mcc_generated_files/i2c1_master.c: 206:     SSP1ADD = 0x09;
  8038     073A  3009               	movlw	9
  8039     073B  008D               	movwf	13	;volatile
  8040                           
  8041                           ;mcc_generated_files/i2c1_master.c: 207:     SSP1CON1bits.SSPEN = 0;
  8042     073C  1290               	bcf	16,5	;volatile
  8043     073D  0008               	return
  8044     073E                     __end_of_I2C1_Initialize:
  8045                           
  8046                           	psect	text18
  8047     05A7                     __ptext18:	
  8048 ;; *************** function _DateDisplay *****************
  8049 ;; Defined at:
  8050 ;;		line 298 in file "main.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;		None
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;		None
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  1    wreg      void 
  8057 ;; Registers used:
  8058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 3F/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8064 ;;      Params:         0       0       0       0       0       0       0       0
  8065 ;;      Locals:         0       0       0       0       0       0       0       0
  8066 ;;      Temps:          0       1       0       0       0       0       0       0
  8067 ;;      Totals:         0       1       0       0       0       0       0       0
  8068 ;;Total ram usage:        1 bytes
  8069 ;; Hardware stack levels used: 1
  8070 ;; Hardware stack levels required when called: 10
  8071 ;; This function calls:
  8072 ;;		_BCD2Bin
  8073 ;;		_I2CRead
  8074 ;;		_Loader
  8075 ;;		_Settings
  8076 ;;		_SplitLoad
  8077 ;; This function is called by:
  8078 ;;		_main
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082     05A7                     _DateDisplay:	
  8083                           ;psect for function _DateDisplay
  8084                           
  8085                           
  8086                           ;main.c: 300:     GoDate = 0;
  8087                           
  8088                           ;incstack = 0
  8089                           ; Regs used in _DateDisplay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8090     05A7  127C               	bcf	_GoDate/(0+8),_GoDate& (0+7)
  8091                           
  8092                           ;main.c: 301:     (INTCONbits.GIE = 0);
  8093     05A8  138B               	bcf	11,7	;volatile
  8094                           
  8095                           ;main.c: 302:     BCD2Bin(I2CRead(0x04));
  8096     05A9  3004               	movlw	4
  8097     05AA  318F  2705  3185   	fcall	_I2CRead
  8098     05AD  318D  2581  3185   	fcall	_BCD2Bin
  8099                           
  8100                           ;main.c: 303:     SplitLoad(3);
  8101     05B0  3003               	movlw	3
  8102     05B1  318D  2547  3185   	fcall	_SplitLoad
  8103                           
  8104                           ;main.c: 304:     BCD2Bin(I2CRead(0x05));
  8105     05B4  3005               	movlw	5
  8106     05B5  318F  2705  3185   	fcall	_I2CRead
  8107     05B8  318D  2581  3185   	fcall	_BCD2Bin
  8108                           
  8109                           ;main.c: 305:     SplitLoad(0);
  8110     05BB  3000               	movlw	0
  8111     05BC  318D  2547  3185   	fcall	_SplitLoad
  8112                           
  8113                           ;main.c: 306:     BCD2Bin(I2CRead(0x06));
  8114     05BF  3006               	movlw	6
  8115     05C0  318F  2705  3185   	fcall	_I2CRead
  8116     05C3  318D  2581  3185   	fcall	_BCD2Bin
  8117                           
  8118                           ;main.c: 307:     SplitLoad(6);
  8119     05C6  3006               	movlw	6
  8120     05C7  318D  2547  3185   	fcall	_SplitLoad
  8121                           
  8122                           ;main.c: 308:     DisplayBuf[2] = 10;
  8123     05CA  300A               	movlw	10
  8124     05CB  00B2               	movwf	_DisplayBuf+2
  8125                           
  8126                           ;main.c: 309:     DisplayBuf[5] = 10;
  8127     05CC  300A               	movlw	10
  8128     05CD  00B5               	movwf	_DisplayBuf+5
  8129                           
  8130                           ;main.c: 310:     if (DateFormat == 1)
  8131     05CE  0352               	decf	_DateFormat,w
  8132     05CF  1D03               	btfss	3,2
  8133     05D0  2DDD               	goto	l1088
  8134                           
  8135                           ;main.c: 311:     {;main.c: 312:         Temp = DisplayBuf[0];
  8136     05D1  0830               	movf	_DisplayBuf,w
  8137     05D2  00C7               	movwf	_Temp
  8138                           
  8139                           ;main.c: 313:         Pos = DisplayBuf[1];
  8140     05D3  0831               	movf	_DisplayBuf+1,w
  8141     05D4  00CB               	movwf	_Pos
  8142                           
  8143                           ;main.c: 314:         DisplayBuf[0] = DisplayBuf[3];
  8144     05D5  0833               	movf	_DisplayBuf+3,w
  8145     05D6  00B0               	movwf	_DisplayBuf
  8146                           
  8147                           ;main.c: 315:         DisplayBuf[1] = DisplayBuf[4];
  8148     05D7  0834               	movf	_DisplayBuf+4,w
  8149     05D8  00B1               	movwf	_DisplayBuf+1
  8150                           
  8151                           ;main.c: 316:         DisplayBuf[3] = Temp;
  8152     05D9  0847               	movf	_Temp,w
  8153     05DA  00B3               	movwf	_DisplayBuf+3
  8154                           
  8155                           ;main.c: 317:         DisplayBuf[4] = Pos;
  8156     05DB  084B               	movf	_Pos,w
  8157     05DC  00B4               	movwf	_DisplayBuf+4
  8158     05DD                     l1088:
  8159     05DD  188E               	btfsc	14,1	;volatile
  8160     05DE  2DDD               	goto	l1088
  8161                           
  8162                           ;main.c: 320:     Loader();
  8163     05DF  318F  27C8  3185   	fcall	_Loader
  8164                           
  8165                           ;main.c: 321:     _delay(16000);
  8166     05E2  3015               	movlw	21
  8167     05E3  0140               	movlb	0	; select bank0
  8168     05E4  00EA               	movwf	??_DateDisplay
  8169     05E5  30C6               	movlw	198
  8170     05E6                     u4687:
  8171     05E6  0B89               	decfsz	9,f
  8172     05E7  2DE6               	goto	u4687
  8173     05E8  0BEA               	decfsz	??_DateDisplay,f
  8174     05E9  2DE6               	goto	u4687
  8175     05EA  0000               	nop
  8176                           
  8177                           ;main.c: 322:     for (Pos=121; Pos--;)
  8178     05EB  3079               	movlw	121
  8179     05EC  0140               	movlb	0	; select bank0
  8180     05ED  00CB               	movwf	_Pos
  8181     05EE                     l5851:
  8182     05EE  3001               	movlw	1
  8183     05EF  0140               	movlb	0	; select bank0
  8184     05F0  02CB               	subwf	_Pos,f
  8185     05F1  0A4B               	incf	_Pos,w
  8186     05F2  1903               	btfsc	3,2
  8187     05F3  0008               	return
  8188                           
  8189                           ;main.c: 323:     {;main.c: 324:         if (PORTCbits.RC1)
  8190     05F4  1C8E               	btfss	14,1	;volatile
  8191     05F5  2DF9               	goto	l5849
  8192                           
  8193                           ;main.c: 325:             Settings();
  8194     05F6  3181  2195  3185   	fcall	_Settings
  8195     05F9                     l5849:
  8196                           
  8197                           ;main.c: 326:         _delay(16000);
  8198     05F9  3015               	movlw	21
  8199     05FA  0140               	movlb	0	; select bank0
  8200     05FB  00EA               	movwf	??_DateDisplay
  8201     05FC  30C6               	movlw	198
  8202     05FD                     u4697:
  8203     05FD  0B89               	decfsz	9,f
  8204     05FE  2DFD               	goto	u4697
  8205     05FF  0BEA               	decfsz	??_DateDisplay,f
  8206     0600  2DFD               	goto	u4697
  8207     0601  0000               	nop
  8208     0602  2DEE               	goto	l5851
  8209     0603                     __end_of_DateDisplay:
  8210                           
  8211                           	psect	text19
  8212     0195                     __ptext19:	
  8213 ;; *************** function _Settings *****************
  8214 ;; Defined at:
  8215 ;;		line 393 in file "main.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;		None
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;		None
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  1    wreg      void 
  8222 ;; Registers used:
  8223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8224 ;; Tracked objects:
  8225 ;;		On entry : 3F/0
  8226 ;;		On exit  : 2F/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8229 ;;      Params:         0       0       0       0       0       0       0       0
  8230 ;;      Locals:         0       0       0       0       0       0       0       0
  8231 ;;      Temps:          0       2       0       0       0       0       0       0
  8232 ;;      Totals:         0       2       0       0       0       0       0       0
  8233 ;;Total ram usage:        2 bytes
  8234 ;; Hardware stack levels used: 1
  8235 ;; Hardware stack levels required when called: 9
  8236 ;; This function calls:
  8237 ;;		_BCDSetInc
  8238 ;;		_EEPROM_Write
  8239 ;;		_EmptyTubes
  8240 ;;		_Loader
  8241 ;;		_OtherSetInc
  8242 ;;		_TubeValuePicker
  8243 ;;		___wmul
  8244 ;; This function is called by:
  8245 ;;		_DateDisplay
  8246 ;; This function uses a non-reentrant model
  8247 ;;
  8248                           
  8249     0195                     _Settings:	
  8250                           ;psect for function _Settings
  8251                           
  8252                           
  8253                           ;main.c: 395:     (INTCONbits.GIE = 0);
  8254                           
  8255                           ;incstack = 0
  8256                           ; Regs used in _Settings: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8257     0195  138B               	bcf	11,7	;volatile
  8258                           
  8259                           ;main.c: 396:     EmptyTubes();
  8260     0196  318D  2572  3181   	fcall	_EmptyTubes
  8261                           
  8262                           ;main.c: 397:     DisplayBuf[4] = 1;
  8263     0199  01B4               	clrf	_DisplayBuf+4
  8264     019A  0AB4               	incf	_DisplayBuf+4,f
  8265                           
  8266                           ;main.c: 398:     DisplayBuf[5] = 0x4C;
  8267     019B  304C               	movlw	76
  8268     019C  00B5               	movwf	_DisplayBuf+5
  8269                           
  8270                           ;main.c: 399:     DisplayBuf[6] = 0;
  8271     019D  01B6               	clrf	_DisplayBuf+6
  8272                           
  8273                           ;main.c: 400:     DisplayBuf[7] = 5;
  8274     019E  3005               	movlw	5
  8275     019F  00B7               	movwf	_DisplayBuf+7
  8276                           
  8277                           ;main.c: 401:     Loader();
  8278     01A0  318F  27C8  3181   	fcall	_Loader
  8279     01A3                     l1126:	
  8280                           ;main.c: 402:     while (PORTCbits.RC1){}
  8281                           
  8282     01A3  188E               	btfsc	14,1	;volatile
  8283     01A4  29A3               	goto	l1126
  8284                           
  8285                           ;main.c: 403:     _delay(16000);
  8286     01A5  3015               	movlw	21
  8287     01A6  0140               	movlb	0	; select bank0
  8288     01A7  00E8               	movwf	??_Settings
  8289     01A8  30C6               	movlw	198
  8290     01A9                     u4707:
  8291     01A9  0B89               	decfsz	9,f
  8292     01AA  29A9               	goto	u4707
  8293     01AB  0BE8               	decfsz	??_Settings,f
  8294     01AC  29A9               	goto	u4707
  8295     01AD  0000               	nop
  8296                           
  8297                           ;main.c: 404:     EmptyTubes();
  8298     01AE  318D  2572  3181   	fcall	_EmptyTubes
  8299                           
  8300                           ;main.c: 405:     DisplayBuf[0] = 0;
  8301     01B1  01B0               	clrf	_DisplayBuf
  8302                           
  8303                           ;main.c: 406:     DisplayBuf[1] = 1;
  8304     01B2  01B1               	clrf	_DisplayBuf+1
  8305     01B3  0AB1               	incf	_DisplayBuf+1,f
  8306                           
  8307                           ;main.c: 407:     BCDSetInc(0x23, 0, 0x02);
  8308     01B4  01E1               	clrf	BCDSetInc@min
  8309     01B5  3002               	movlw	2
  8310     01B6  00E2               	movwf	BCDSetInc@i2creg
  8311     01B7  3023               	movlw	35
  8312     01B8  3183  23CD  3181   	fcall	_BCDSetInc
  8313                           
  8314                           ;main.c: 408:     DisplayBuf[1]++;
  8315     01BB  3001               	movlw	1
  8316     01BC  0140               	movlb	0	; select bank0
  8317     01BD  00E8               	movwf	??_Settings
  8318     01BE  0868               	movf	??_Settings,w
  8319     01BF  07B1               	addwf	_DisplayBuf+1,f
  8320                           
  8321                           ;main.c: 409:     BCDSetInc(0x59, 0, 0x01);
  8322     01C0  01E1               	clrf	BCDSetInc@min
  8323     01C1  01E2               	clrf	BCDSetInc@i2creg
  8324     01C2  0AE2               	incf	BCDSetInc@i2creg,f
  8325     01C3  3059               	movlw	89
  8326     01C4  3183  23CD  3181   	fcall	_BCDSetInc
  8327                           
  8328                           ;main.c: 410:     DisplayBuf[1]++;
  8329     01C7  3001               	movlw	1
  8330     01C8  0140               	movlb	0	; select bank0
  8331     01C9  00E8               	movwf	??_Settings
  8332     01CA  0868               	movf	??_Settings,w
  8333     01CB  07B1               	addwf	_DisplayBuf+1,f
  8334                           
  8335                           ;main.c: 411:     OtherSetInc(1, 0, &HourTypeStore, &HourType);
  8336     01CC  01E0               	clrf	OtherSetInc@min
  8337     01CD  307A               	movlw	(low _HourTypeStore)& (0+255)
  8338     01CE  00E1               	movwf	OtherSetInc@eeaddr
  8339     01CF  3050               	movlw	(low (_HourType| 0))& (0+255)
  8340     01D0  00E2               	movwf	OtherSetInc@value
  8341     01D1  3001               	movlw	1
  8342     01D2  3183  233C  3181   	fcall	_OtherSetInc
  8343                           
  8344                           ;main.c: 412:     DisplayBuf[1]++;
  8345     01D5  3001               	movlw	1
  8346     01D6  0140               	movlb	0	; select bank0
  8347     01D7  00E8               	movwf	??_Settings
  8348     01D8  0868               	movf	??_Settings,w
  8349     01D9  07B1               	addwf	_DisplayBuf+1,f
  8350                           
  8351                           ;main.c: 413:     BCDSetInc(0x31, 0x1, 0x04);
  8352     01DA  01E1               	clrf	BCDSetInc@min
  8353     01DB  0AE1               	incf	BCDSetInc@min,f
  8354     01DC  3004               	movlw	4
  8355     01DD  00E2               	movwf	BCDSetInc@i2creg
  8356     01DE  3031               	movlw	49
  8357     01DF  3183  23CD  3181   	fcall	_BCDSetInc
  8358                           
  8359                           ;main.c: 414:     DisplayBuf[1]++;
  8360     01E2  3001               	movlw	1
  8361     01E3  0140               	movlb	0	; select bank0
  8362     01E4  00E8               	movwf	??_Settings
  8363     01E5  0868               	movf	??_Settings,w
  8364     01E6  07B1               	addwf	_DisplayBuf+1,f
  8365                           
  8366                           ;main.c: 415:     BCDSetInc(0x12, 0x1, 0x05);
  8367     01E7  01E1               	clrf	BCDSetInc@min
  8368     01E8  0AE1               	incf	BCDSetInc@min,f
  8369     01E9  3005               	movlw	5
  8370     01EA  00E2               	movwf	BCDSetInc@i2creg
  8371     01EB  3012               	movlw	18
  8372     01EC  3183  23CD  3181   	fcall	_BCDSetInc
  8373                           
  8374                           ;main.c: 416:     DisplayBuf[1]++;
  8375     01EF  3001               	movlw	1
  8376     01F0  0140               	movlb	0	; select bank0
  8377     01F1  00E8               	movwf	??_Settings
  8378     01F2  0868               	movf	??_Settings,w
  8379     01F3  07B1               	addwf	_DisplayBuf+1,f
  8380                           
  8381                           ;main.c: 417:     BCDSetInc(0x99, 0, 0x05);
  8382     01F4  01E1               	clrf	BCDSetInc@min
  8383     01F5  3005               	movlw	5
  8384     01F6  00E2               	movwf	BCDSetInc@i2creg
  8385     01F7  3099               	movlw	153
  8386     01F8  3183  23CD  3181   	fcall	_BCDSetInc
  8387                           
  8388                           ;main.c: 418:     DisplayBuf[1]++;
  8389     01FB  3001               	movlw	1
  8390     01FC  0140               	movlb	0	; select bank0
  8391     01FD  00E8               	movwf	??_Settings
  8392     01FE  0868               	movf	??_Settings,w
  8393     01FF  07B1               	addwf	_DisplayBuf+1,f
  8394                           
  8395                           ;main.c: 419:     OtherSetInc(1, 0, &DateFormatStore, &DateFormat);
  8396     0200  01E0               	clrf	OtherSetInc@min
  8397     0201  307F               	movlw	(low _DateFormatStore)& (0+255)
  8398     0202  00E1               	movwf	OtherSetInc@eeaddr
  8399     0203  3052               	movlw	(low (_DateFormat| 0))& (0+255)
  8400     0204  00E2               	movwf	OtherSetInc@value
  8401     0205  3001               	movlw	1
  8402     0206  3183  233C  3181   	fcall	_OtherSetInc
  8403                           
  8404                           ;main.c: 420:     DisplayBuf[1]++;
  8405     0209  3001               	movlw	1
  8406     020A  0140               	movlb	0	; select bank0
  8407     020B  00E8               	movwf	??_Settings
  8408     020C  0868               	movf	??_Settings,w
  8409     020D  07B1               	addwf	_DisplayBuf+1,f
  8410                           
  8411                           ;main.c: 421:     BCDSetInc(0x23, 0, 0x14);
  8412     020E  01E1               	clrf	BCDSetInc@min
  8413     020F  3014               	movlw	20
  8414     0210  00E2               	movwf	BCDSetInc@i2creg
  8415     0211  3023               	movlw	35
  8416     0212  3183  23CD  3181   	fcall	_BCDSetInc
  8417                           
  8418                           ;main.c: 422:     EEPROM_Write(&BlankStartStore, BlankStart);
  8419     0215  0140               	movlb	0	; select bank0
  8420     0216  0849               	movf	_BlankStart,w
  8421     0217  00F1               	movwf	EEPROM_Write@data
  8422     0218  3079               	movlw	(low _BlankStartStore)& (0+255)
  8423     0219  318E  2685  3181   	fcall	_EEPROM_Write
  8424                           
  8425                           ;main.c: 423:     DisplayBuf[1]++;
  8426     021C  3001               	movlw	1
  8427     021D  0140               	movlb	0	; select bank0
  8428     021E  00E8               	movwf	??_Settings
  8429     021F  0868               	movf	??_Settings,w
  8430     0220  07B1               	addwf	_DisplayBuf+1,f
  8431                           
  8432                           ;main.c: 424:     BCDSetInc(0x23, 0, 0x15);
  8433     0221  01E1               	clrf	BCDSetInc@min
  8434     0222  3015               	movlw	21
  8435     0223  00E2               	movwf	BCDSetInc@i2creg
  8436     0224  3023               	movlw	35
  8437     0225  3183  23CD  3181   	fcall	_BCDSetInc
  8438                           
  8439                           ;main.c: 425:     EEPROM_Write(&BlankEndStore, BlankEnd);
  8440     0228  0140               	movlb	0	; select bank0
  8441     0229  0848               	movf	_BlankEnd,w
  8442     022A  00F1               	movwf	EEPROM_Write@data
  8443     022B  3078               	movlw	(low _BlankEndStore)& (0+255)
  8444     022C  318E  2685  3181   	fcall	_EEPROM_Write
  8445                           
  8446                           ;main.c: 426:     DisplayBuf[0]++;
  8447     022F  3001               	movlw	1
  8448     0230  0140               	movlb	0	; select bank0
  8449     0231  00E8               	movwf	??_Settings
  8450     0232  0868               	movf	??_Settings,w
  8451     0233  07B0               	addwf	_DisplayBuf,f
  8452                           
  8453                           ;main.c: 427:     DisplayBuf[1] = 0;
  8454     0234  01B1               	clrf	_DisplayBuf+1
  8455                           
  8456                           ;main.c: 428:     DisplayBuf[2] = 0x52;
  8457     0235  3052               	movlw	82
  8458     0236  00B2               	movwf	_DisplayBuf+2
  8459                           
  8460                           ;main.c: 429:     if (TimeFast == 0)
  8461     0237  084A               	movf	_TimeFast,w
  8462     0238  1D03               	btfss	3,2
  8463     0239  2A3C               	goto	l5675
  8464                           
  8465                           ;main.c: 430:         DisplayBuf[2] = 10;
  8466     023A  300A               	movlw	10
  8467     023B  00B2               	movwf	_DisplayBuf+2
  8468     023C                     l5675:
  8469                           
  8470                           ;main.c: 431:     TimeSet = 1;
  8471     023C  14FC               	bsf	_TimeSet/(0+8),_TimeSet& (0+7)
  8472                           
  8473                           ;main.c: 432:     DisplayBuf[3] = 0;
  8474     023D  01B3               	clrf	_DisplayBuf+3
  8475                           
  8476                           ;main.c: 433:     DisplayBuf[4] = 0;
  8477     023E  01B4               	clrf	_DisplayBuf+4
  8478                           
  8479                           ;main.c: 434:     DisplayBuf[5] = 0;
  8480     023F  01B5               	clrf	_DisplayBuf+5
  8481                           
  8482                           ;main.c: 435:     DisplayBuf[6] = 0;
  8483     0240  01B6               	clrf	_DisplayBuf+6
  8484                           
  8485                           ;main.c: 436:     DisplayBuf[7] = 0;
  8486     0241  01B7               	clrf	_DisplayBuf+7
  8487                           
  8488                           ;main.c: 437:     TubeValuePicker(3);
  8489     0242  3003               	movlw	3
  8490     0243  3186  2603  3181   	fcall	_TubeValuePicker
  8491                           
  8492                           ;main.c: 438:     TimeSet = 0;
  8493     0246  10FC               	bcf	_TimeSet/(0+8),_TimeSet& (0+7)
  8494                           
  8495                           ;main.c: 439:     if (DisplayBuf[2] == 0x52)
  8496     0247  3052               	movlw	82
  8497     0248  0632               	xorwf	_DisplayBuf+2,w
  8498     0249  1D03               	btfss	3,2
  8499     024A  2A4E               	goto	l5695
  8500                           
  8501                           ;main.c: 440:         TimeFast = 1;
  8502     024B  01CA               	clrf	_TimeFast
  8503     024C  0ACA               	incf	_TimeFast,f
  8504     024D  2A4F               	goto	l1131
  8505     024E                     l5695:
  8506                           
  8507                           ;main.c: 442:         TimeFast = 0;
  8508     024E  01CA               	clrf	_TimeFast
  8509     024F                     l1131:
  8510                           
  8511                           ;main.c: 443:     TimeAdj = 0;
  8512     024F  01BA               	clrf	_TimeAdj
  8513     0250  01BB               	clrf	_TimeAdj+1
  8514                           
  8515                           ;main.c: 444:     for (Pos=3; Pos<8; Pos++)
  8516     0251  3003               	movlw	3
  8517     0252  00CB               	movwf	_Pos
  8518                           
  8519                           ;main.c: 450:             break;
  8520     0253  2A58               	goto	l5699
  8521     0254                     l5711:
  8522                           
  8523                           ;main.c: 452:     }
  8524     0254  3001               	movlw	1
  8525     0255  00E8               	movwf	??_Settings
  8526     0256  0868               	movf	??_Settings,w
  8527     0257  07CB               	addwf	_Pos,f
  8528     0258                     l5699:
  8529     0258  3008               	movlw	8
  8530     0259  024B               	subwf	_Pos,w
  8531     025A  1803               	btfsc	3,0
  8532     025B  2A83               	goto	l5715
  8533                           
  8534                           ;main.c: 445:     {;main.c: 446:         TimeAdj = (TimeAdj * 10) + DisplayBuf[Pos];
  8535     025C  084B               	movf	_Pos,w
  8536     025D  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
  8537     025E  0086               	movwf	6
  8538     025F  0187               	clrf	7
  8539     0260  0801               	movf	1,w
  8540     0261  00E8               	movwf	??_Settings
  8541     0262  01E9               	clrf	??_Settings+1
  8542     0263  083B               	movf	_TimeAdj+1,w
  8543     0264  00F2               	movwf	___wmul@multiplier+1
  8544     0265  083A               	movf	_TimeAdj,w
  8545     0266  00F1               	movwf	___wmul@multiplier
  8546     0267  300A               	movlw	10
  8547     0268  00F3               	movwf	___wmul@multiplicand
  8548     0269  3000               	movlw	0
  8549     026A  00F4               	movwf	___wmul@multiplicand+1
  8550     026B  318E  264E  3181   	fcall	___wmul
  8551     026E  0868               	movf	??_Settings,w
  8552     026F  0771               	addwf	?___wmul,w
  8553     0270  00BA               	movwf	_TimeAdj
  8554     0271  0869               	movf	??_Settings+1,w
  8555     0272  3D72               	addwfc	?___wmul+1,w
  8556     0273  00BB               	movwf	_TimeAdj+1
  8557                           
  8558                           ;main.c: 447:         if (Pos == 6 && TimeAdj > 6554)
  8559     0274  3006               	movlw	6
  8560     0275  064B               	xorwf	_Pos,w
  8561     0276  1D03               	btfss	3,2
  8562     0277  2A54               	goto	l5711
  8563     0278  3019               	movlw	25
  8564     0279  023B               	subwf	_TimeAdj+1,w
  8565     027A  309B               	movlw	155
  8566     027B  1903               	skipnz
  8567     027C  023A               	subwf	_TimeAdj,w
  8568     027D  1C03               	skipc
  8569     027E  2A54               	goto	l5711
  8570                           
  8571                           ;main.c: 448:         {;main.c: 449:             TimeAdj = 0xffff;
  8572     027F  30FF               	movlw	255
  8573     0280  00BA               	movwf	_TimeAdj
  8574     0281  30FF               	movlw	255
  8575     0282  00BB               	movwf	_TimeAdj+1
  8576     0283                     l5715:
  8577                           
  8578                           ;main.c: 453:     EEPROM_Write(&TimeFastStore, TimeFast);
  8579     0283  084A               	movf	_TimeFast,w
  8580     0284  00F1               	movwf	EEPROM_Write@data
  8581     0285  307C               	movlw	(low _TimeFastStore)& (0+255)
  8582     0286  318E  2685  3181   	fcall	_EEPROM_Write
  8583                           
  8584                           ;main.c: 454:     EEPROM_Write(&TimeAdjStore, (TimeAdj & 0x00FF));
  8585     0289  0140               	movlb	0	; select bank0
  8586     028A  083A               	movf	_TimeAdj,w
  8587     028B  00F1               	movwf	EEPROM_Write@data
  8588     028C  307D               	movlw	(low _TimeAdjStore)& (0+255)
  8589     028D  318E  2685  3181   	fcall	_EEPROM_Write
  8590                           
  8591                           ;main.c: 455:     EEPROM_Write((&TimeAdjStore + 1), ((TimeAdj >> 8) & 0x00FF));
  8592     0290  0140               	movlb	0	; select bank0
  8593     0291  083B               	movf	_TimeAdj+1,w
  8594     0292  00F1               	movwf	EEPROM_Write@data
  8595     0293  307F               	movlw	(low (_TimeAdjStore+2))& (0+255)
  8596     0294  318E  2685  3181   	fcall	_EEPROM_Write
  8597                           
  8598                           ;main.c: 456:     DisplayBuf[1]++;
  8599     0297  3001               	movlw	1
  8600     0298  0140               	movlb	0	; select bank0
  8601     0299  00E8               	movwf	??_Settings
  8602     029A  0868               	movf	??_Settings,w
  8603     029B  07B1               	addwf	_DisplayBuf+1,f
  8604                           
  8605                           ;main.c: 457:     OtherSetInc(10, 1, &BrightnessStore, &Brightness);
  8606     029C  01E0               	clrf	OtherSetInc@min
  8607     029D  0AE0               	incf	OtherSetInc@min,f
  8608     029E  307B               	movlw	(low _BrightnessStore)& (0+255)
  8609     029F  00E1               	movwf	OtherSetInc@eeaddr
  8610     02A0  3051               	movlw	(low (_Brightness| 0))& (0+255)
  8611     02A1  00E2               	movwf	OtherSetInc@value
  8612     02A2  300A               	movlw	10
  8613     02A3  3183  233C         	fcall	_OtherSetInc
  8614     02A5  0008               	return
  8615     02A6                     __end_of_Settings:
  8616                           
  8617                           	psect	text20
  8618     033C                     __ptext20:	
  8619 ;; *************** function _OtherSetInc *****************
  8620 ;; Defined at:
  8621 ;;		line 305 in file "Subroutines.c"
  8622 ;; Parameters:    Size  Location     Type
  8623 ;;  max             1    wreg     unsigned char 
  8624 ;;  min             1   13[BANK0 ] unsigned char 
  8625 ;;  eeaddr          1   14[BANK0 ] PTR unsigned char 
  8626 ;;		 -> HourTypeStore(1), BrightnessStore(1), DateFormatStore(1), 
  8627 ;;  value           1   15[BANK0 ] PTR unsigned char 
  8628 ;;		 -> HourType(1), Brightness(1), DateFormat(1), 
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;  max             1   20[BANK0 ] unsigned char 
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  1    wreg      void 
  8633 ;; Registers used:
  8634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8635 ;; Tracked objects:
  8636 ;;		On entry : 3F/0
  8637 ;;		On exit  : 2F/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8640 ;;      Params:         0       3       0       0       0       0       0       0
  8641 ;;      Locals:         0       1       0       0       0       0       0       0
  8642 ;;      Temps:          0       4       0       0       0       0       0       0
  8643 ;;      Totals:         0       8       0       0       0       0       0       0
  8644 ;;Total ram usage:        8 bytes
  8645 ;; Hardware stack levels used: 1
  8646 ;; Hardware stack levels required when called: 6
  8647 ;; This function calls:
  8648 ;;		_Buttons
  8649 ;;		_EEPROM_Write
  8650 ;;		_Loader
  8651 ;;		_NumSplit
  8652 ;;		_PWM6_LoadDutyValue
  8653 ;;		_SplitLoad
  8654 ;;		___awdiv
  8655 ;;		___wmul
  8656 ;; This function is called by:
  8657 ;;		_Settings
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661     033C                     _OtherSetInc:	
  8662                           ;psect for function _OtherSetInc
  8663                           
  8664                           
  8665                           ;incstack = 0
  8666                           ; Regs used in _OtherSetInc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8667                           ;OtherSetInc@max stored from wreg
  8668     033C  00E7               	movwf	OtherSetInc@max
  8669                           
  8670                           ;Subroutines.c: 305: void OtherSetInc(uint8_t max, uint8_t min, uint8_t *eeaddr, uint8_t
      +                           *value);Subroutines.c: 306: {;Subroutines.c: 307:     OldSet = *value;
  8671     033D  0862               	movf	OtherSetInc@value,w
  8672     033E  0086               	movwf	6
  8673     033F  0187               	clrf	7
  8674     0340  0801               	movf	1,w
  8675     0341  00C6               	movwf	_OldSet
  8676     0342                     l5497:
  8677                           
  8678                           ;Subroutines.c: 309:     {;Subroutines.c: 310:         if (eeaddr == &HourTypeStore)
  8679     0342  0140               	movlb	0	; select bank0
  8680     0343  0861               	movf	OtherSetInc@eeaddr,w
  8681     0344  3A7A               	xorlw	(low _HourTypeStore)& (0+255)
  8682     0345  1D03               	skipz
  8683     0346  2B53               	goto	l5507
  8684                           
  8685                           ;Subroutines.c: 311:         {;Subroutines.c: 312:             DisplayBuf[6] = 1;
  8686     0347  01B6               	clrf	_DisplayBuf+6
  8687     0348  0AB6               	incf	_DisplayBuf+6,f
  8688                           
  8689                           ;Subroutines.c: 313:             DisplayBuf[7] = 2;
  8690     0349  3002               	movlw	2
  8691     034A  00B7               	movwf	_DisplayBuf+7
  8692                           
  8693                           ;Subroutines.c: 314:             if (HourType == 0)
  8694     034B  0850               	movf	_HourType,w
  8695     034C  1D03               	btfss	3,2
  8696     034D  2B5B               	goto	l5511
  8697                           
  8698                           ;Subroutines.c: 315:             {;Subroutines.c: 316:                 DisplayBuf[6] = 2
      +                          ;
  8699     034E  3002               	movlw	2
  8700     034F  00B6               	movwf	_DisplayBuf+6
  8701                           
  8702                           ;Subroutines.c: 317:                 DisplayBuf[7] = 4;
  8703     0350  3004               	movlw	4
  8704     0351  00B7               	movwf	_DisplayBuf+7
  8705     0352  2B5B               	goto	l5511
  8706     0353                     l5507:
  8707                           
  8708                           ;Subroutines.c: 321:         {;Subroutines.c: 322:             NumSplit(value);
  8709     0353  0862               	movf	OtherSetInc@value,w
  8710     0354  318D  2590  3183   	fcall	_NumSplit
  8711                           
  8712                           ;Subroutines.c: 323:             SplitLoad(6);
  8713     0357  3006               	movlw	6
  8714     0358  318D  2547  3183   	fcall	_SplitLoad
  8715     035B                     l5511:
  8716                           
  8717                           ;Subroutines.c: 325:         Loader();
  8718     035B  318F  27C8  3183   	fcall	_Loader
  8719                           
  8720                           ;Subroutines.c: 326:         Temp = Buttons();
  8721     035E  318F  2792  3183   	fcall	_Buttons
  8722     0361  00C7               	movwf	_Temp
  8723                           
  8724                           ;Subroutines.c: 327:         if (Temp == 3)
  8725     0362  3003               	movlw	3
  8726     0363  0647               	xorwf	_Temp,w
  8727     0364  1903               	btfsc	3,2
  8728     0365  2BBD               	goto	l5539
  8729     0366  0347               	decf	_Temp,w
  8730     0367  1D03               	btfss	3,2
  8731     0368  2B7C               	goto	l5529
  8732                           
  8733                           ;Subroutines.c: 330:         {;Subroutines.c: 331:             (*value)++;
  8734     0369  3001               	movlw	1
  8735     036A  00E3               	movwf	??_OtherSetInc
  8736     036B  0862               	movf	OtherSetInc@value,w
  8737     036C  0086               	movwf	6
  8738     036D  0187               	clrf	7
  8739     036E  0863               	movf	??_OtherSetInc,w
  8740     036F  0781               	addwf	1,f
  8741                           
  8742                           ;Subroutines.c: 332:             if (*value > max)
  8743     0370  0862               	movf	OtherSetInc@value,w
  8744     0371  0086               	movwf	6
  8745     0372  0187               	clrf	7
  8746     0373  0801               	movf	1,w
  8747     0374  0267               	subwf	OtherSetInc@max,w
  8748     0375  1803               	skipnc
  8749     0376  2B98               	goto	l5535
  8750                           
  8751                           ;Subroutines.c: 333:                 *value = min;
  8752     0377  0862               	movf	OtherSetInc@value,w
  8753     0378  0086               	movwf	6
  8754     0379  0187               	clrf	7
  8755     037A  0860               	movf	OtherSetInc@min,w
  8756     037B  2B91               	goto	L2
  8757     037C                     l5529:
  8758                           
  8759                           ;Subroutines.c: 336:         {;Subroutines.c: 337:             if (*value - min == 0)
  8760     037C  0862               	movf	OtherSetInc@value,w
  8761     037D  0086               	movwf	6
  8762     037E  0187               	clrf	7
  8763     037F  0801               	movf	1,w
  8764     0380  00E3               	movwf	??_OtherSetInc
  8765     0381  01E4               	clrf	??_OtherSetInc+1
  8766     0382  0864               	movf	??_OtherSetInc+1,w
  8767     0383  00E6               	movwf	??_OtherSetInc+3
  8768     0384  0860               	movf	OtherSetInc@min,w
  8769     0385  0263               	subwf	??_OtherSetInc,w
  8770     0386  00E5               	movwf	??_OtherSetInc+2
  8771     0387  1C03               	skipc
  8772     0388  03E6               	decf	??_OtherSetInc+3,f
  8773     0389  0865               	movf	??_OtherSetInc+2,w
  8774     038A  0466               	iorwf	??_OtherSetInc+3,w
  8775     038B  1D03               	btfss	3,2
  8776     038C  2B93               	goto	l5533
  8777                           
  8778                           ;Subroutines.c: 338:                 *value = max;
  8779     038D  0862               	movf	OtherSetInc@value,w
  8780     038E  0086               	movwf	6
  8781     038F  0187               	clrf	7
  8782     0390  0867               	movf	OtherSetInc@max,w
  8783     0391                     L2:
  8784     0391  0081               	movwf	1
  8785     0392  2B98               	goto	l5535
  8786     0393                     l5533:
  8787                           
  8788                           ;Subroutines.c: 340:                 (*value)--;
  8789     0393  0862               	movf	OtherSetInc@value,w
  8790     0394  0086               	movwf	6
  8791     0395  0187               	clrf	7
  8792     0396  3001               	movlw	1
  8793     0397  0281               	subwf	1,f
  8794     0398                     l5535:
  8795                           
  8796                           ;Subroutines.c: 342:         if (eeaddr == &BrightnessStore)
  8797     0398  0861               	movf	OtherSetInc@eeaddr,w
  8798     0399  3A7B               	xorlw	(low _BrightnessStore)& (0+255)
  8799     039A  1D03               	skipz
  8800     039B  2B42               	goto	l5497
  8801                           
  8802                           ;Subroutines.c: 343:             PWM6_LoadDutyValue(((5190 * (Brightness)) / 100));
  8803     039C  3064               	movlw	100
  8804     039D  00F7               	movwf	___awdiv@divisor
  8805     039E  3000               	movlw	0
  8806     039F  00F8               	movwf	___awdiv@divisor+1
  8807     03A0  0851               	movf	_Brightness,w
  8808     03A1  00E3               	movwf	??_OtherSetInc
  8809     03A2  01E4               	clrf	??_OtherSetInc+1
  8810     03A3  0863               	movf	??_OtherSetInc,w
  8811     03A4  00F1               	movwf	___wmul@multiplier
  8812     03A5  0864               	movf	??_OtherSetInc+1,w
  8813     03A6  00F2               	movwf	___wmul@multiplier+1
  8814     03A7  3046               	movlw	70
  8815     03A8  00F3               	movwf	___wmul@multiplicand
  8816     03A9  3014               	movlw	20
  8817     03AA  00F4               	movwf	___wmul@multiplicand+1
  8818     03AB  318E  264E  3183   	fcall	___wmul
  8819     03AE  0872               	movf	?___wmul+1,w
  8820     03AF  00FA               	movwf	___awdiv@dividend+1
  8821     03B0  0871               	movf	?___wmul,w
  8822     03B1  00F9               	movwf	___awdiv@dividend
  8823     03B2  3186  265F  3183   	fcall	___awdiv
  8824     03B5  0878               	movf	?___awdiv+1,w
  8825     03B6  00D8               	movwf	PWM6_LoadDutyValue@dutyValue+1
  8826     03B7  0877               	movf	?___awdiv,w
  8827     03B8  00D7               	movwf	PWM6_LoadDutyValue@dutyValue
  8828     03B9  318E  2605  3183   	fcall	_PWM6_LoadDutyValue
  8829     03BC  2B42               	goto	l5497
  8830     03BD                     l5539:
  8831                           
  8832                           ;Subroutines.c: 345:     if (*value != OldSet)
  8833     03BD  0862               	movf	OtherSetInc@value,w
  8834     03BE  0086               	movwf	6
  8835     03BF  0187               	clrf	7
  8836     03C0  0801               	movf	1,w
  8837     03C1  0646               	xorwf	_OldSet,w
  8838     03C2  1903               	skipnz
  8839     03C3  0008               	return
  8840                           
  8841                           ;Subroutines.c: 346:         EEPROM_Write(eeaddr, *value);
  8842     03C4  0862               	movf	OtherSetInc@value,w
  8843     03C5  0086               	movwf	6
  8844     03C6  0187               	clrf	7
  8845     03C7  0801               	movf	1,w
  8846     03C8  00F1               	movwf	EEPROM_Write@data
  8847     03C9  0861               	movf	OtherSetInc@eeaddr,w
  8848     03CA  318E  2685         	fcall	_EEPROM_Write
  8849     03CC  0008               	return
  8850     03CD                     __end_of_OtherSetInc:
  8851                           
  8852                           	psect	text21
  8853     0E4E                     __ptext21:	
  8854 ;; *************** function ___wmul *****************
  8855 ;; Defined at:
  8856 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8857 ;; Parameters:    Size  Location     Type
  8858 ;;  multiplier      2    1[COMMON] unsigned int 
  8859 ;;  multiplicand    2    3[COMMON] unsigned int 
  8860 ;; Auto vars:     Size  Location     Type
  8861 ;;  product         2    5[COMMON] unsigned int 
  8862 ;; Return value:  Size  Location     Type
  8863 ;;                  2    1[COMMON] unsigned int 
  8864 ;; Registers used:
  8865 ;;		wreg, status,2, status,0
  8866 ;; Tracked objects:
  8867 ;;		On entry : 3F/0
  8868 ;;		On exit  : 3F/0
  8869 ;;		Unchanged: 3F/0
  8870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8871 ;;      Params:         4       0       0       0       0       0       0       0
  8872 ;;      Locals:         2       0       0       0       0       0       0       0
  8873 ;;      Temps:          0       0       0       0       0       0       0       0
  8874 ;;      Totals:         6       0       0       0       0       0       0       0
  8875 ;;Total ram usage:        6 bytes
  8876 ;; Hardware stack levels used: 1
  8877 ;; Hardware stack levels required when called: 4
  8878 ;; This function calls:
  8879 ;;		Nothing
  8880 ;; This function is called by:
  8881 ;;		_Settings
  8882 ;;		_TubesOn
  8883 ;;		_OtherSetInc
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887     0E4E                     ___wmul:	
  8888                           ;psect for function ___wmul
  8889                           
  8890                           
  8891                           ;incstack = 0
  8892                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8893     0E4E  01F5               	clrf	___wmul@product
  8894     0E4F  01F6               	clrf	___wmul@product+1
  8895     0E50                     l5297:
  8896     0E50  1C71               	btfss	___wmul@multiplier,0
  8897     0E51  2E56               	goto	l1655
  8898     0E52  0873               	movf	___wmul@multiplicand,w
  8899     0E53  07F5               	addwf	___wmul@product,f
  8900     0E54  0874               	movf	___wmul@multiplicand+1,w
  8901     0E55  3DF6               	addwfc	___wmul@product+1,f
  8902     0E56                     l1655:
  8903     0E56  3001               	movlw	1
  8904     0E57                     u3485:
  8905     0E57  35F3               	lslf	___wmul@multiplicand,f
  8906     0E58  0DF4               	rlf	___wmul@multiplicand+1,f
  8907     0E59  0B89               	decfsz	9,f
  8908     0E5A  2E57               	goto	u3485
  8909     0E5B  3001               	movlw	1
  8910     0E5C                     u3495:
  8911     0E5C  36F2               	lsrf	___wmul@multiplier+1,f
  8912     0E5D  0CF1               	rrf	___wmul@multiplier,f
  8913     0E5E  0B89               	decfsz	9,f
  8914     0E5F  2E5C               	goto	u3495
  8915     0E60  0871               	movf	___wmul@multiplier,w
  8916     0E61  0472               	iorwf	___wmul@multiplier+1,w
  8917     0E62  1D03               	btfss	3,2
  8918     0E63  2E50               	goto	l5297
  8919     0E64  0876               	movf	___wmul@product+1,w
  8920     0E65  00F2               	movwf	?___wmul+1
  8921     0E66  0875               	movf	___wmul@product,w
  8922     0E67  00F1               	movwf	?___wmul
  8923     0E68  0008               	return
  8924     0E69                     __end_of___wmul:
  8925                           
  8926                           	psect	text22
  8927     065F                     __ptext22:	
  8928 ;; *************** function ___awdiv *****************
  8929 ;; Defined at:
  8930 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  8931 ;; Parameters:    Size  Location     Type
  8932 ;;  divisor         2    7[COMMON] int 
  8933 ;;  dividend        2    9[COMMON] int 
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;  quotient        2    2[BANK0 ] int 
  8936 ;;  sign            1    1[BANK0 ] unsigned char 
  8937 ;;  counter         1    0[BANK0 ] unsigned char 
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  2    7[COMMON] int 
  8940 ;; Registers used:
  8941 ;;		wreg, status,2, status,0
  8942 ;; Tracked objects:
  8943 ;;		On entry : 3F/0
  8944 ;;		On exit  : 3F/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8947 ;;      Params:         4       0       0       0       0       0       0       0
  8948 ;;      Locals:         0       4       0       0       0       0       0       0
  8949 ;;      Temps:          1       0       0       0       0       0       0       0
  8950 ;;      Totals:         5       4       0       0       0       0       0       0
  8951 ;;Total ram usage:        9 bytes
  8952 ;; Hardware stack levels used: 1
  8953 ;; Hardware stack levels required when called: 4
  8954 ;; This function calls:
  8955 ;;		Nothing
  8956 ;; This function is called by:
  8957 ;;		_TubesOn
  8958 ;;		_OtherSetInc
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962     065F                     ___awdiv:	
  8963                           ;psect for function ___awdiv
  8964                           
  8965                           
  8966                           ;incstack = 0
  8967                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8968     065F  01D4               	clrf	___awdiv@sign
  8969     0660  1FF8               	btfss	___awdiv@divisor+1,7
  8970     0661  2E69               	goto	l5317
  8971     0662  09F7               	comf	___awdiv@divisor,f
  8972     0663  09F8               	comf	___awdiv@divisor+1,f
  8973     0664  0AF7               	incf	___awdiv@divisor,f
  8974     0665  1903               	skipnz
  8975     0666  0AF8               	incf	___awdiv@divisor+1,f
  8976     0667  01D4               	clrf	___awdiv@sign
  8977     0668  0AD4               	incf	___awdiv@sign,f
  8978     0669                     l5317:
  8979     0669  1FFA               	btfss	___awdiv@dividend+1,7
  8980     066A  2E74               	goto	l5323
  8981     066B  09F9               	comf	___awdiv@dividend,f
  8982     066C  09FA               	comf	___awdiv@dividend+1,f
  8983     066D  0AF9               	incf	___awdiv@dividend,f
  8984     066E  1903               	skipnz
  8985     066F  0AFA               	incf	___awdiv@dividend+1,f
  8986     0670  3001               	movlw	1
  8987     0671  00FB               	movwf	??___awdiv
  8988     0672  087B               	movf	??___awdiv,w
  8989     0673  06D4               	xorwf	___awdiv@sign,f
  8990     0674                     l5323:
  8991     0674  01D5               	clrf	___awdiv@quotient
  8992     0675  01D6               	clrf	___awdiv@quotient+1
  8993     0676  0877               	movf	___awdiv@divisor,w
  8994     0677  0478               	iorwf	___awdiv@divisor+1,w
  8995     0678  1903               	btfsc	3,2
  8996     0679  2EA3               	goto	l5345
  8997     067A  01D3               	clrf	___awdiv@counter
  8998     067B  0AD3               	incf	___awdiv@counter,f
  8999     067C                     l5333:
  9000     067C  1BF8               	btfsc	___awdiv@divisor+1,7
  9001     067D  2E88               	goto	l5335
  9002     067E  3001               	movlw	1
  9003     067F                     u3545:
  9004     067F  35F7               	lslf	___awdiv@divisor,f
  9005     0680  0DF8               	rlf	___awdiv@divisor+1,f
  9006     0681  0B89               	decfsz	9,f
  9007     0682  2E7F               	goto	u3545
  9008     0683  3001               	movlw	1
  9009     0684  00FB               	movwf	??___awdiv
  9010     0685  087B               	movf	??___awdiv,w
  9011     0686  07D3               	addwf	___awdiv@counter,f
  9012     0687  2E7C               	goto	l5333
  9013     0688                     l5335:
  9014     0688  3001               	movlw	1
  9015     0689                     u3565:
  9016     0689  35D5               	lslf	___awdiv@quotient,f
  9017     068A  0DD6               	rlf	___awdiv@quotient+1,f
  9018     068B  0B89               	decfsz	9,f
  9019     068C  2E89               	goto	u3565
  9020     068D  0878               	movf	___awdiv@divisor+1,w
  9021     068E  027A               	subwf	___awdiv@dividend+1,w
  9022     068F  1D03               	skipz
  9023     0690  2E93               	goto	u3575
  9024     0691  0877               	movf	___awdiv@divisor,w
  9025     0692  0279               	subwf	___awdiv@dividend,w
  9026     0693                     u3575:
  9027     0693  1C03               	skipc
  9028     0694  2E9A               	goto	l5341
  9029     0695  0877               	movf	___awdiv@divisor,w
  9030     0696  02F9               	subwf	___awdiv@dividend,f
  9031     0697  0878               	movf	___awdiv@divisor+1,w
  9032     0698  3BFA               	subwfb	___awdiv@dividend+1,f
  9033     0699  1455               	bsf	___awdiv@quotient,0
  9034     069A                     l5341:
  9035     069A  3001               	movlw	1
  9036     069B                     u3585:
  9037     069B  36F8               	lsrf	___awdiv@divisor+1,f
  9038     069C  0CF7               	rrf	___awdiv@divisor,f
  9039     069D  0B89               	decfsz	9,f
  9040     069E  2E9B               	goto	u3585
  9041     069F  3001               	movlw	1
  9042     06A0  02D3               	subwf	___awdiv@counter,f
  9043     06A1  1D03               	btfss	3,2
  9044     06A2  2E88               	goto	l5335
  9045     06A3                     l5345:
  9046     06A3  0854               	movf	___awdiv@sign,w
  9047     06A4  1903               	btfsc	3,2
  9048     06A5  2EAB               	goto	l5349
  9049     06A6  09D5               	comf	___awdiv@quotient,f
  9050     06A7  09D6               	comf	___awdiv@quotient+1,f
  9051     06A8  0AD5               	incf	___awdiv@quotient,f
  9052     06A9  1903               	skipnz
  9053     06AA  0AD6               	incf	___awdiv@quotient+1,f
  9054     06AB                     l5349:
  9055     06AB  0856               	movf	___awdiv@quotient+1,w
  9056     06AC  00F8               	movwf	?___awdiv+1
  9057     06AD  0855               	movf	___awdiv@quotient,w
  9058     06AE  00F7               	movwf	?___awdiv
  9059     06AF  0008               	return
  9060     06B0                     __end_of___awdiv:
  9061                           
  9062                           	psect	text23
  9063     0D90                     __ptext23:	
  9064 ;; *************** function _NumSplit *****************
  9065 ;; Defined at:
  9066 ;;		line 461 in file "Subroutines.c"
  9067 ;; Parameters:    Size  Location     Type
  9068 ;;  input           1    wreg     unsigned char 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;  input           1    2[COMMON] unsigned char 
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      void 
  9073 ;; Registers used:
  9074 ;;		wreg, status,2, status,0
  9075 ;; Tracked objects:
  9076 ;;		On entry : 3F/0
  9077 ;;		On exit  : 3F/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9080 ;;      Params:         0       0       0       0       0       0       0       0
  9081 ;;      Locals:         1       0       0       0       0       0       0       0
  9082 ;;      Temps:          1       0       0       0       0       0       0       0
  9083 ;;      Totals:         2       0       0       0       0       0       0       0
  9084 ;;Total ram usage:        2 bytes
  9085 ;; Hardware stack levels used: 1
  9086 ;; Hardware stack levels required when called: 4
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_OtherSetInc
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094     0D90                     _NumSplit:	
  9095                           ;psect for function _NumSplit
  9096                           
  9097                           
  9098                           ;incstack = 0
  9099                           ; Regs used in _NumSplit: [wreg+status,2+status,0]
  9100                           ;NumSplit@input stored from wreg
  9101     0D90  00F2               	movwf	NumSplit@input
  9102                           
  9103                           ;Subroutines.c: 461: void NumSplit(uint8_t input);Subroutines.c: 462: {;Subroutines.c: 4
      +                          63:     BCDSplit[1] = input;
  9104     0D91  0872               	movf	NumSplit@input,w
  9105     0D92  00B9               	movwf	_BCDSplit+1
  9106                           
  9107                           ;Subroutines.c: 464:     BCDSplit[0] = 0;
  9108     0D93  01B8               	clrf	_BCDSplit
  9109     0D94                     l5287:	
  9110                           ;Subroutines.c: 465:     while(BCDSplit[1] >= 10)
  9111                           
  9112                           
  9113                           ;Subroutines.c: 465:     while(BCDSplit[1] >= 10)
  9114     0D94  300A               	movlw	10
  9115     0D95  0239               	subwf	_BCDSplit+1,w
  9116     0D96  1C03               	btfss	3,0
  9117     0D97  0008               	return
  9118                           
  9119                           ;Subroutines.c: 466:     {;Subroutines.c: 467:         BCDSplit[0]++;
  9120     0D98  3001               	movlw	1
  9121     0D99  00F1               	movwf	??_NumSplit
  9122     0D9A  0871               	movf	??_NumSplit,w
  9123     0D9B  07B8               	addwf	_BCDSplit,f
  9124                           
  9125                           ;Subroutines.c: 468:         BCDSplit[1] -= 10;
  9126     0D9C  300A               	movlw	10
  9127     0D9D  02B9               	subwf	_BCDSplit+1,f
  9128     0D9E  2D94               	goto	l5287
  9129     0D9F                     __end_of_NumSplit:
  9130                           
  9131                           	psect	text24
  9132     0E85                     __ptext24:	
  9133 ;; *************** function _EEPROM_Write *****************
  9134 ;; Defined at:
  9135 ;;		line 360 in file "Subroutines.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;  addr            1    wreg     unsigned char 
  9138 ;;  data            1    1[COMMON] unsigned char 
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;  addr            1    2[COMMON] unsigned char 
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  1    wreg      void 
  9143 ;; Registers used:
  9144 ;;		wreg, status,2
  9145 ;; Tracked objects:
  9146 ;;		On entry : 3F/0
  9147 ;;		On exit  : 3F/10
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9150 ;;      Params:         1       0       0       0       0       0       0       0
  9151 ;;      Locals:         1       0       0       0       0       0       0       0
  9152 ;;      Temps:          0       0       0       0       0       0       0       0
  9153 ;;      Totals:         2       0       0       0       0       0       0       0
  9154 ;;Total ram usage:        2 bytes
  9155 ;; Hardware stack levels used: 1
  9156 ;; Hardware stack levels required when called: 4
  9157 ;; This function calls:
  9158 ;;		Nothing
  9159 ;; This function is called by:
  9160 ;;		_Settings
  9161 ;;		_OtherSetInc
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           
  9165     0E85                     _EEPROM_Write:	
  9166                           ;psect for function _EEPROM_Write
  9167                           
  9168                           
  9169                           ;incstack = 0
  9170                           ; Regs used in _EEPROM_Write: [wreg+status,2]
  9171                           ;EEPROM_Write@addr stored from wreg
  9172     0E85  00F2               	movwf	EEPROM_Write@addr
  9173     0E86                     l1437:	
  9174                           ;Subroutines.c: 360: void EEPROM_Write(uint8_t addr, uint8_t data);Subroutines.c: 361: {
      +                          ;Subroutines.c: 362:     while (NVMCON1bits.WR){}
  9175                           
  9176     0E86  0150               	movlb	16	; select bank16
  9177     0E87  189E               	btfsc	30,1	;volsfr
  9178     0E88  2E86               	goto	l1437
  9179                           
  9180                           ;Subroutines.c: 363:  NVMCON1bits.NVMREGS = 1;
  9181     0E89  171E               	bsf	30,6	;volsfr
  9182                           
  9183                           ;Subroutines.c: 364:  NVMADRL = (addr) & 0xFFu;
  9184     0E8A  0872               	movf	EEPROM_Write@addr,w
  9185     0E8B  009A               	movwf	26	;volatile
  9186                           
  9187                           ;Subroutines.c: 365:  NVMADRH = 0x70;
  9188     0E8C  3070               	movlw	112
  9189     0E8D  009B               	movwf	27	;volatile
  9190                           
  9191                           ;Subroutines.c: 366:  NVMDATH = 0;
  9192     0E8E  019D               	clrf	29	;volatile
  9193                           
  9194                           ;Subroutines.c: 367:  NVMDATL = (data) & 0xFFu;
  9195     0E8F  0871               	movf	EEPROM_Write@data,w
  9196     0E90  009C               	movwf	28	;volatile
  9197                           
  9198                           ;Subroutines.c: 368:  STATUSbits.CARRY = 0;
  9199     0E91  1003               	bcf	3,0	;volatile
  9200                           
  9201                           ;Subroutines.c: 369:  if (INTCONbits.GIE)
  9202     0E92  1B8B               	btfsc	11,7	;volatile
  9203                           
  9204                           ;Subroutines.c: 370:     {;Subroutines.c: 371:   STATUSbits.CARRY = 1;
  9205     0E93  1403               	bsf	3,0	;volatile
  9206                           
  9207                           ;Subroutines.c: 373:  INTCONbits.GIE = 0;
  9208                           
  9209                           ;Subroutines.c: 372:  }
  9210     0E94  138B               	bcf	11,7	;volatile
  9211                           
  9212                           ;Subroutines.c: 374:  NVMCON1bits.WREN = 1;
  9213     0E95  151E               	bsf	30,2	;volsfr
  9214                           
  9215                           ;Subroutines.c: 375:  NVMCON2 = 0x55;
  9216     0E96  3055               	movlw	85
  9217     0E97  009F               	movwf	31	;volsfr
  9218                           
  9219                           ;Subroutines.c: 376:  NVMCON2 = 0xAA;
  9220     0E98  30AA               	movlw	170
  9221     0E99  009F               	movwf	31	;volsfr
  9222                           
  9223                           ;Subroutines.c: 377:  NVMCON1bits.WR = 1;
  9224     0E9A  149E               	bsf	30,1	;volsfr
  9225     0E9B                     l1441:	
  9226                           ;Subroutines.c: 378:  while (NVMCON1bits.WR){}
  9227                           
  9228     0E9B  189E               	btfsc	30,1	;volsfr
  9229     0E9C  2E9B               	goto	l1441
  9230                           
  9231                           ;Subroutines.c: 379:  NVMCON1bits.WREN = 0;
  9232     0E9D  111E               	bcf	30,2	;volsfr
  9233                           
  9234                           ;Subroutines.c: 380:  if (STATUSbits.CARRY)
  9235     0E9E  1C03               	btfss	3,0	;volatile
  9236     0E9F  0008               	return
  9237                           
  9238                           ;Subroutines.c: 381:     {;Subroutines.c: 382:   INTCONbits.GIE = 1;
  9239     0EA0  178B               	bsf	11,7	;volatile
  9240     0EA1  0008               	return
  9241     0EA2                     __end_of_EEPROM_Write:
  9242                           
  9243                           	psect	text25
  9244     03CD                     __ptext25:	
  9245 ;; *************** function _BCDSetInc *****************
  9246 ;; Defined at:
  9247 ;;		line 249 in file "Subroutines.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;  max             1    wreg     unsigned char 
  9250 ;;  min             1   14[BANK0 ] unsigned char 
  9251 ;;  i2creg          1   15[BANK0 ] unsigned char 
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;  max             1    9[COMMON] unsigned char 
  9254 ;;  value           1   10[COMMON] unsigned char 
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  1    wreg      void 
  9257 ;; Registers used:
  9258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9259 ;; Tracked objects:
  9260 ;;		On entry : 3F/0
  9261 ;;		On exit  : 3C/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9264 ;;      Params:         0       2       0       0       0       0       0       0
  9265 ;;      Locals:         2       0       0       0       0       0       0       0
  9266 ;;      Temps:          4       0       0       0       0       0       0       0
  9267 ;;      Totals:         6       2       0       0       0       0       0       0
  9268 ;;Total ram usage:        8 bytes
  9269 ;; Hardware stack levels used: 1
  9270 ;; Hardware stack levels required when called: 8
  9271 ;; This function calls:
  9272 ;;		_BCD2Bin
  9273 ;;		_Buttons
  9274 ;;		_I2CRead
  9275 ;;		_I2CWrite
  9276 ;;		_Loader
  9277 ;;		_SplitLoad
  9278 ;; This function is called by:
  9279 ;;		_Settings
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283     03CD                     _BCDSetInc:	
  9284                           ;psect for function _BCDSetInc
  9285                           
  9286                           
  9287                           ;incstack = 0
  9288                           ; Regs used in _BCDSetInc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9289                           ;BCDSetInc@max stored from wreg
  9290     03CD  00F9               	movwf	BCDSetInc@max
  9291                           
  9292                           ;Subroutines.c: 249: void BCDSetInc(uint8_t max, uint8_t min, uint8_t i2creg);Subroutine
      +                          s.c: 250: {;Subroutines.c: 251:     uint8_t value;;Subroutines.c: 253:     if (i2creg ==
      +                           0x14)
  9293     03CE  3014               	movlw	20
  9294     03CF  0662               	xorwf	BCDSetInc@i2creg,w
  9295     03D0  1D03               	btfss	3,2
  9296     03D1  2BD4               	goto	l5435
  9297                           
  9298                           ;Subroutines.c: 254:         value = BlankStart;
  9299     03D2  0849               	movf	_BlankStart,w
  9300     03D3  2BDE               	goto	L3
  9301     03D4                     l5435:
  9302     03D4  3015               	movlw	21
  9303     03D5  0662               	xorwf	BCDSetInc@i2creg,w
  9304     03D6  1D03               	btfss	3,2
  9305     03D7  2BDA               	goto	l5439
  9306                           
  9307                           ;Subroutines.c: 256:         value = BlankEnd;
  9308     03D8  0848               	movf	_BlankEnd,w
  9309     03D9  2BDE               	goto	L3
  9310     03DA                     l5439:
  9311                           
  9312                           ;Subroutines.c: 258:         value = I2CRead(i2creg);
  9313     03DA  0862               	movf	BCDSetInc@i2creg,w
  9314     03DB  318F  2705  3183   	fcall	_I2CRead
  9315     03DE                     L3:
  9316     03DE  00FA               	movwf	BCDSetInc@value
  9317                           
  9318                           ;Subroutines.c: 259:     OldSet = value;
  9319     03DF  087A               	movf	BCDSetInc@value,w
  9320     03E0  0140               	movlb	0	; select bank0
  9321     03E1  00C6               	movwf	_OldSet
  9322     03E2                     l5443:
  9323                           
  9324                           ;Subroutines.c: 261:     {;Subroutines.c: 262:         BCD2Bin(value);
  9325     03E2  087A               	movf	BCDSetInc@value,w
  9326     03E3  318D  2581  3183   	fcall	_BCD2Bin
  9327                           
  9328                           ;Subroutines.c: 263:         SplitLoad(6);
  9329     03E6  3006               	movlw	6
  9330     03E7  318D  2547  3183   	fcall	_SplitLoad
  9331                           
  9332                           ;Subroutines.c: 264:         Loader();
  9333     03EA  318F  27C8  3183   	fcall	_Loader
  9334                           
  9335                           ;Subroutines.c: 265:         _delay(16000);
  9336     03ED  3015               	movlw	21
  9337     03EE  00F5               	movwf	??_BCDSetInc
  9338     03EF  30C6               	movlw	198
  9339     03F0                     u4717:
  9340     03F0  0B89               	decfsz	9,f
  9341     03F1  2BF0               	goto	u4717
  9342     03F2  0BF5               	decfsz	??_BCDSetInc,f
  9343     03F3  2BF0               	goto	u4717
  9344     03F4  3200               	nop2
  9345                           
  9346                           ;Subroutines.c: 266:         Temp = Buttons();
  9347     03F5  318F  2792  3183   	fcall	_Buttons
  9348     03F8  00C7               	movwf	_Temp
  9349                           
  9350                           ;Subroutines.c: 267:         if (Temp == 3)
  9351     03F9  3003               	movlw	3
  9352     03FA  0647               	xorwf	_Temp,w
  9353     03FB  1903               	btfsc	3,2
  9354     03FC  2C30               	goto	l5479
  9355     03FD  0347               	decf	_Temp,w
  9356     03FE  1D03               	btfss	3,2
  9357     03FF  2C15               	goto	l5469
  9358                           
  9359                           ;Subroutines.c: 270:         {;Subroutines.c: 271:             value++;
  9360     0400  3001               	movlw	1
  9361     0401  00F5               	movwf	??_BCDSetInc
  9362     0402  0875               	movf	??_BCDSetInc,w
  9363     0403  07FA               	addwf	BCDSetInc@value,f
  9364                           
  9365                           ;Subroutines.c: 272:             if ((value & 0xF) == 0xA)
  9366     0404  300F               	movlw	15
  9367     0405  057A               	andwf	BCDSetInc@value,w
  9368     0406  00F5               	movwf	??_BCDSetInc
  9369     0407  300A               	movlw	10
  9370     0408  0675               	xorwf	??_BCDSetInc,w
  9371     0409  1D03               	btfss	3,2
  9372     040A  2C0F               	goto	l5465
  9373                           
  9374                           ;Subroutines.c: 273:                 value = (value & 0xF0) + 10;
  9375     040B  087A               	movf	BCDSetInc@value,w
  9376     040C  39F0               	andlw	240
  9377     040D  3E0A               	addlw	10
  9378     040E  00FA               	movwf	BCDSetInc@value
  9379     040F                     l5465:
  9380                           
  9381                           ;Subroutines.c: 274:             if (value > max)
  9382     040F  087A               	movf	BCDSetInc@value,w
  9383     0410  0279               	subwf	BCDSetInc@max,w
  9384     0411  1803               	skipnc
  9385     0412  2BE2               	goto	l5443
  9386                           
  9387                           ;Subroutines.c: 275:                 value = min;
  9388     0413  0861               	movf	BCDSetInc@min,w
  9389     0414  2C2B               	goto	L5
  9390     0415                     l5469:
  9391                           
  9392                           ;Subroutines.c: 278:         {;Subroutines.c: 279:             if (value - min == 0)
  9393     0415  087A               	movf	BCDSetInc@value,w
  9394     0416  00F5               	movwf	??_BCDSetInc
  9395     0417  01F6               	clrf	??_BCDSetInc+1
  9396     0418  0876               	movf	??_BCDSetInc+1,w
  9397     0419  00F8               	movwf	??_BCDSetInc+3
  9398     041A  0861               	movf	BCDSetInc@min,w
  9399     041B  0275               	subwf	??_BCDSetInc,w
  9400     041C  00F7               	movwf	??_BCDSetInc+2
  9401     041D  1C03               	skipc
  9402     041E  03F8               	decf	??_BCDSetInc+3,f
  9403     041F  0877               	movf	??_BCDSetInc+2,w
  9404     0420  0478               	iorwf	??_BCDSetInc+3,w
  9405     0421  1D03               	btfss	3,2
  9406     0422  2C25               	goto	l5473
  9407                           
  9408                           ;Subroutines.c: 280:                 value = max;
  9409     0423  0879               	movf	BCDSetInc@max,w
  9410     0424  2C2B               	goto	L5
  9411     0425                     l5473:
  9412                           
  9413                           ;Subroutines.c: 282:             {;Subroutines.c: 283:                 if ((value & 0xF)
      +                           == 0)
  9414     0425  087A               	movf	BCDSetInc@value,w
  9415     0426  390F               	andlw	15
  9416     0427  1D03               	btfss	3,2
  9417     0428  2C2D               	goto	l5477
  9418                           
  9419                           ;Subroutines.c: 284:                     value = (value + 9) - 10;
  9420     0429  087A               	movf	BCDSetInc@value,w
  9421     042A  3EFF               	addlw	255
  9422     042B                     L5:
  9423     042B  00FA               	movwf	BCDSetInc@value
  9424     042C  2BE2               	goto	l5443
  9425     042D                     l5477:
  9426                           
  9427                           ;Subroutines.c: 286:                     value--;
  9428     042D  3001               	movlw	1
  9429     042E  02FA               	subwf	BCDSetInc@value,f
  9430     042F  2BE2               	goto	l5443
  9431     0430                     l5479:
  9432                           
  9433                           ;Subroutines.c: 290:     if (value != OldSet)
  9434     0430  087A               	movf	BCDSetInc@value,w
  9435     0431  0646               	xorwf	_OldSet,w
  9436     0432  1903               	skipnz
  9437     0433  0008               	return
  9438                           
  9439                           ;Subroutines.c: 291:     {;Subroutines.c: 292:         if (i2creg == 0x14)
  9440     0434  3014               	movlw	20
  9441     0435  0662               	xorwf	BCDSetInc@i2creg,w
  9442     0436  1D03               	btfss	3,2
  9443     0437  2C3B               	goto	l5485
  9444                           
  9445                           ;Subroutines.c: 293:             BlankStart = value;
  9446     0438  087A               	movf	BCDSetInc@value,w
  9447     0439  00C9               	movwf	_BlankStart
  9448     043A  0008               	return
  9449     043B                     l5485:
  9450     043B  3015               	movlw	21
  9451     043C  0662               	xorwf	BCDSetInc@i2creg,w
  9452     043D  1D03               	btfss	3,2
  9453     043E  2C42               	goto	l5489
  9454                           
  9455                           ;Subroutines.c: 295:             BlankEnd = value;
  9456     043F  087A               	movf	BCDSetInc@value,w
  9457     0440  00C8               	movwf	_BlankEnd
  9458     0441  0008               	return
  9459     0442                     l5489:
  9460                           
  9461                           ;Subroutines.c: 297:         {;Subroutines.c: 298:             I2CWrite(i2creg, value);
  9462     0442  087A               	movf	BCDSetInc@value,w
  9463     0443  00E0               	movwf	I2CWrite@data
  9464     0444  0862               	movf	BCDSetInc@i2creg,w
  9465     0445  318D  25B1  3183   	fcall	_I2CWrite
  9466                           
  9467                           ;Subroutines.c: 299:             if (i2creg == 0x01)
  9468     0448  0140               	movlb	0	; select bank0
  9469     0449  0362               	decf	BCDSetInc@i2creg,w
  9470     044A  1D03               	btfss	3,2
  9471     044B  0008               	return
  9472                           
  9473                           ;Subroutines.c: 300:                 I2CWrite(0x00, 0);
  9474     044C  01E0               	clrf	I2CWrite@data
  9475     044D  3000               	movlw	0
  9476     044E  318D  25B1         	fcall	_I2CWrite
  9477     0450  0008               	return
  9478     0451                     __end_of_BCDSetInc:
  9479                           
  9480                           	psect	text26
  9481     0D47                     __ptext26:	
  9482 ;; *************** function _SplitLoad *****************
  9483 ;; Defined at:
  9484 ;;		line 12 in file "Subroutines.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;  first           1    wreg     unsigned char 
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;  first           1    1[COMMON] unsigned char 
  9489 ;; Return value:  Size  Location     Type
  9490 ;;                  1    wreg      void 
  9491 ;; Registers used:
  9492 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9493 ;; Tracked objects:
  9494 ;;		On entry : 3F/0
  9495 ;;		On exit  : 3F/0
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9498 ;;      Params:         0       0       0       0       0       0       0       0
  9499 ;;      Locals:         1       0       0       0       0       0       0       0
  9500 ;;      Temps:          0       0       0       0       0       0       0       0
  9501 ;;      Totals:         1       0       0       0       0       0       0       0
  9502 ;;Total ram usage:        1 bytes
  9503 ;; Hardware stack levels used: 1
  9504 ;; Hardware stack levels required when called: 4
  9505 ;; This function calls:
  9506 ;;		Nothing
  9507 ;; This function is called by:
  9508 ;;		_main
  9509 ;;		_DateDisplay
  9510 ;;		_BCDSetInc
  9511 ;;		_OtherSetInc
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515     0D47                     _SplitLoad:	
  9516                           ;psect for function _SplitLoad
  9517                           
  9518                           
  9519                           ;incstack = 0
  9520                           ; Regs used in _SplitLoad: [wreg+fsr1l+fsr1h+status,2+status,0]
  9521                           ;SplitLoad@first stored from wreg
  9522     0D47  00F1               	movwf	SplitLoad@first
  9523                           
  9524                           ;Subroutines.c: 12: void SplitLoad(uint8_t first);Subroutines.c: 13: {;Subroutines.c: 14
      +                          :     DisplayBuf[first] = BCDSplit[0];
  9525     0D48  0871               	movf	SplitLoad@first,w
  9526     0D49  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
  9527     0D4A  0086               	movwf	6
  9528     0D4B  0187               	clrf	7
  9529     0D4C  0838               	movf	_BCDSplit,w
  9530     0D4D  0081               	movwf	1
  9531                           
  9532                           ;Subroutines.c: 15:     DisplayBuf[first + 1] = BCDSplit[1];
  9533     0D4E  0871               	movf	SplitLoad@first,w
  9534     0D4F  3E31               	addlw	(low ((_DisplayBuf| 0+1)))& (0+255)
  9535     0D50  0086               	movwf	6
  9536     0D51  0187               	clrf	7
  9537     0D52  0839               	movf	_BCDSplit+1,w
  9538     0D53  0081               	movwf	1
  9539     0D54  0008               	return
  9540     0D55                     __end_of_SplitLoad:
  9541                           
  9542                           	psect	text27
  9543     0DB1                     __ptext27:	
  9544 ;; *************** function _I2CWrite *****************
  9545 ;; Defined at:
  9546 ;;		line 411 in file "Subroutines.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;  reg             1    wreg     unsigned char 
  9549 ;;  data            1   13[BANK0 ] unsigned char 
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;  reg             1    3[COMMON] unsigned char 
  9552 ;; Return value:  Size  Location     Type
  9553 ;;                  1    wreg      void 
  9554 ;; Registers used:
  9555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9556 ;; Tracked objects:
  9557 ;;		On entry : 3F/0
  9558 ;;		On exit  : 3F/3
  9559 ;;		Unchanged: 0/0
  9560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9561 ;;      Params:         0       1       0       0       0       0       0       0
  9562 ;;      Locals:         1       0       0       0       0       0       0       0
  9563 ;;      Temps:          0       0       0       0       0       0       0       0
  9564 ;;      Totals:         1       1       0       0       0       0       0       0
  9565 ;;Total ram usage:        2 bytes
  9566 ;; Hardware stack levels used: 1
  9567 ;; Hardware stack levels required when called: 7
  9568 ;; This function calls:
  9569 ;;		_I2CClose
  9570 ;;		_I2CFail
  9571 ;;		_I2CIrqWait
  9572 ;;		_I2COpen
  9573 ;; This function is called by:
  9574 ;;		_Startup
  9575 ;;		_main
  9576 ;;		_BCDSetInc
  9577 ;; This function uses a non-reentrant model
  9578 ;;
  9579                           
  9580     0DB1                     _I2CWrite:	
  9581                           ;psect for function _I2CWrite
  9582                           
  9583                           
  9584                           ;incstack = 0
  9585                           ; Regs used in _I2CWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9586                           ;I2CWrite@reg stored from wreg
  9587     0DB1  00F3               	movwf	I2CWrite@reg
  9588                           
  9589                           ;Subroutines.c: 411: void I2CWrite(uint8_t reg, uint8_t data);Subroutines.c: 412: {;Subr
      +                          outines.c: 413:     I2COpen(&reg);
  9590     0DB2  3073               	movlw	(low (I2CWrite@reg| 0))& (0+255)
  9591     0DB3  318E  2669  318D   	fcall	_I2COpen
  9592                           
  9593                           ;Subroutines.c: 414:     SSP1BUF = data;
  9594     0DB6  0140               	movlb	0	; select bank0
  9595     0DB7  0860               	movf	I2CWrite@data,w
  9596     0DB8  0143               	movlb	3	; select bank3
  9597     0DB9  008C               	movwf	12	;volatile
  9598                           
  9599                           ;Subroutines.c: 415:     if (SSP1CON2bits.ACKSTAT)
  9600     0DBA  1F11               	btfss	17,6	;volatile
  9601     0DBB  2DBF               	goto	l5227
  9602                           
  9603                           ;Subroutines.c: 416:         I2CFail();
  9604     0DBC  318D  252D  318D   	fcall	_I2CFail
  9605     0DBF                     l5227:
  9606                           
  9607                           ;Subroutines.c: 417:     I2CIrqWait();
  9608     0DBF  318C  249D  318D   	fcall	_I2CIrqWait
  9609                           
  9610                           ;Subroutines.c: 418:     I2CClose();
  9611     0DC2  318C  24BA         	fcall	_I2CClose
  9612     0DC4  0008               	return
  9613     0DC5                     __end_of_I2CWrite:
  9614                           
  9615                           	psect	text28
  9616     0F05                     __ptext28:	
  9617 ;; *************** function _I2CRead *****************
  9618 ;; Defined at:
  9619 ;;		line 388 in file "Subroutines.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;  reg             1    wreg     unsigned char 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  reg             1    3[COMMON] unsigned char 
  9624 ;;  receiveddata    1    4[COMMON] unsigned char 
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  1    wreg      unsigned char 
  9627 ;; Registers used:
  9628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 3F/3
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9634 ;;      Params:         0       0       0       0       0       0       0       0
  9635 ;;      Locals:         2       0       0       0       0       0       0       0
  9636 ;;      Temps:          0       0       0       0       0       0       0       0
  9637 ;;      Totals:         2       0       0       0       0       0       0       0
  9638 ;;Total ram usage:        2 bytes
  9639 ;; Hardware stack levels used: 1
  9640 ;; Hardware stack levels required when called: 7
  9641 ;; This function calls:
  9642 ;;		_I2CClose
  9643 ;;		_I2CFail
  9644 ;;		_I2CIrqWait
  9645 ;;		_I2COpen
  9646 ;; This function is called by:
  9647 ;;		_Startup
  9648 ;;		_main
  9649 ;;		_DateDisplay
  9650 ;;		_BCDSetInc
  9651 ;; This function uses a non-reentrant model
  9652 ;;
  9653                           
  9654     0F05                     _I2CRead:	
  9655                           ;psect for function _I2CRead
  9656                           
  9657                           
  9658                           ;incstack = 0
  9659                           ; Regs used in _I2CRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9660                           ;I2CRead@reg stored from wreg
  9661     0F05  00F3               	movwf	I2CRead@reg
  9662                           
  9663                           ;Subroutines.c: 388: uint8_t I2CRead(uint8_t reg);Subroutines.c: 389: {;Subroutines.c: 3
      +                          90:     uint8_t receiveddata;;Subroutines.c: 392:     I2COpen(&reg);
  9664     0F06  3073               	movlw	(low (I2CRead@reg| 0))& (0+255)
  9665     0F07  318E  2669  318F   	fcall	_I2COpen
  9666                           
  9667                           ;Subroutines.c: 393:     SSP1CON2bits.PEN = 1;
  9668     0F0A  1511               	bsf	17,2	;volatile
  9669                           
  9670                           ;Subroutines.c: 394:     I2CIrqWait();
  9671     0F0B  318C  249D  318F   	fcall	_I2CIrqWait
  9672                           
  9673                           ;Subroutines.c: 395:     SSP1CON2bits.SEN = 1;
  9674     0F0E  0143               	movlb	3	; select bank3
  9675     0F0F  1411               	bsf	17,0	;volatile
  9676                           
  9677                           ;Subroutines.c: 396:     I2CIrqWait();
  9678     0F10  318C  249D  318F   	fcall	_I2CIrqWait
  9679                           
  9680                           ;Subroutines.c: 397:     SSP1BUF = (0b0110010 << 1 | 1);
  9681     0F13  3065               	movlw	101
  9682     0F14  0143               	movlb	3	; select bank3
  9683     0F15  008C               	movwf	12	;volatile
  9684                           
  9685                           ;Subroutines.c: 398:     I2CIrqWait();
  9686     0F16  318C  249D  318F   	fcall	_I2CIrqWait
  9687                           
  9688                           ;Subroutines.c: 399:     if (SSP1CON2bits.ACKSTAT)
  9689     0F19  0143               	movlb	3	; select bank3
  9690     0F1A  1F11               	btfss	17,6	;volatile
  9691     0F1B  2F1F               	goto	l5201
  9692                           
  9693                           ;Subroutines.c: 400:         I2CFail();
  9694     0F1C  318D  252D  318F   	fcall	_I2CFail
  9695     0F1F                     l5201:
  9696                           
  9697                           ;Subroutines.c: 401:     SSP1CON2bits.RCEN = 1;
  9698     0F1F  0143               	movlb	3	; select bank3
  9699     0F20  1591               	bsf	17,3	;volatile
  9700                           
  9701                           ;Subroutines.c: 402:     I2CIrqWait();
  9702     0F21  318C  249D  318F   	fcall	_I2CIrqWait
  9703                           
  9704                           ;Subroutines.c: 403:     receiveddata = SSP1BUF;
  9705     0F24  0143               	movlb	3	; select bank3
  9706     0F25  080C               	movf	12,w	;volatile
  9707     0F26  00F4               	movwf	I2CRead@receiveddata
  9708                           
  9709                           ;Subroutines.c: 404:     SSP1CON2bits.ACKDT = 1;
  9710     0F27  1691               	bsf	17,5	;volatile
  9711                           
  9712                           ;Subroutines.c: 405:     SSP1CON2bits.ACKEN = 1;
  9713     0F28  1611               	bsf	17,4	;volatile
  9714                           
  9715                           ;Subroutines.c: 406:     I2CIrqWait();
  9716     0F29  318C  249D  318F   	fcall	_I2CIrqWait
  9717                           
  9718                           ;Subroutines.c: 407:     I2CClose();
  9719     0F2C  318C  24BA         	fcall	_I2CClose
  9720                           
  9721                           ;Subroutines.c: 408:     return receiveddata;
  9722     0F2E  0874               	movf	I2CRead@receiveddata,w
  9723     0F2F  0008               	return
  9724     0F30                     __end_of_I2CRead:
  9725                           
  9726                           	psect	text29
  9727     0E69                     __ptext29:	
  9728 ;; *************** function _I2COpen *****************
  9729 ;; Defined at:
  9730 ;;		line 421 in file "Subroutines.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;  regptr          1    wreg     PTR unsigned char 
  9733 ;;		 -> I2CWrite@reg(1), I2CRead@reg(1), 
  9734 ;; Auto vars:     Size  Location     Type
  9735 ;;  regptr          1    2[COMMON] PTR unsigned char 
  9736 ;;		 -> I2CWrite@reg(1), I2CRead@reg(1), 
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      void 
  9739 ;; Registers used:
  9740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/0
  9743 ;;		On exit  : 3F/3
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9746 ;;      Params:         0       0       0       0       0       0       0       0
  9747 ;;      Locals:         1       0       0       0       0       0       0       0
  9748 ;;      Temps:          0       0       0       0       0       0       0       0
  9749 ;;      Totals:         1       0       0       0       0       0       0       0
  9750 ;;Total ram usage:        1 bytes
  9751 ;; Hardware stack levels used: 1
  9752 ;; Hardware stack levels required when called: 6
  9753 ;; This function calls:
  9754 ;;		_I2CFail
  9755 ;;		_I2CIrqWait
  9756 ;; This function is called by:
  9757 ;;		_I2CRead
  9758 ;;		_I2CWrite
  9759 ;; This function uses a non-reentrant model
  9760 ;;
  9761                           
  9762     0E69                     _I2COpen:	
  9763                           ;psect for function _I2COpen
  9764                           
  9765                           
  9766                           ;incstack = 0
  9767                           ; Regs used in _I2COpen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9768                           ;I2COpen@regptr stored from wreg
  9769     0E69  00F2               	movwf	I2COpen@regptr
  9770                           
  9771                           ;Subroutines.c: 421: void I2COpen(uint8_t *regptr);Subroutines.c: 422: {;Subroutines.c: 
      +                          423:     PIR3bits.SSP1IF = 0;
  9772     0E6A  014E               	movlb	14	; select bank14
  9773     0E6B  100F               	bcf	15,0	;volatile
  9774                           
  9775                           ;Subroutines.c: 424:     PIE3bits.SSP1IE = 1;
  9776     0E6C  1419               	bsf	25,0	;volatile
  9777                           
  9778                           ;Subroutines.c: 425:     SSP1CON1bits.SSPEN = 1;
  9779     0E6D  0143               	movlb	3	; select bank3
  9780     0E6E  1690               	bsf	16,5	;volatile
  9781                           
  9782                           ;Subroutines.c: 426:     SSP1CON2bits.SEN = 1;
  9783     0E6F  1411               	bsf	17,0	;volatile
  9784                           
  9785                           ;Subroutines.c: 427:     I2CIrqWait();
  9786     0E70  318C  249D  318E   	fcall	_I2CIrqWait
  9787                           
  9788                           ;Subroutines.c: 428:     SSP1BUF = (0b0110010 << 1);
  9789     0E73  3064               	movlw	100
  9790     0E74  0143               	movlb	3	; select bank3
  9791     0E75  008C               	movwf	12	;volatile
  9792                           
  9793                           ;Subroutines.c: 429:     I2CIrqWait();
  9794     0E76  318C  249D  318E   	fcall	_I2CIrqWait
  9795                           
  9796                           ;Subroutines.c: 430:     if (SSP1CON2bits.ACKSTAT)
  9797     0E79  0143               	movlb	3	; select bank3
  9798     0E7A  1F11               	btfss	17,6	;volatile
  9799     0E7B  2E7E               	goto	l5165
  9800                           
  9801                           ;Subroutines.c: 431:         I2CFail();
  9802     0E7C  318D  252D         	fcall	_I2CFail
  9803     0E7E                     l5165:
  9804                           
  9805                           ;Subroutines.c: 432:     SSP1BUF = *regptr;
  9806     0E7E  0872               	movf	I2COpen@regptr,w
  9807     0E7F  0086               	movwf	6
  9808     0E80  0187               	clrf	7
  9809     0E81  0801               	movf	1,w
  9810     0E82  0143               	movlb	3	; select bank3
  9811     0E83  008C               	movwf	12	;volatile
  9812     0E84  0008               	return
  9813     0E85                     __end_of_I2COpen:
  9814                           
  9815                           	psect	text30
  9816     0D2D                     __ptext30:	
  9817 ;; *************** function _I2CFail *****************
  9818 ;; Defined at:
  9819 ;;		line 449 in file "Subroutines.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;		None
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;		None
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  1    wreg      void 
  9826 ;; Registers used:
  9827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9828 ;; Tracked objects:
  9829 ;;		On entry : 3F/3
  9830 ;;		On exit  : 3C/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9833 ;;      Params:         0       0       0       0       0       0       0       0
  9834 ;;      Locals:         0       0       0       0       0       0       0       0
  9835 ;;      Temps:          0       0       0       0       0       0       0       0
  9836 ;;      Totals:         0       0       0       0       0       0       0       0
  9837 ;;Total ram usage:        0 bytes
  9838 ;; Hardware stack levels used: 1
  9839 ;; Hardware stack levels required when called: 5
  9840 ;; This function calls:
  9841 ;;		_EmptyTubes
  9842 ;;		_Loader
  9843 ;; This function is called by:
  9844 ;;		_I2CRead
  9845 ;;		_I2CWrite
  9846 ;;		_I2COpen
  9847 ;; This function uses a non-reentrant model
  9848 ;;
  9849                           
  9850     0D2D                     _I2CFail:	
  9851                           ;psect for function _I2CFail
  9852                           
  9853                           
  9854                           ;Subroutines.c: 451:     EmptyTubes();
  9855                           
  9856                           ;incstack = 0
  9857                           ; Regs used in _I2CFail: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9858     0D2D  318D  2572  318D   	fcall	_EmptyTubes
  9859                           
  9860                           ;Subroutines.c: 452:     DisplayBuf[5] = 6;
  9861     0D30  3006               	movlw	6
  9862     0D31  00B5               	movwf	_DisplayBuf+5
  9863                           
  9864                           ;Subroutines.c: 453:     DisplayBuf[6] = 6;
  9865     0D32  3006               	movlw	6
  9866     0D33  00B6               	movwf	_DisplayBuf+6
  9867                           
  9868                           ;Subroutines.c: 454:     DisplayBuf[7] = 6;
  9869     0D34  3006               	movlw	6
  9870     0D35  00B7               	movwf	_DisplayBuf+7
  9871                           
  9872                           ;Subroutines.c: 455:     Loader();
  9873     0D36  318F  27C8  318D   	fcall	_Loader
  9874     0D39                     l1469:	
  9875                           ;Subroutines.c: 456:     while (1){}
  9876                           
  9877     0D39  2D39               	goto	l1469
  9878     0D3A                     __end_of_I2CFail:
  9879                           
  9880                           	psect	text31
  9881     0CBA                     __ptext31:	
  9882 ;; *************** function _I2CClose *****************
  9883 ;; Defined at:
  9884 ;;		line 435 in file "Subroutines.c"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;		None
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;		None
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  1    wreg      void 
  9891 ;; Registers used:
  9892 ;;		status,2, status,0, pclath, cstack
  9893 ;; Tracked objects:
  9894 ;;		On entry : 3F/E
  9895 ;;		On exit  : 3F/3
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9898 ;;      Params:         0       0       0       0       0       0       0       0
  9899 ;;      Locals:         0       0       0       0       0       0       0       0
  9900 ;;      Temps:          0       0       0       0       0       0       0       0
  9901 ;;      Totals:         0       0       0       0       0       0       0       0
  9902 ;;Total ram usage:        0 bytes
  9903 ;; Hardware stack levels used: 1
  9904 ;; Hardware stack levels required when called: 5
  9905 ;; This function calls:
  9906 ;;		_I2CIrqWait
  9907 ;; This function is called by:
  9908 ;;		_I2CRead
  9909 ;;		_I2CWrite
  9910 ;; This function uses a non-reentrant model
  9911 ;;
  9912                           
  9913     0CBA                     _I2CClose:	
  9914                           ;psect for function _I2CClose
  9915                           
  9916                           
  9917                           ;Subroutines.c: 437:     SSP1CON2bits.PEN = 1;
  9918                           
  9919                           ;incstack = 0
  9920                           ; Regs used in _I2CClose: [status,2+status,0+pclath+cstack]
  9921     0CBA  0143               	movlb	3	; select bank3
  9922     0CBB  1511               	bsf	17,2	;volatile
  9923                           
  9924                           ;Subroutines.c: 438:     I2CIrqWait();
  9925     0CBC  318C  249D         	fcall	_I2CIrqWait
  9926                           
  9927                           ;Subroutines.c: 439:     PIE3bits.SSP1IE = 0;
  9928     0CBE  1019               	bcf	25,0	;volatile
  9929                           
  9930                           ;Subroutines.c: 440:     SSP1CON1bits.SSPEN = 0;
  9931     0CBF  0143               	movlb	3	; select bank3
  9932     0CC0  1290               	bcf	16,5	;volatile
  9933     0CC1  0008               	return
  9934     0CC2                     __end_of_I2CClose:
  9935                           
  9936                           	psect	text32
  9937     0C9D                     __ptext32:	
  9938 ;; *************** function _I2CIrqWait *****************
  9939 ;; Defined at:
  9940 ;;		line 443 in file "Subroutines.c"
  9941 ;; Parameters:    Size  Location     Type
  9942 ;;		None
  9943 ;; Auto vars:     Size  Location     Type
  9944 ;;		None
  9945 ;; Return value:  Size  Location     Type
  9946 ;;                  1    wreg      void 
  9947 ;; Registers used:
  9948 ;;		None
  9949 ;; Tracked objects:
  9950 ;;		On entry : 3C/3
  9951 ;;		On exit  : 3F/E
  9952 ;;		Unchanged: 0/0
  9953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9954 ;;      Params:         0       0       0       0       0       0       0       0
  9955 ;;      Locals:         0       0       0       0       0       0       0       0
  9956 ;;      Temps:          0       0       0       0       0       0       0       0
  9957 ;;      Totals:         0       0       0       0       0       0       0       0
  9958 ;;Total ram usage:        0 bytes
  9959 ;; Hardware stack levels used: 1
  9960 ;; Hardware stack levels required when called: 4
  9961 ;; This function calls:
  9962 ;;		Nothing
  9963 ;; This function is called by:
  9964 ;;		_I2CRead
  9965 ;;		_I2CWrite
  9966 ;;		_I2COpen
  9967 ;;		_I2CClose
  9968 ;; This function uses a non-reentrant model
  9969 ;;
  9970                           
  9971     0C9D                     _I2CIrqWait:	
  9972                           ;psect for function _I2CIrqWait
  9973                           
  9974     0C9D                     l1463:	
  9975                           ;Subroutines.c: 445:     while (!PIR3bits.SSP1IF);
  9976                           
  9977                           ;incstack = 0
  9978                           ; Regs used in _I2CIrqWait: []
  9979                           
  9980     0C9D  014E               	movlb	14	; select bank14
  9981     0C9E  1C0F               	btfss	15,0	;volatile
  9982     0C9F  2C9D               	goto	l1463
  9983                           
  9984                           ;Subroutines.c: 446:     PIR3bits.SSP1IF = 0;
  9985     0CA0  100F               	bcf	15,0	;volatile
  9986     0CA1  0008               	return
  9987     0CA2                     __end_of_I2CIrqWait:
  9988                           
  9989                           	psect	text33
  9990     0D81                     __ptext33:	
  9991 ;; *************** function _BCD2Bin *****************
  9992 ;; Defined at:
  9993 ;;		line 514 in file "Subroutines.c"
  9994 ;; Parameters:    Size  Location     Type
  9995 ;;  input           1    wreg     unsigned char 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  input           1    2[COMMON] unsigned char 
  9998 ;; Return value:  Size  Location     Type
  9999 ;;                  1    wreg      void 
 10000 ;; Registers used:
 10001 ;;		wreg, status,2
 10002 ;; Tracked objects:
 10003 ;;		On entry : 3C/0
 10004 ;;		On exit  : 3F/0
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10007 ;;      Params:         0       0       0       0       0       0       0       0
 10008 ;;      Locals:         1       0       0       0       0       0       0       0
 10009 ;;      Temps:          1       0       0       0       0       0       0       0
 10010 ;;      Totals:         2       0       0       0       0       0       0       0
 10011 ;;Total ram usage:        2 bytes
 10012 ;; Hardware stack levels used: 1
 10013 ;; Hardware stack levels required when called: 4
 10014 ;; This function calls:
 10015 ;;		Nothing
 10016 ;; This function is called by:
 10017 ;;		_main
 10018 ;;		_DateDisplay
 10019 ;;		_BCDSetInc
 10020 ;; This function uses a non-reentrant model
 10021 ;;
 10022                           
 10023     0D81                     _BCD2Bin:	
 10024                           ;psect for function _BCD2Bin
 10025                           
 10026                           
 10027                           ;incstack = 0
 10028                           ; Regs used in _BCD2Bin: [wreg+status,2]
 10029                           ;BCD2Bin@input stored from wreg
 10030     0D81  00F2               	movwf	BCD2Bin@input
 10031                           
 10032                           ;Subroutines.c: 514: void BCD2Bin(uint8_t input);Subroutines.c: 515: {;Subroutines.c: 51
      +                          6:     BCDSplit[1] = input & 0xF;
 10033     0D82  0872               	movf	BCD2Bin@input,w
 10034     0D83  390F               	andlw	15
 10035     0D84  0140               	movlb	0	; select bank0
 10036     0D85  00B9               	movwf	_BCDSplit+1
 10037                           
 10038                           ;Subroutines.c: 517:     input = (input >> 4) | (input << 4);
 10039     0D86  3004               	movlw	4
 10040     0D87  00F1               	movwf	??_BCD2Bin
 10041     0D88                     u1775:
 10042     0D88  0C72               	rrf	BCD2Bin@input,w
 10043     0D89  0CF2               	rrf	BCD2Bin@input,f
 10044     0D8A  0BF1               	decfsz	??_BCD2Bin,f
 10045     0D8B  2D88               	goto	u1775
 10046                           
 10047                           ;Subroutines.c: 518:     BCDSplit[0] = input & 0xF;
 10048     0D8C  0872               	movf	BCD2Bin@input,w
 10049     0D8D  390F               	andlw	15
 10050     0D8E  00B8               	movwf	_BCDSplit
 10051     0D8F  0008               	return
 10052     0D90                     __end_of_BCD2Bin:
 10053                           
 10054                           	psect	text34
 10055     04CF                     __ptext34:	
 10056 ;; *************** function _DMDisplay *****************
 10057 ;; Defined at:
 10058 ;;		line 331 in file "main.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;		None
 10061 ;; Auto vars:     Size  Location     Type
 10062 ;;  seedadr         1   19[BANK0 ] unsigned char 
 10063 ;; Return value:  Size  Location     Type
 10064 ;;                  1    wreg      void 
 10065 ;; Registers used:
 10066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10067 ;; Tracked objects:
 10068 ;;		On entry : 0/0
 10069 ;;		On exit  : 3F/0
 10070 ;;		Unchanged: 0/0
 10071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10072 ;;      Params:         0       0       0       0       0       0       0       0
 10073 ;;      Locals:         0       1       0       0       0       0       0       0
 10074 ;;      Temps:          0       1       0       0       0       0       0       0
 10075 ;;      Totals:         0       2       0       0       0       0       0       0
 10076 ;;Total ram usage:        2 bytes
 10077 ;; Hardware stack levels used: 1
 10078 ;; Hardware stack levels required when called: 8
 10079 ;; This function calls:
 10080 ;;		_Buttons
 10081 ;;		_DisplayBufSave
 10082 ;;		_EEPROMBufferFill
 10083 ;;		_EmptyTubes
 10084 ;;		_FixedWL
 10085 ;;		_Loader
 10086 ;;		_RandomWL
 10087 ;;		_TubeValuePicker
 10088 ;; This function is called by:
 10089 ;;		_main
 10090 ;; This function uses a non-reentrant model
 10091 ;;
 10092                           
 10093     04CF                     _DMDisplay:	
 10094                           ;psect for function _DMDisplay
 10095                           
 10096                           
 10097                           ;main.c: 335:     (INTCONbits.GIE = 0);
 10098                           
 10099                           ;incstack = 0
 10100                           ; Regs used in _DMDisplay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10101     04CF  138B               	bcf	11,7	;volatile
 10102                           
 10103                           ;main.c: 336:     GoDM = 0;
 10104     04D0  11FC               	bcf	_GoDM/(0+8),_GoDM& (0+7)
 10105                           
 10106                           ;main.c: 337:     EEPROMBufferFill(seedadr);
 10107     04D1  3077               	movlw	119
 10108     04D2  318D  25D9  3184   	fcall	_EEPROMBufferFill
 10109                           
 10110                           ;main.c: 338:     Loader();
 10111     04D5  318F  27C8  3184   	fcall	_Loader
 10112                           
 10113                           ;main.c: 339:     seedadr = 0x07;
 10114     04D8  3007               	movlw	7
 10115     04D9  00E6               	movwf	DMDisplay@seedadr
 10116     04DA  2CDE               	goto	l5865
 10117     04DB                     l5869:
 10118                           
 10119                           ;main.c: 344:             RandomWL();
 10120     04DB  3182  22A6  3184   	fcall	_RandomWL
 10121     04DE                     l5865:
 10122                           
 10123                           ;main.c: 341:     {;main.c: 342:         Temp = Buttons();
 10124     04DE  318F  2792  3184   	fcall	_Buttons
 10125     04E1  00C7               	movwf	_Temp
 10126                           
 10127                           ;main.c: 343:         if (Temp == 1)
 10128     04E2  0347               	decf	_Temp,w
 10129     04E3  1903               	btfsc	3,2
 10130     04E4  2CDB               	goto	l5869
 10131     04E5  3002               	movlw	2
 10132     04E6  0647               	xorwf	_Temp,w
 10133     04E7  1D03               	btfss	3,2
 10134     04E8  0008               	return
 10135     04E9                     l5873:
 10136                           
 10137                           ;main.c: 348:             {;main.c: 349:                 if (seedadr == 0x7F)
 10138     04E9  307F               	movlw	127
 10139     04EA  0666               	xorwf	DMDisplay@seedadr,w
 10140     04EB  1903               	btfsc	3,2
 10141     04EC  2CDE               	goto	l5865
 10142                           
 10143                           ;main.c: 351:                 EEPROMBufferFill(seedadr);
 10144     04ED  0866               	movf	DMDisplay@seedadr,w
 10145     04EE  318D  25D9  3184   	fcall	_EEPROMBufferFill
 10146                           
 10147                           ;main.c: 352:                 DisplayBufSave();
 10148     04F1  318D  259F  3184   	fcall	_DisplayBufSave
 10149                           
 10150                           ;main.c: 353:                 FixedWL();
 10151     04F4  3185  253C  3184   	fcall	_FixedWL
 10152                           
 10153                           ;main.c: 354:                 seedadr += 8;
 10154     04F7  3008               	movlw	8
 10155     04F8  0140               	movlb	0	; select bank0
 10156     04F9  00E5               	movwf	??_DMDisplay
 10157     04FA  0865               	movf	??_DMDisplay,w
 10158     04FB  07E6               	addwf	DMDisplay@seedadr,f
 10159                           
 10160                           ;main.c: 355:                 Temp = Buttons();
 10161     04FC  318F  2792  3184   	fcall	_Buttons
 10162     04FF  00C7               	movwf	_Temp
 10163                           
 10164                           ;main.c: 356:                 if (Temp == 1)
 10165     0500  0347               	decf	_Temp,w
 10166     0501  1903               	btfsc	3,2
 10167     0502  2CE9               	goto	l5873
 10168     0503  3002               	movlw	2
 10169     0504  0647               	xorwf	_Temp,w
 10170     0505  1903               	btfsc	3,2
 10171     0506  0008               	return
 10172                           
 10173                           ;main.c: 361:                 {;main.c: 362:                     EmptyTubes();
 10174     0507  318D  2572  3184   	fcall	_EmptyTubes
 10175                           
 10176                           ;main.c: 363:                     DisplayBuf[1] = 0x52;
 10177     050A  3052               	movlw	82
 10178     050B  00B1               	movwf	_DisplayBuf+1
 10179                           
 10180                           ;main.c: 364:                     TubeValuePicker(0);
 10181     050C  3000               	movlw	0
 10182     050D  3186  2603  3184   	fcall	_TubeValuePicker
 10183                           
 10184                           ;main.c: 365:                     for (Pos=9; Pos--;)
 10185     0510  3009               	movlw	9
 10186     0511  00CB               	movwf	_Pos
 10187     0512                     l5911:
 10188     0512  3001               	movlw	1
 10189     0513  0140               	movlb	0	; select bank0
 10190     0514  02CB               	subwf	_Pos,f
 10191     0515  0A4B               	incf	_Pos,w
 10192     0516  1903               	btfsc	3,2
 10193     0517  2D26               	goto	l5913
 10194                           
 10195                           ;main.c: 366:                     {;main.c: 367:                         LATC ^= 0b00010
      +                          000;
 10196     0518  3010               	movlw	16
 10197     0519  00E5               	movwf	??_DMDisplay
 10198     051A  0865               	movf	??_DMDisplay,w
 10199     051B  069A               	xorwf	26,f	;volatile
 10200                           
 10201                           ;main.c: 368:                         _delay(28000);
 10202     051C  3025               	movlw	37
 10203     051D  0140               	movlb	0	; select bank0
 10204     051E  00E5               	movwf	??_DMDisplay
 10205     051F  305B               	movlw	91
 10206     0520                     u4727:
 10207     0520  0B89               	decfsz	9,f
 10208     0521  2D20               	goto	u4727
 10209     0522  0BE5               	decfsz	??_DMDisplay,f
 10210     0523  2D20               	goto	u4727
 10211     0524  3200               	nop2
 10212     0525  2D12               	goto	l5911
 10213     0526                     l5913:
 10214                           
 10215                           ;main.c: 370:                     DisplayBufSave();
 10216     0526  318D  259F  3184   	fcall	_DisplayBufSave
 10217     0529                     l5915:
 10218                           
 10219                           ;main.c: 372:                     {;main.c: 373:                         Temp = Buttons(
      +                          );
 10220     0529  318F  2792  3184   	fcall	_Buttons
 10221     052C  00C7               	movwf	_Temp
 10222                           
 10223                           ;main.c: 374:                         if (Temp == 1)
 10224     052D  0347               	decf	_Temp,w
 10225     052E  1D03               	btfss	3,2
 10226     052F  0008               	return
 10227                           
 10228                           ;main.c: 375:                         {;main.c: 376:                             if (Tog
      +                          gle == 1)
 10229     0530  1D7C               	btfss	_Toggle/(0+8),_Toggle& (0+7)
 10230     0531  2D36               	goto	l5923
 10231                           
 10232                           ;main.c: 377:                                 FixedWL();
 10233     0532  3185  253C  3184   	fcall	_FixedWL
 10234     0535  2D39               	goto	l5925
 10235     0536                     l5923:
 10236                           
 10237                           ;main.c: 379:                                 RandomWL();
 10238     0536  3182  22A6  3184   	fcall	_RandomWL
 10239     0539                     l5925:
 10240                           
 10241                           ;main.c: 380:                             Toggle ^= 1;
 10242     0539  3004               	movlw	(0+1) shl (_Toggle& (0+7))
 10243     053A  06FC               	xorwf	_Toggle/(0+8),f
 10244                           
 10245                           ;main.c: 381:                         }
 10246     053B  2D29               	goto	l5915
 10247     053C                     __end_of_DMDisplay:
 10248                           
 10249                           	psect	text35
 10250     0603                     __ptext35:	
 10251 ;; *************** function _TubeValuePicker *****************
 10252 ;; Defined at:
 10253 ;;		line 71 in file "Subroutines.c"
 10254 ;; Parameters:    Size  Location     Type
 10255 ;;  start           1    wreg     unsigned char 
 10256 ;; Auto vars:     Size  Location     Type
 10257 ;;  start           1    5[COMMON] unsigned char 
 10258 ;; Return value:  Size  Location     Type
 10259 ;;                  1    wreg      void 
 10260 ;; Registers used:
 10261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10262 ;; Tracked objects:
 10263 ;;		On entry : 3F/0
 10264 ;;		On exit  : 3F/0
 10265 ;;		Unchanged: 0/0
 10266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10267 ;;      Params:         0       0       0       0       0       0       0       0
 10268 ;;      Locals:         1       0       0       0       0       0       0       0
 10269 ;;      Temps:          1       0       0       0       0       0       0       0
 10270 ;;      Totals:         2       0       0       0       0       0       0       0
 10271 ;;Total ram usage:        2 bytes
 10272 ;; Hardware stack levels used: 1
 10273 ;; Hardware stack levels required when called: 6
 10274 ;; This function calls:
 10275 ;;		_Buttons
 10276 ;;		_Loader
 10277 ;; This function is called by:
 10278 ;;		_DMDisplay
 10279 ;;		_Settings
 10280 ;; This function uses a non-reentrant model
 10281 ;;
 10282                           
 10283     0603                     _TubeValuePicker:	
 10284                           ;psect for function _TubeValuePicker
 10285                           
 10286                           
 10287                           ;incstack = 0
 10288                           ; Regs used in _TubeValuePicker: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10289                           ;TubeValuePicker@start stored from wreg
 10290     0603  00F5               	movwf	TubeValuePicker@start
 10291                           
 10292                           ;Subroutines.c: 71: void TubeValuePicker (uint8_t start);Subroutines.c: 72: {;Subroutine
      +                          s.c: 73:     if (TimeSet)
 10293     0604  18FC               	btfsc	_TimeSet/(0+8),_TimeSet& (0+7)
 10294     0605  2E0B               	goto	l5393
 10295     0606  2E19               	goto	l5405
 10296     0607                     l5399:
 10297                           
 10298                           ;Subroutines.c: 80:                 DisplayBuf[2] = 0x52;
 10299     0607  3052               	movlw	82
 10300     0608  2E0A               	goto	L7
 10301     0609                     l5403:
 10302                           
 10303                           ;Subroutines.c: 82:                 DisplayBuf[2] = 10;
 10304     0609  300A               	movlw	10
 10305     060A                     L7:
 10306     060A  00B2               	movwf	_DisplayBuf+2
 10307     060B                     l5393:
 10308                           
 10309                           ;Subroutines.c: 76:         {;Subroutines.c: 77:             Loader();
 10310     060B  318F  27C8  3186   	fcall	_Loader
 10311                           
 10312                           ;Subroutines.c: 78:             Temp = Buttons();
 10313     060E  318F  2792  3186   	fcall	_Buttons
 10314     0611  00C7               	movwf	_Temp
 10315                           
 10316                           ;Subroutines.c: 79:             if (Temp == 1)
 10317     0612  0347               	decf	_Temp,w
 10318     0613  1903               	btfsc	3,2
 10319     0614  2E07               	goto	l5399
 10320     0615  3002               	movlw	2
 10321     0616  0647               	xorwf	_Temp,w
 10322     0617  1903               	btfsc	3,2
 10323     0618  2E09               	goto	l5403
 10324     0619                     l5405:
 10325                           
 10326                           ;Subroutines.c: 87:     for (Pos=start; Pos<8; Pos++)
 10327     0619  0875               	movf	TubeValuePicker@start,w
 10328     061A  00CB               	movwf	_Pos
 10329     061B                     l5429:
 10330     061B  3008               	movlw	8
 10331     061C  024B               	subwf	_Pos,w
 10332     061D  1803               	btfsc	3,0
 10333     061E  0008               	return
 10334                           
 10335                           ;Subroutines.c: 88:     {;Subroutines.c: 89:         if (Pos == 1)
 10336     061F  034B               	decf	_Pos,w
 10337     0620  1903               	btfsc	3,2
 10338     0621  2E5A               	goto	l5427
 10339     0622  2E4C               	goto	l5411
 10340     0623                     l5417:
 10341                           
 10342                           ;Subroutines.c: 96:             {;Subroutines.c: 97:                 DisplayBuf[Pos]++;
 10343     0623  3001               	movlw	1
 10344     0624  00F4               	movwf	??_TubeValuePicker
 10345     0625  084B               	movf	_Pos,w
 10346     0626  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10347     0627  0086               	movwf	6
 10348     0628  0187               	clrf	7
 10349     0629  0874               	movf	??_TubeValuePicker,w
 10350     062A  0781               	addwf	1,f
 10351                           
 10352                           ;Subroutines.c: 98:                 if (DisplayBuf[Pos] == 11)
 10353     062B  084B               	movf	_Pos,w
 10354     062C  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10355     062D  0086               	movwf	6
 10356     062E  0187               	clrf	7
 10357     062F  300B               	movlw	11
 10358     0630  0601               	xorwf	1,w
 10359     0631  1D03               	btfss	3,2
 10360     0632  2E4C               	goto	l5411
 10361                           
 10362                           ;Subroutines.c: 99:                     DisplayBuf[Pos] = 0;
 10363     0633  084B               	movf	_Pos,w
 10364     0634  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10365     0635  0086               	movwf	6
 10366     0636  0187               	clrf	7
 10367     0637  0181               	clrf	1
 10368     0638  2E4C               	goto	l5411
 10369     0639                     l5423:
 10370                           
 10371                           ;Subroutines.c: 102:             {;Subroutines.c: 103:                 DisplayBuf[Pos]--
      +                          ;
 10372     0639  084B               	movf	_Pos,w
 10373     063A  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10374     063B  0086               	movwf	6
 10375     063C  0187               	clrf	7
 10376     063D  3001               	movlw	1
 10377     063E  0281               	subwf	1,f
 10378                           
 10379                           ;Subroutines.c: 104:                 if (DisplayBuf[Pos] == 255)
 10380     063F  084B               	movf	_Pos,w
 10381     0640  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10382     0641  0086               	movwf	6
 10383     0642  0187               	clrf	7
 10384     0643  0A01               	incf	1,w
 10385     0644  1D03               	btfss	3,2
 10386     0645  2E4C               	goto	l5411
 10387                           
 10388                           ;Subroutines.c: 105:                     DisplayBuf[Pos] = 10;
 10389     0646  084B               	movf	_Pos,w
 10390     0647  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10391     0648  0086               	movwf	6
 10392     0649  0187               	clrf	7
 10393     064A  300A               	movlw	10
 10394     064B  0081               	movwf	1
 10395     064C                     l5411:
 10396                           
 10397                           ;Subroutines.c: 92:         {;Subroutines.c: 93:             Loader();
 10398     064C  318F  27C8  3186   	fcall	_Loader
 10399                           
 10400                           ;Subroutines.c: 94:             Temp = Buttons();
 10401     064F  318F  2792  3186   	fcall	_Buttons
 10402     0652  00C7               	movwf	_Temp
 10403                           
 10404                           ;Subroutines.c: 95:             if (Temp == 1)
 10405     0653  0347               	decf	_Temp,w
 10406     0654  1903               	btfsc	3,2
 10407     0655  2E23               	goto	l5417
 10408     0656  3002               	movlw	2
 10409     0657  0647               	xorwf	_Temp,w
 10410     0658  1903               	btfsc	3,2
 10411     0659  2E39               	goto	l5423
 10412     065A                     l5427:
 10413     065A  3001               	movlw	1
 10414     065B  00F4               	movwf	??_TubeValuePicker
 10415     065C  0874               	movf	??_TubeValuePicker,w
 10416     065D  07CB               	addwf	_Pos,f
 10417     065E  2E1B               	goto	l5429
 10418     065F                     __end_of_TubeValuePicker:
 10419                           
 10420                           	psect	text36
 10421     0F92                     __ptext36:	
 10422 ;; *************** function _Buttons *****************
 10423 ;; Defined at:
 10424 ;;		line 481 in file "Subroutines.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;		None
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;  presstime       2    2[COMMON] unsigned short 
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  1    wreg      unsigned char 
 10431 ;; Registers used:
 10432 ;;		wreg, status,2, status,0, pclath, cstack
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 3F/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10438 ;;      Params:         0       0       0       0       0       0       0       0
 10439 ;;      Locals:         2       0       0       0       0       0       0       0
 10440 ;;      Temps:          1       0       0       0       0       0       0       0
 10441 ;;      Totals:         3       0       0       0       0       0       0       0
 10442 ;;Total ram usage:        3 bytes
 10443 ;; Hardware stack levels used: 1
 10444 ;; Hardware stack levels required when called: 5
 10445 ;; This function calls:
 10446 ;;		_TMR4_Start
 10447 ;;		_TMR4_Stop
 10448 ;; This function is called by:
 10449 ;;		_DMDisplay
 10450 ;;		_TubeValuePicker
 10451 ;;		_BCDSetInc
 10452 ;;		_OtherSetInc
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456     0F92                     _Buttons:	
 10457                           ;psect for function _Buttons
 10458                           
 10459                           
 10460                           ;Subroutines.c: 483:     uint16_t presstime = 500;
 10461                           
 10462                           ;incstack = 0
 10463                           ; Regs used in _Buttons: [wreg+status,2+status,0+pclath+cstack]
 10464     0F92  30F4               	movlw	244
 10465     0F93  00F2               	movwf	Buttons@presstime
 10466     0F94  3001               	movlw	1
 10467     0F95  00F3               	movwf	Buttons@presstime+1
 10468                           
 10469                           ;Subroutines.c: 484:     buttoncounter = 13;
 10470     0F96  300D               	movlw	13
 10471     0F97  0140               	movlb	0	; select bank0
 10472     0F98  00BE               	movwf	_buttoncounter
 10473     0F99  3000               	movlw	0
 10474     0F9A  00BF               	movwf	_buttoncounter+1
 10475     0F9B                     l5235:
 10476                           
 10477                           ;Subroutines.c: 487:     {;Subroutines.c: 488:         if (PORTCbits.RC0)
 10478     0F9B  1C0E               	btfss	14,0	;volatile
 10479     0F9C  2FBA               	goto	l1485
 10480                           
 10481                           ;Subroutines.c: 489:         {;Subroutines.c: 490:             _delay(10000);
 10482     0F9D  300D               	movlw	13
 10483     0F9E  00F1               	movwf	??_Buttons
 10484     0F9F  30FC               	movlw	252
 10485     0FA0                     u4737:
 10486     0FA0  0B89               	decfsz	9,f
 10487     0FA1  2FA0               	goto	u4737
 10488     0FA2  0BF1               	decfsz	??_Buttons,f
 10489     0FA3  2FA0               	goto	u4737
 10490                           
 10491                           ;Subroutines.c: 491:             TMR4_Start();
 10492     0FA4  318C  248E  318F   	fcall	_TMR4_Start
 10493     0FA7                     l1486:	
 10494                           ;Subroutines.c: 492:             while (PORTCbits.RC0){}
 10495                           
 10496     0FA7  0140               	movlb	0	; select bank0
 10497     0FA8  180E               	btfsc	14,0	;volatile
 10498     0FA9  2FA7               	goto	l1486
 10499                           
 10500                           ;Subroutines.c: 493:             TMR4_Stop();
 10501     0FAA  318C  2491  318F   	fcall	_TMR4_Stop
 10502                           
 10503                           ;Subroutines.c: 494:             if (buttoncounter > presstime)
 10504     0FAD  0140               	movlb	0	; select bank0
 10505     0FAE  083F               	movf	_buttoncounter+1,w
 10506     0FAF  0273               	subwf	Buttons@presstime+1,w
 10507     0FB0  1D03               	skipz
 10508     0FB1  2FB4               	goto	u3385
 10509     0FB2  083E               	movf	_buttoncounter,w
 10510     0FB3  0272               	subwf	Buttons@presstime,w
 10511     0FB4                     u3385:
 10512     0FB4  1803               	skipnc
 10513     0FB5  2FB8               	goto	l5249
 10514                           
 10515                           ;Subroutines.c: 495:             {;Subroutines.c: 496:                 return 2;
 10516     0FB6  3002               	movlw	2
 10517     0FB7  0008               	return
 10518     0FB8                     l5249:
 10519                           
 10520                           ;Subroutines.c: 498:             return 1;
 10521     0FB8  3001               	movlw	1
 10522     0FB9  0008               	return
 10523     0FBA                     l1485:	
 10524                           ;Subroutines.c: 500:         else if (PORTCbits.RC1)
 10525                           
 10526     0FBA  1C8E               	btfss	14,1	;volatile
 10527     0FBB  2F9B               	goto	l5235
 10528                           
 10529                           ;Subroutines.c: 501:         {;Subroutines.c: 502:             _delay(10000);
 10530     0FBC  300D               	movlw	13
 10531     0FBD  00F1               	movwf	??_Buttons
 10532     0FBE  30FC               	movlw	252
 10533     0FBF                     u4747:
 10534     0FBF  0B89               	decfsz	9,f
 10535     0FC0  2FBF               	goto	u4747
 10536     0FC1  0BF1               	decfsz	??_Buttons,f
 10537     0FC2  2FBF               	goto	u4747
 10538     0FC3                     l1493:	
 10539                           ;Subroutines.c: 503:             while (PORTCbits.RC1){}
 10540                           
 10541     0FC3  0140               	movlb	0	; select bank0
 10542     0FC4  188E               	btfsc	14,1	;volatile
 10543     0FC5  2FC3               	goto	l1493
 10544                           
 10545                           ;Subroutines.c: 504:             return 3;
 10546     0FC6  3003               	movlw	3
 10547     0FC7  0008               	return
 10548     0FC8                     __end_of_Buttons:
 10549                           
 10550                           	psect	text37
 10551     0C91                     __ptext37:	
 10552 ;; *************** function _TMR4_Stop *****************
 10553 ;; Defined at:
 10554 ;;		line 119 in file "mcc_generated_files/tmr4.c"
 10555 ;; Parameters:    Size  Location     Type
 10556 ;;		None
 10557 ;; Auto vars:     Size  Location     Type
 10558 ;;		None
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  1    wreg      void 
 10561 ;; Registers used:
 10562 ;;		None
 10563 ;; Tracked objects:
 10564 ;;		On entry : 3F/0
 10565 ;;		On exit  : 3F/5
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10568 ;;      Params:         0       0       0       0       0       0       0       0
 10569 ;;      Locals:         0       0       0       0       0       0       0       0
 10570 ;;      Temps:          0       0       0       0       0       0       0       0
 10571 ;;      Totals:         0       0       0       0       0       0       0       0
 10572 ;;Total ram usage:        0 bytes
 10573 ;; Hardware stack levels used: 1
 10574 ;; Hardware stack levels required when called: 4
 10575 ;; This function calls:
 10576 ;;		Nothing
 10577 ;; This function is called by:
 10578 ;;		_Buttons
 10579 ;; This function uses a non-reentrant model
 10580 ;;
 10581                           
 10582     0C91                     _TMR4_Stop:	
 10583                           ;psect for function _TMR4_Stop
 10584                           
 10585                           
 10586                           ;mcc_generated_files/tmr4.c: 122:     T4CONbits.TMR4ON = 0;
 10587                           
 10588                           ;incstack = 0
 10589                           ; Regs used in _TMR4_Stop: []
 10590     0C91  0145               	movlb	5	; select bank5
 10591     0C92  1394               	bcf	20,7	;volatile
 10592     0C93  0008               	return
 10593     0C94                     __end_of_TMR4_Stop:
 10594                           
 10595                           	psect	text38
 10596     0C8E                     __ptext38:	
 10597 ;; *************** function _TMR4_Start *****************
 10598 ;; Defined at:
 10599 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 10600 ;; Parameters:    Size  Location     Type
 10601 ;;		None
 10602 ;; Auto vars:     Size  Location     Type
 10603 ;;		None
 10604 ;; Return value:  Size  Location     Type
 10605 ;;                  1    wreg      void 
 10606 ;; Registers used:
 10607 ;;		None
 10608 ;; Tracked objects:
 10609 ;;		On entry : 0/0
 10610 ;;		On exit  : 3F/5
 10611 ;;		Unchanged: 0/0
 10612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10613 ;;      Params:         0       0       0       0       0       0       0       0
 10614 ;;      Locals:         0       0       0       0       0       0       0       0
 10615 ;;      Temps:          0       0       0       0       0       0       0       0
 10616 ;;      Totals:         0       0       0       0       0       0       0       0
 10617 ;;Total ram usage:        0 bytes
 10618 ;; Hardware stack levels used: 1
 10619 ;; Hardware stack levels required when called: 4
 10620 ;; This function calls:
 10621 ;;		Nothing
 10622 ;; This function is called by:
 10623 ;;		_Buttons
 10624 ;; This function uses a non-reentrant model
 10625 ;;
 10626                           
 10627     0C8E                     _TMR4_Start:	
 10628                           ;psect for function _TMR4_Start
 10629                           
 10630                           
 10631                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
 10632                           
 10633                           ;incstack = 0
 10634                           ; Regs used in _TMR4_Start: []
 10635     0C8E  0145               	movlb	5	; select bank5
 10636     0C8F  1794               	bsf	20,7	;volatile
 10637     0C90  0008               	return
 10638     0C91                     __end_of_TMR4_Start:
 10639                           
 10640                           	psect	text39
 10641     02A6                     __ptext39:	
 10642 ;; *************** function _RandomWL *****************
 10643 ;; Defined at:
 10644 ;;		line 113 in file "Subroutines.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;		None
 10647 ;; Auto vars:     Size  Location     Type
 10648 ;;  WLtype          1   17[BANK0 ] unsigned char 
 10649 ;; Return value:  Size  Location     Type
 10650 ;;                  1    wreg      void 
 10651 ;; Registers used:
 10652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10653 ;; Tracked objects:
 10654 ;;		On entry : 3F/0
 10655 ;;		On exit  : 3F/7
 10656 ;;		Unchanged: 0/0
 10657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10658 ;;      Params:         0       0       0       0       0       0       0       0
 10659 ;;      Locals:         0       1       0       0       0       0       0       0
 10660 ;;      Temps:          0       1       0       0       0       0       0       0
 10661 ;;      Totals:         0       2       0       0       0       0       0       0
 10662 ;;Total ram usage:        2 bytes
 10663 ;; Hardware stack levels used: 1
 10664 ;; Hardware stack levels required when called: 7
 10665 ;; This function calls:
 10666 ;;		_Loader
 10667 ;;		_Pulse
 10668 ;;		_RandomNum
 10669 ;; This function is called by:
 10670 ;;		_DMDisplay
 10671 ;; This function uses a non-reentrant model
 10672 ;;
 10673                           
 10674     02A6                     _RandomWL:	
 10675                           ;psect for function _RandomWL
 10676                           
 10677                           
 10678                           ;Subroutines.c: 115:     uint8_t WLtype;;Subroutines.c: 117:     WLtype = RandomNum(255)
      +                          ;
 10679                           
 10680                           ;incstack = 0
 10681                           ; Regs used in _RandomWL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10682     02A6  30FF               	movlw	255
 10683     02A7  318E  26C1  3182   	fcall	_RandomNum
 10684     02AA  00E4               	movwf	RandomWL@WLtype
 10685                           
 10686                           ;Subroutines.c: 118:     NegWL = 0;
 10687     02AB  137C               	bcf	_NegWL/(0+8),_NegWL& (0+7)
 10688                           
 10689                           ;Subroutines.c: 119:     DisplayBuf[0] = 0;
 10690     02AC  01B0               	clrf	_DisplayBuf
 10691                           
 10692                           ;Subroutines.c: 120:     if (WLtype <= 3)
 10693     02AD  3004               	movlw	4
 10694     02AE  0264               	subwf	RandomWL@WLtype,w
 10695     02AF  1803               	skipnc
 10696     02B0  2AB5               	goto	l5731
 10697                           
 10698                           ;Subroutines.c: 121:     {;Subroutines.c: 122:         DisplayBuf[0] = 1;
 10699     02B1  01B0               	clrf	_DisplayBuf
 10700     02B2  0AB0               	incf	_DisplayBuf,f
 10701                           
 10702                           ;Subroutines.c: 123:         NegWL = 1;
 10703     02B3  177C               	bsf	_NegWL/(0+8),_NegWL& (0+7)
 10704                           
 10705                           ;Subroutines.c: 124:     }
 10706     02B4  2ABF               	goto	l5737
 10707     02B5                     l5731:
 10708     02B5  3010               	movlw	16
 10709     02B6  0264               	subwf	RandomWL@WLtype,w
 10710     02B7  1803               	skipnc
 10711     02B8  2ABF               	goto	l5737
 10712     02B9  3004               	movlw	4
 10713     02BA  0264               	subwf	RandomWL@WLtype,w
 10714     02BB  1C03               	skipc
 10715     02BC  2ABF               	goto	l5737
 10716                           
 10717                           ;Subroutines.c: 126:         DisplayBuf[0] = 1;
 10718     02BD  01B0               	clrf	_DisplayBuf
 10719     02BE  0AB0               	incf	_DisplayBuf,f
 10720     02BF                     l5737:
 10721                           
 10722                           ;Subroutines.c: 127:     AnimBuf[0] = RunLength[RandomNum(7)];
 10723     02BF  3007               	movlw	7
 10724     02C0  318E  26C1  3182   	fcall	_RandomNum
 10725     02C3  3E20               	addlw	(low (_RunLength| (0+256)))& (0+255)
 10726     02C4  0086               	movwf	6
 10727     02C5  3001               	movlw	1	; select bank2/3
 10728     02C6  0087               	movwf	7
 10729     02C7  0801               	movf	1,w
 10730     02C8  00A8               	movwf	_AnimBuf
 10731                           
 10732                           ;Subroutines.c: 128:     for (Pos=7; Pos>2; Pos--)
 10733     02C9  3007               	movlw	7
 10734     02CA  00CB               	movwf	_Pos
 10735     02CB                     l5741:
 10736     02CB  3003               	movlw	3
 10737     02CC  024B               	subwf	_Pos,w
 10738     02CD  1C03               	btfss	3,0
 10739     02CE  2AE0               	goto	l1330
 10740                           
 10741                           ;Subroutines.c: 129:     {;Subroutines.c: 130:         AnimBuf[Pos] = RunLength[RandomNu
      +                          m(63)];
 10742     02CF  084B               	movf	_Pos,w
 10743     02D0  3E28               	addlw	(low (_AnimBuf| 0))& (0+255)
 10744     02D1  0086               	movwf	6
 10745     02D2  0187               	clrf	7
 10746     02D3  303F               	movlw	63
 10747     02D4  318E  26C1  3182   	fcall	_RandomNum
 10748     02D7  3E20               	addlw	(low (_RunLength| (0+256)))& (0+255)
 10749     02D8  0084               	movwf	4
 10750     02D9  3001               	movlw	1	; select bank2/3
 10751     02DA  0085               	movwf	5
 10752     02DB  0800               	movf	0,w
 10753     02DC  0081               	movwf	1
 10754                           
 10755                           ;Subroutines.c: 131:     }
 10756     02DD  3001               	movlw	1
 10757     02DE  02CB               	subwf	_Pos,f
 10758     02DF  2ACB               	goto	l5741
 10759     02E0                     l1330:	
 10760                           ;Subroutines.c: 132:     while (1)
 10761                           
 10762                           
 10763                           ;Subroutines.c: 133:     {;Subroutines.c: 134:         Action = 0;
 10764     02E0  12FC               	bcf	_Action/(0+8),_Action& (0+7)
 10765                           
 10766                           ;Subroutines.c: 135:         if (AnimBuf[0] != 0)
 10767     02E1  0140               	movlb	0	; select bank0
 10768     02E2  0828               	movf	_AnimBuf,w
 10769     02E3  1903               	btfsc	3,2
 10770     02E4  2AF2               	goto	l5761
 10771                           
 10772                           ;Subroutines.c: 136:         {;Subroutines.c: 137:             AnimBuf[0]--;
 10773     02E5  3001               	movlw	1
 10774     02E6  02A8               	subwf	_AnimBuf,f
 10775                           
 10776                           ;Subroutines.c: 138:             Action = 1;
 10777     02E7  16FC               	bsf	_Action/(0+8),_Action& (0+7)
 10778                           
 10779                           ;Subroutines.c: 139:             DisplayBuf[0]++;
 10780     02E8  3001               	movlw	1
 10781     02E9  00E3               	movwf	??_RandomWL
 10782     02EA  0863               	movf	??_RandomWL,w
 10783     02EB  07B0               	addwf	_DisplayBuf,f
 10784                           
 10785                           ;Subroutines.c: 140:             if (DisplayBuf[0] >= 10)
 10786     02EC  300A               	movlw	10
 10787     02ED  0230               	subwf	_DisplayBuf,w
 10788     02EE  1C03               	skipc
 10789     02EF  2AF8               	goto	l1333
 10790                           
 10791                           ;Subroutines.c: 141:                 DisplayBuf[0] = 0;
 10792     02F0  01B0               	clrf	_DisplayBuf
 10793     02F1  2AF8               	goto	l1333
 10794     02F2                     l5761:
 10795     02F2  0828               	movf	_AnimBuf,w
 10796     02F3  1903               	btfsc	3,2
 10797     02F4  1F7C               	btfss	_NegWL/(0+8),_NegWL& (0+7)
 10798     02F5  2AF8               	goto	l1333
 10799                           
 10800                           ;Subroutines.c: 144:             DisplayBuf[0] = 10;
 10801     02F6  300A               	movlw	10
 10802     02F7  00B0               	movwf	_DisplayBuf
 10803     02F8                     l1333:
 10804                           
 10805                           ;Subroutines.c: 145:         for (Pos=7; Pos>2; Pos--)
 10806     02F8  3007               	movlw	7
 10807     02F9  00CB               	movwf	_Pos
 10808     02FA  3003               	movlw	3
 10809     02FB  024B               	subwf	_Pos,w
 10810     02FC  1C03               	btfss	3,0
 10811     02FD  2B27               	goto	l1336
 10812     02FE                     l5769:
 10813                           
 10814                           ;Subroutines.c: 146:         {;Subroutines.c: 147:             if (AnimBuf[Pos] != 0)
 10815     02FE  084B               	movf	_Pos,w
 10816     02FF  3E28               	addlw	(low (_AnimBuf| 0))& (0+255)
 10817     0300  0086               	movwf	6
 10818     0301  0187               	clrf	7
 10819     0302  0801               	movf	1,w
 10820     0303  1903               	btfsc	3,2
 10821     0304  2B21               	goto	l5777
 10822                           
 10823                           ;Subroutines.c: 148:             {;Subroutines.c: 149:                 AnimBuf[Pos]--;
 10824     0305  084B               	movf	_Pos,w
 10825     0306  3E28               	addlw	(low (_AnimBuf| 0))& (0+255)
 10826     0307  0086               	movwf	6
 10827     0308  0187               	clrf	7
 10828     0309  3001               	movlw	1
 10829     030A  0281               	subwf	1,f
 10830                           
 10831                           ;Subroutines.c: 150:                 Action = 1;
 10832     030B  16FC               	bsf	_Action/(0+8),_Action& (0+7)
 10833                           
 10834                           ;Subroutines.c: 151:                 DisplayBuf[Pos]++;
 10835     030C  3001               	movlw	1
 10836     030D  00E3               	movwf	??_RandomWL
 10837     030E  084B               	movf	_Pos,w
 10838     030F  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10839     0310  0086               	movwf	6
 10840     0311  0187               	clrf	7
 10841     0312  0863               	movf	??_RandomWL,w
 10842     0313  0781               	addwf	1,f
 10843                           
 10844                           ;Subroutines.c: 152:                 if (DisplayBuf[Pos] >= 10)
 10845     0314  084B               	movf	_Pos,w
 10846     0315  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10847     0316  0086               	movwf	6
 10848     0317  0187               	clrf	7
 10849     0318  300A               	movlw	10
 10850     0319  0201               	subwf	1,w
 10851     031A  1C03               	skipc
 10852     031B  2B21               	goto	l5777
 10853                           
 10854                           ;Subroutines.c: 153:                     DisplayBuf[Pos] = 0;
 10855     031C  084B               	movf	_Pos,w
 10856     031D  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 10857     031E  0086               	movwf	6
 10858     031F  0187               	clrf	7
 10859     0320  0181               	clrf	1
 10860     0321                     l5777:
 10861                           
 10862                           ;Subroutines.c: 155:         }
 10863     0321  3001               	movlw	1
 10864     0322  02CB               	subwf	_Pos,f
 10865     0323  3003               	movlw	3
 10866     0324  024B               	subwf	_Pos,w
 10867     0325  1803               	skipnc
 10868     0326  2AFE               	goto	l5769
 10869     0327                     l1336:
 10870                           
 10871                           ;Subroutines.c: 156:         if (Action == 1)
 10872     0327  1EFC               	btfss	_Action/(0+8),_Action& (0+7)
 10873     0328  2B2D               	goto	l1339
 10874                           
 10875                           ;Subroutines.c: 157:             Loader();
 10876     0329  318F  27C8  3182   	fcall	_Loader
 10877     032C  2B2F               	goto	l5785
 10878     032D                     l1339:	
 10879                           ;Subroutines.c: 158:         else if (Action == 0)
 10880                           
 10881     032D  1EFC               	btfss	_Action/(0+8),_Action& (0+7)
 10882     032E  2B39               	goto	l5787
 10883     032F                     l5785:
 10884                           
 10885                           ;Subroutines.c: 160:         _delay(16000);
 10886     032F  3015               	movlw	21
 10887     0330  0140               	movlb	0	; select bank0
 10888     0331  00E3               	movwf	??_RandomWL
 10889     0332  30C6               	movlw	198
 10890     0333                     u4757:
 10891     0333  0B89               	decfsz	9,f
 10892     0334  2B33               	goto	u4757
 10893     0335  0BE3               	decfsz	??_RandomWL,f
 10894     0336  2B33               	goto	u4757
 10895     0337  0000               	nop
 10896     0338  2AE0               	goto	l1330
 10897     0339                     l5787:
 10898                           
 10899                           ;Subroutines.c: 162:     Pulse();
 10900     0339  3186  26B0         	fcall	_Pulse
 10901     033B  0008               	return
 10902     033C                     __end_of_RandomWL:
 10903                           
 10904                           	psect	text40
 10905     053C                     __ptext40:	
 10906 ;; *************** function _FixedWL *****************
 10907 ;; Defined at:
 10908 ;;		line 165 in file "Subroutines.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;		None
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;		None
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10917 ;; Tracked objects:
 10918 ;;		On entry : 3F/0
 10919 ;;		On exit  : 3F/7
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10922 ;;      Params:         0       0       0       0       0       0       0       0
 10923 ;;      Locals:         0       0       0       0       0       0       0       0
 10924 ;;      Temps:          0       1       0       0       0       0       0       0
 10925 ;;      Totals:         0       1       0       0       0       0       0       0
 10926 ;;Total ram usage:        1 bytes
 10927 ;; Hardware stack levels used: 1
 10928 ;; Hardware stack levels required when called: 7
 10929 ;; This function calls:
 10930 ;;		_Loader
 10931 ;;		_Pulse
 10932 ;;		_RandomNum
 10933 ;; This function is called by:
 10934 ;;		_main
 10935 ;;		_DMDisplay
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           
 10939     053C                     _FixedWL:	
 10940                           ;psect for function _FixedWL
 10941                           
 10942                           
 10943                           ;Subroutines.c: 167:     for (Pos=8; Pos--;)
 10944                           
 10945                           ;incstack = 0
 10946                           ; Regs used in _FixedWL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10947     053C  3008               	movlw	8
 10948     053D  00CB               	movwf	_Pos
 10949     053E                     l5575:
 10950     053E  3001               	movlw	1
 10951     053F  02CB               	subwf	_Pos,f
 10952     0540  0A4B               	incf	_Pos,w
 10953     0541  1903               	btfsc	3,2
 10954     0542  2D52               	goto	l5577
 10955                           
 10956                           ;Subroutines.c: 168:     {;Subroutines.c: 169:         AnimBuf[Pos] = RunLength[RandomNu
      +                          m(63)];
 10957     0543  084B               	movf	_Pos,w
 10958     0544  3E28               	addlw	(low (_AnimBuf| 0))& (0+255)
 10959     0545  0086               	movwf	6
 10960     0546  0187               	clrf	7
 10961     0547  303F               	movlw	63
 10962     0548  318E  26C1  3185   	fcall	_RandomNum
 10963     054B  3E20               	addlw	(low (_RunLength| (0+256)))& (0+255)
 10964     054C  0084               	movwf	4
 10965     054D  3001               	movlw	1	; select bank2/3
 10966     054E  0085               	movwf	5
 10967     054F  0800               	movf	0,w
 10968     0550  0081               	movwf	1
 10969     0551  2D3E               	goto	l5575
 10970     0552                     l5577:
 10971                           
 10972                           ;Subroutines.c: 171:     AnimBuf[1] = 0;
 10973     0552  01A9               	clrf	_AnimBuf+1
 10974     0553                     l5579:
 10975                           
 10976                           ;Subroutines.c: 173:     {;Subroutines.c: 174:         Action = 0;
 10977     0553  12FC               	bcf	_Action/(0+8),_Action& (0+7)
 10978                           
 10979                           ;Subroutines.c: 175:         for (Pos=8; Pos--;)
 10980     0554  3008               	movlw	8
 10981     0555  0140               	movlb	0	; select bank0
 10982     0556  00CB               	movwf	_Pos
 10983     0557                     l5595:	
 10984                           ;Subroutines.c: 193:         }
 10985                           
 10986     0557  3001               	movlw	1
 10987     0558  02CB               	subwf	_Pos,f
 10988     0559  0A4B               	incf	_Pos,w
 10989     055A  1903               	btfsc	3,2
 10990     055B  2D92               	goto	l1358
 10991                           
 10992                           ;Subroutines.c: 176:         {;Subroutines.c: 177:             if (AnimBuf[Pos] != 0)
 10993     055C  084B               	movf	_Pos,w
 10994     055D  3E28               	addlw	(low (_AnimBuf| 0))& (0+255)
 10995     055E  0086               	movwf	6
 10996     055F  0187               	clrf	7
 10997     0560  0801               	movf	1,w
 10998     0561  1903               	btfsc	3,2
 10999     0562  2D57               	goto	l5595
 11000                           
 11001                           ;Subroutines.c: 178:             {;Subroutines.c: 179:                 AnimBuf[Pos]--;
 11002     0563  084B               	movf	_Pos,w
 11003     0564  3E28               	addlw	(low (_AnimBuf| 0))& (0+255)
 11004     0565  0086               	movwf	6
 11005     0566  0187               	clrf	7
 11006     0567  3001               	movlw	1
 11007     0568  0281               	subwf	1,f
 11008                           
 11009                           ;Subroutines.c: 180:                 if (AnimBuf[Pos] == 0)
 11010     0569  084B               	movf	_Pos,w
 11011     056A  3E28               	addlw	(low (_AnimBuf| 0))& (0+255)
 11012     056B  0086               	movwf	6
 11013     056C  0187               	clrf	7
 11014     056D  0801               	movf	1,w
 11015     056E  1D03               	btfss	3,2
 11016     056F  2D7B               	goto	l1354
 11017                           
 11018                           ;Subroutines.c: 181:                 {;Subroutines.c: 182:                     DisplayBu
      +                          f[Pos] = DisplaySave[Pos];
 11019     0570  084B               	movf	_Pos,w
 11020     0571  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 11021     0572  0086               	movwf	6
 11022     0573  0187               	clrf	7
 11023     0574  084B               	movf	_Pos,w
 11024     0575  3E20               	addlw	(low (_DisplaySave| 0))& (0+255)
 11025     0576  0084               	movwf	4
 11026     0577  0185               	clrf	5
 11027     0578  0800               	movf	0,w
 11028     0579  0081               	movwf	1
 11029                           
 11030                           ;Subroutines.c: 183:                     continue;
 11031     057A  2D57               	goto	l5595
 11032     057B                     l1354:	
 11033                           ;Subroutines.c: 185:                 else
 11034                           
 11035                           
 11036                           ;Subroutines.c: 186:                 {;Subroutines.c: 187:                     Action = 
      +                          1;
 11037     057B  16FC               	bsf	_Action/(0+8),_Action& (0+7)
 11038                           
 11039                           ;Subroutines.c: 188:                     DisplayBuf[Pos]++;
 11040     057C  3001               	movlw	1
 11041     057D  00E3               	movwf	??_FixedWL
 11042     057E  084B               	movf	_Pos,w
 11043     057F  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 11044     0580  0086               	movwf	6
 11045     0581  0187               	clrf	7
 11046     0582  0863               	movf	??_FixedWL,w
 11047     0583  0781               	addwf	1,f
 11048                           
 11049                           ;Subroutines.c: 189:                     if (DisplayBuf[Pos] == 10)
 11050     0584  084B               	movf	_Pos,w
 11051     0585  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 11052     0586  0086               	movwf	6
 11053     0587  0187               	clrf	7
 11054     0588  300A               	movlw	10
 11055     0589  0601               	xorwf	1,w
 11056     058A  1D03               	btfss	3,2
 11057     058B  2D57               	goto	l5595
 11058                           
 11059                           ;Subroutines.c: 190:                         DisplayBuf[Pos] = 0;
 11060     058C  084B               	movf	_Pos,w
 11061     058D  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 11062     058E  0086               	movwf	6
 11063     058F  0187               	clrf	7
 11064     0590  0181               	clrf	1
 11065     0591  2D57               	goto	l5595
 11066     0592                     l1358:
 11067                           
 11068                           ;Subroutines.c: 194:         if (Action == 1)
 11069     0592  1EFC               	btfss	_Action/(0+8),_Action& (0+7)
 11070     0593  2D98               	goto	l1359
 11071                           
 11072                           ;Subroutines.c: 195:             Loader();
 11073     0594  318F  27C8  3185   	fcall	_Loader
 11074     0597  2D9A               	goto	l5601
 11075     0598                     l1359:	
 11076                           ;Subroutines.c: 196:         else if (Action == 0)
 11077                           
 11078     0598  1EFC               	btfss	_Action/(0+8),_Action& (0+7)
 11079     0599  2DA4               	goto	l5603
 11080     059A                     l5601:
 11081                           
 11082                           ;Subroutines.c: 198:         _delay(16000);
 11083     059A  3015               	movlw	21
 11084     059B  0140               	movlb	0	; select bank0
 11085     059C  00E3               	movwf	??_FixedWL
 11086     059D  30C6               	movlw	198
 11087     059E                     u4767:
 11088     059E  0B89               	decfsz	9,f
 11089     059F  2D9E               	goto	u4767
 11090     05A0  0BE3               	decfsz	??_FixedWL,f
 11091     05A1  2D9E               	goto	u4767
 11092     05A2  0000               	nop
 11093     05A3  2D53               	goto	l5579
 11094     05A4                     l5603:
 11095                           
 11096                           ;Subroutines.c: 200:     Pulse();
 11097     05A4  3186  26B0         	fcall	_Pulse
 11098     05A6  0008               	return
 11099     05A7                     __end_of_FixedWL:
 11100                           
 11101                           	psect	text41
 11102     0EC1                     __ptext41:	
 11103 ;; *************** function _RandomNum *****************
 11104 ;; Defined at:
 11105 ;;		line 472 in file "Subroutines.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;  upper           1    wreg     unsigned char 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;  upper           1   14[BANK0 ] unsigned char 
 11110 ;;  rand_num        1   15[BANK0 ] unsigned char 
 11111 ;; Return value:  Size  Location     Type
 11112 ;;                  1    wreg      unsigned char 
 11113 ;; Registers used:
 11114 ;;		wreg, status,2, status,0, pclath, cstack
 11115 ;; Tracked objects:
 11116 ;;		On entry : 3F/0
 11117 ;;		On exit  : 3F/0
 11118 ;;		Unchanged: 0/0
 11119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11120 ;;      Params:         0       0       0       0       0       0       0       0
 11121 ;;      Locals:         0       2       0       0       0       0       0       0
 11122 ;;      Temps:          0       0       0       0       0       0       0       0
 11123 ;;      Totals:         0       2       0       0       0       0       0       0
 11124 ;;Total ram usage:        2 bytes
 11125 ;; Hardware stack levels used: 1
 11126 ;; Hardware stack levels required when called: 6
 11127 ;; This function calls:
 11128 ;;		_TMR0_ReadTimer
 11129 ;;		___awmod
 11130 ;;		_rand
 11131 ;;		_srand
 11132 ;; This function is called by:
 11133 ;;		_RandomWL
 11134 ;;		_FixedWL
 11135 ;; This function uses a non-reentrant model
 11136 ;;
 11137                           
 11138     0EC1                     _RandomNum:	
 11139                           ;psect for function _RandomNum
 11140                           
 11141                           
 11142                           ;incstack = 0
 11143                           ; Regs used in _RandomNum: [wreg+status,2+status,0+pclath+cstack]
 11144                           ;RandomNum@upper stored from wreg
 11145     0EC1  00E1               	movwf	RandomNum@upper
 11146                           
 11147                           ;Subroutines.c: 472: uint8_t RandomNum(uint8_t upper);Subroutines.c: 473: {;Subroutines.
      +                          c: 474:     uint8_t rand_num;;Subroutines.c: 476:     srand(TMR0_ReadTimer());
 11148     0EC2  318E  2635  318E   	fcall	_TMR0_ReadTimer
 11149     0EC5  0872               	movf	?_TMR0_ReadTimer+1,w
 11150     0EC6  0140               	movlb	0	; select bank0
 11151     0EC7  00D4               	movwf	srand@s+1
 11152     0EC8  0871               	movf	?_TMR0_ReadTimer,w
 11153     0EC9  00D3               	movwf	srand@s
 11154     0ECA  318C  24C2  318E   	fcall	_srand
 11155                           
 11156                           ;Subroutines.c: 477:     rand_num = (rand() % (upper + 1));
 11157     0ECD  0861               	movf	RandomNum@upper,w
 11158     0ECE  3E01               	addlw	1
 11159     0ECF  00DD               	movwf	___awmod@divisor
 11160     0ED0  3000               	movlw	0
 11161     0ED1  1803               	skipnc
 11162     0ED2  3001               	movlw	1
 11163     0ED3  00DE               	movwf	___awmod@divisor+1
 11164     0ED4  318F  275F  318E   	fcall	_rand
 11165     0ED7  0858               	movf	?_rand+1,w
 11166     0ED8  00E0               	movwf	___awmod@dividend+1
 11167     0ED9  0857               	movf	?_rand,w
 11168     0EDA  00DF               	movwf	___awmod@dividend
 11169     0EDB  3187  273E         	fcall	___awmod
 11170     0EDD  085D               	movf	?___awmod,w
 11171     0EDE  00E2               	movwf	RandomNum@rand_num
 11172                           
 11173                           ;Subroutines.c: 478:     return rand_num;
 11174     0EDF  0862               	movf	RandomNum@rand_num,w
 11175     0EE0  0008               	return
 11176     0EE1                     __end_of_RandomNum:
 11177                           
 11178                           	psect	text42
 11179     0CC2                     __ptext42:	
 11180 ;; *************** function _srand *****************
 11181 ;; Defined at:
 11182 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;  s               2    0[BANK0 ] unsigned int 
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;		None
 11187 ;; Return value:  Size  Location     Type
 11188 ;;                  1    wreg      void 
 11189 ;; Registers used:
 11190 ;;		wreg, status,2, status,0
 11191 ;; Tracked objects:
 11192 ;;		On entry : 3F/0
 11193 ;;		On exit  : 3F/0
 11194 ;;		Unchanged: 0/0
 11195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11196 ;;      Params:         0       2       0       0       0       0       0       0
 11197 ;;      Locals:         0       0       0       0       0       0       0       0
 11198 ;;      Temps:          0       0       0       0       0       0       0       0
 11199 ;;      Totals:         0       2       0       0       0       0       0       0
 11200 ;;Total ram usage:        2 bytes
 11201 ;; Hardware stack levels used: 1
 11202 ;; Hardware stack levels required when called: 4
 11203 ;; This function calls:
 11204 ;;		Nothing
 11205 ;; This function is called by:
 11206 ;;		_RandomNum
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210     0CC2                     _srand:	
 11211                           ;psect for function _srand
 11212                           
 11213                           
 11214                           ;incstack = 0
 11215                           ; Regs used in _srand: [wreg+status,2+status,0]
 11216     0CC2  0853               	movf	srand@s,w
 11217     0CC3  3EFF               	addlw	255
 11218     0CC4  00CC               	movwf	_seed
 11219     0CC5  30FF               	movlw	255
 11220     0CC6  3D54               	addwfc	srand@s+1,w
 11221     0CC7  00CD               	movwf	_seed+1
 11222     0CC8  01CE               	clrf	_seed+2
 11223     0CC9  01CF               	clrf	_seed+3
 11224     0CCA  0008               	return
 11225     0CCB                     __end_of_srand:
 11226                           
 11227                           	psect	text43
 11228     0F5F                     __ptext43:	
 11229 ;; *************** function _rand *****************
 11230 ;; Defined at:
 11231 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
 11232 ;; Parameters:    Size  Location     Type
 11233 ;;		None
 11234 ;; Auto vars:     Size  Location     Type
 11235 ;;		None
 11236 ;; Return value:  Size  Location     Type
 11237 ;;                  2    4[BANK0 ] int 
 11238 ;; Registers used:
 11239 ;;		wreg, status,2, status,0, pclath, cstack
 11240 ;; Tracked objects:
 11241 ;;		On entry : 3F/0
 11242 ;;		On exit  : 3F/0
 11243 ;;		Unchanged: 0/0
 11244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11245 ;;      Params:         0       2       0       0       0       0       0       0
 11246 ;;      Locals:         0       0       0       0       0       0       0       0
 11247 ;;      Temps:          0       4       0       0       0       0       0       0
 11248 ;;      Totals:         0       6       0       0       0       0       0       0
 11249 ;;Total ram usage:        6 bytes
 11250 ;; Hardware stack levels used: 1
 11251 ;; Hardware stack levels required when called: 5
 11252 ;; This function calls:
 11253 ;;		___lmul
 11254 ;; This function is called by:
 11255 ;;		_RandomNum
 11256 ;; This function uses a non-reentrant model
 11257 ;;
 11258                           
 11259     0F5F                     _rand:	
 11260                           ;psect for function _rand
 11261                           
 11262                           
 11263                           ;incstack = 0
 11264                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
 11265     0F5F  084F               	movf	_seed+3,w
 11266     0F60  00F4               	movwf	___lmul@multiplier+3
 11267     0F61  084E               	movf	_seed+2,w
 11268     0F62  00F3               	movwf	___lmul@multiplier+2
 11269     0F63  084D               	movf	_seed+1,w
 11270     0F64  00F2               	movwf	___lmul@multiplier+1
 11271     0F65  084C               	movf	_seed,w
 11272     0F66  00F1               	movwf	___lmul@multiplier
 11273     0F67  304C               	movlw	76
 11274     0F68  00F8               	movwf	___lmul@multiplicand+3
 11275     0F69  3095               	movlw	149
 11276     0F6A  00F7               	movwf	___lmul@multiplicand+2
 11277     0F6B  307F               	movlw	127
 11278     0F6C  00F6               	movwf	___lmul@multiplicand+1
 11279     0F6D  302D               	movlw	45
 11280     0F6E  00F5               	movwf	___lmul@multiplicand
 11281     0F6F  318F  2730  318F   	fcall	___lmul
 11282     0F72  3001               	movlw	1
 11283     0F73  0771               	addwf	?___lmul,w
 11284     0F74  00CC               	movwf	_seed
 11285     0F75  3000               	movlw	0
 11286     0F76  3D72               	addwfc	?___lmul+1,w
 11287     0F77  00CD               	movwf	_seed+1
 11288     0F78  3000               	movlw	0
 11289     0F79  3D73               	addwfc	?___lmul+2,w
 11290     0F7A  00CE               	movwf	_seed+2
 11291     0F7B  3000               	movlw	0
 11292     0F7C  3D74               	addwfc	?___lmul+3,w
 11293     0F7D  00CF               	movwf	_seed+3
 11294     0F7E  084C               	movf	_seed,w
 11295     0F7F  00D9               	movwf	??_rand
 11296     0F80  084D               	movf	_seed+1,w
 11297     0F81  00DA               	movwf	??_rand+1
 11298     0F82  084E               	movf	_seed+2,w
 11299     0F83  00DB               	movwf	??_rand+2
 11300     0F84  084F               	movf	_seed+3,w
 11301     0F85  00DC               	movwf	??_rand+3
 11302     0F86  3011               	movlw	17
 11303     0F87                     u3465:
 11304     0F87  36DC               	lsrf	??_rand+3,f
 11305     0F88  0CDB               	rrf	??_rand+2,f
 11306     0F89  0CDA               	rrf	??_rand+1,f
 11307     0F8A  0CD9               	rrf	??_rand,f
 11308     0F8B  0B89               	decfsz	9,f
 11309     0F8C  2F87               	goto	u3465
 11310     0F8D  085A               	movf	??_rand+1,w
 11311     0F8E  00D8               	movwf	?_rand+1
 11312     0F8F  0859               	movf	??_rand,w
 11313     0F90  00D7               	movwf	?_rand
 11314     0F91  0008               	return
 11315     0F92                     __end_of_rand:
 11316                           
 11317                           	psect	text44
 11318     0F30                     __ptext44:	
 11319 ;; *************** function ___lmul *****************
 11320 ;; Defined at:
 11321 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
 11322 ;; Parameters:    Size  Location     Type
 11323 ;;  multiplier      4    1[COMMON] unsigned long 
 11324 ;;  multiplicand    4    5[COMMON] unsigned long 
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;  product         4    0[BANK0 ] unsigned long 
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  4    1[COMMON] unsigned long 
 11329 ;; Registers used:
 11330 ;;		wreg, status,2, status,0
 11331 ;; Tracked objects:
 11332 ;;		On entry : 3F/0
 11333 ;;		On exit  : 3F/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11336 ;;      Params:         8       0       0       0       0       0       0       0
 11337 ;;      Locals:         0       4       0       0       0       0       0       0
 11338 ;;      Temps:          0       0       0       0       0       0       0       0
 11339 ;;      Totals:         8       4       0       0       0       0       0       0
 11340 ;;Total ram usage:       12 bytes
 11341 ;; Hardware stack levels used: 1
 11342 ;; Hardware stack levels required when called: 4
 11343 ;; This function calls:
 11344 ;;		Nothing
 11345 ;; This function is called by:
 11346 ;;		_rand
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350     0F30                     ___lmul:	
 11351                           ;psect for function ___lmul
 11352                           
 11353                           
 11354                           ;incstack = 0
 11355                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11356     0F30  3000               	movlw	0
 11357     0F31  00D6               	movwf	___lmul@product+3
 11358     0F32  3000               	movlw	0
 11359     0F33  00D5               	movwf	___lmul@product+2
 11360     0F34  3000               	movlw	0
 11361     0F35  00D4               	movwf	___lmul@product+1
 11362     0F36  3000               	movlw	0
 11363     0F37  00D3               	movwf	___lmul@product
 11364     0F38                     l5169:
 11365     0F38  1C71               	btfss	___lmul@multiplier,0
 11366     0F39  2F42               	goto	l5173
 11367     0F3A  0875               	movf	___lmul@multiplicand,w
 11368     0F3B  07D3               	addwf	___lmul@product,f
 11369     0F3C  0876               	movf	___lmul@multiplicand+1,w
 11370     0F3D  3DD4               	addwfc	___lmul@product+1,f
 11371     0F3E  0877               	movf	___lmul@multiplicand+2,w
 11372     0F3F  3DD5               	addwfc	___lmul@product+2,f
 11373     0F40  0878               	movf	___lmul@multiplicand+3,w
 11374     0F41  3DD6               	addwfc	___lmul@product+3,f
 11375     0F42                     l5173:
 11376     0F42  3001               	movlw	1
 11377     0F43                     u3305:
 11378     0F43  35F5               	lslf	___lmul@multiplicand,f
 11379     0F44  0DF6               	rlf	___lmul@multiplicand+1,f
 11380     0F45  0DF7               	rlf	___lmul@multiplicand+2,f
 11381     0F46  0DF8               	rlf	___lmul@multiplicand+3,f
 11382     0F47  0B89               	decfsz	9,f
 11383     0F48  2F43               	goto	u3305
 11384     0F49  3001               	movlw	1
 11385     0F4A                     u3315:
 11386     0F4A  36F4               	lsrf	___lmul@multiplier+3,f
 11387     0F4B  0CF3               	rrf	___lmul@multiplier+2,f
 11388     0F4C  0CF2               	rrf	___lmul@multiplier+1,f
 11389     0F4D  0CF1               	rrf	___lmul@multiplier,f
 11390     0F4E  0B89               	decfsz	9,f
 11391     0F4F  2F4A               	goto	u3315
 11392     0F50  0874               	movf	___lmul@multiplier+3,w
 11393     0F51  0473               	iorwf	___lmul@multiplier+2,w
 11394     0F52  0472               	iorwf	___lmul@multiplier+1,w
 11395     0F53  0471               	iorwf	___lmul@multiplier,w
 11396     0F54  1D03               	skipz
 11397     0F55  2F38               	goto	l5169
 11398     0F56  0856               	movf	___lmul@product+3,w
 11399     0F57  00F4               	movwf	?___lmul+3
 11400     0F58  0855               	movf	___lmul@product+2,w
 11401     0F59  00F3               	movwf	?___lmul+2
 11402     0F5A  0854               	movf	___lmul@product+1,w
 11403     0F5B  00F2               	movwf	?___lmul+1
 11404     0F5C  0853               	movf	___lmul@product,w
 11405     0F5D  00F1               	movwf	?___lmul
 11406     0F5E  0008               	return
 11407     0F5F                     __end_of___lmul:
 11408                           
 11409                           	psect	text45
 11410     073E                     __ptext45:	
 11411 ;; *************** function ___awmod *****************
 11412 ;; Defined at:
 11413 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;  divisor         2   10[BANK0 ] int 
 11416 ;;  dividend        2   12[BANK0 ] int 
 11417 ;; Auto vars:     Size  Location     Type
 11418 ;;  sign            1   11[COMMON] unsigned char 
 11419 ;;  counter         1   10[COMMON] unsigned char 
 11420 ;; Return value:  Size  Location     Type
 11421 ;;                  2   10[BANK0 ] int 
 11422 ;; Registers used:
 11423 ;;		wreg, status,2, status,0
 11424 ;; Tracked objects:
 11425 ;;		On entry : 3F/0
 11426 ;;		On exit  : 3F/0
 11427 ;;		Unchanged: 0/0
 11428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11429 ;;      Params:         0       4       0       0       0       0       0       0
 11430 ;;      Locals:         2       0       0       0       0       0       0       0
 11431 ;;      Temps:          1       0       0       0       0       0       0       0
 11432 ;;      Totals:         3       4       0       0       0       0       0       0
 11433 ;;Total ram usage:        7 bytes
 11434 ;; Hardware stack levels used: 1
 11435 ;; Hardware stack levels required when called: 4
 11436 ;; This function calls:
 11437 ;;		Nothing
 11438 ;; This function is called by:
 11439 ;;		_RandomNum
 11440 ;; This function uses a non-reentrant model
 11441 ;;
 11442                           
 11443     073E                     ___awmod:	
 11444                           ;psect for function ___awmod
 11445                           
 11446                           
 11447                           ;incstack = 0
 11448                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11449     073E  01FB               	clrf	___awmod@sign
 11450     073F  1FE0               	btfss	___awmod@dividend+1,7
 11451     0740  2F48               	goto	l5361
 11452     0741  09DF               	comf	___awmod@dividend,f
 11453     0742  09E0               	comf	___awmod@dividend+1,f
 11454     0743  0ADF               	incf	___awmod@dividend,f
 11455     0744  1903               	skipnz
 11456     0745  0AE0               	incf	___awmod@dividend+1,f
 11457     0746  01FB               	clrf	___awmod@sign
 11458     0747  0AFB               	incf	___awmod@sign,f
 11459     0748                     l5361:
 11460     0748  1FDE               	btfss	___awmod@divisor+1,7
 11461     0749  2F4F               	goto	l5365
 11462     074A  09DD               	comf	___awmod@divisor,f
 11463     074B  09DE               	comf	___awmod@divisor+1,f
 11464     074C  0ADD               	incf	___awmod@divisor,f
 11465     074D  1903               	skipnz
 11466     074E  0ADE               	incf	___awmod@divisor+1,f
 11467     074F                     l5365:
 11468     074F  085D               	movf	___awmod@divisor,w
 11469     0750  045E               	iorwf	___awmod@divisor+1,w
 11470     0751  1903               	btfsc	3,2
 11471     0752  2F76               	goto	l5383
 11472     0753  01FA               	clrf	___awmod@counter
 11473     0754  0AFA               	incf	___awmod@counter,f
 11474     0755                     l5373:
 11475     0755  1BDE               	btfsc	___awmod@divisor+1,7
 11476     0756  2F61               	goto	l5375
 11477     0757  3001               	movlw	1
 11478     0758                     u3645:
 11479     0758  35DD               	lslf	___awmod@divisor,f
 11480     0759  0DDE               	rlf	___awmod@divisor+1,f
 11481     075A  0B89               	decfsz	9,f
 11482     075B  2F58               	goto	u3645
 11483     075C  3001               	movlw	1
 11484     075D  00F9               	movwf	??___awmod
 11485     075E  0879               	movf	??___awmod,w
 11486     075F  07FA               	addwf	___awmod@counter,f
 11487     0760  2F55               	goto	l5373
 11488     0761                     l5375:
 11489     0761  085E               	movf	___awmod@divisor+1,w
 11490     0762  0260               	subwf	___awmod@dividend+1,w
 11491     0763  1D03               	skipz
 11492     0764  2F67               	goto	u3665
 11493     0765  085D               	movf	___awmod@divisor,w
 11494     0766  025F               	subwf	___awmod@dividend,w
 11495     0767                     u3665:
 11496     0767  1C03               	skipc
 11497     0768  2F6D               	goto	l5379
 11498     0769  085D               	movf	___awmod@divisor,w
 11499     076A  02DF               	subwf	___awmod@dividend,f
 11500     076B  085E               	movf	___awmod@divisor+1,w
 11501     076C  3BE0               	subwfb	___awmod@dividend+1,f
 11502     076D                     l5379:
 11503     076D  3001               	movlw	1
 11504     076E                     u3675:
 11505     076E  36DE               	lsrf	___awmod@divisor+1,f
 11506     076F  0CDD               	rrf	___awmod@divisor,f
 11507     0770  0B89               	decfsz	9,f
 11508     0771  2F6E               	goto	u3675
 11509     0772  3001               	movlw	1
 11510     0773  02FA               	subwf	___awmod@counter,f
 11511     0774  1D03               	btfss	3,2
 11512     0775  2F61               	goto	l5375
 11513     0776                     l5383:
 11514     0776  087B               	movf	___awmod@sign,w
 11515     0777  1903               	btfsc	3,2
 11516     0778  2F7E               	goto	l5387
 11517     0779  09DF               	comf	___awmod@dividend,f
 11518     077A  09E0               	comf	___awmod@dividend+1,f
 11519     077B  0ADF               	incf	___awmod@dividend,f
 11520     077C  1903               	skipnz
 11521     077D  0AE0               	incf	___awmod@dividend+1,f
 11522     077E                     l5387:
 11523     077E  0860               	movf	___awmod@dividend+1,w
 11524     077F  00DE               	movwf	?___awmod+1
 11525     0780  085F               	movf	___awmod@dividend,w
 11526     0781  00DD               	movwf	?___awmod
 11527     0782  0008               	return
 11528     0783                     __end_of___awmod:
 11529                           
 11530                           	psect	text46
 11531     0E35                     __ptext46:	
 11532 ;; *************** function _TMR0_ReadTimer *****************
 11533 ;; Defined at:
 11534 ;;		line 100 in file "mcc_generated_files/tmr0.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;		None
 11537 ;; Auto vars:     Size  Location     Type
 11538 ;;  readVal         2    8[COMMON] unsigned short 
 11539 ;;  readValHigh     1   11[COMMON] unsigned char 
 11540 ;;  readValLow      1   10[COMMON] unsigned char 
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  2    1[COMMON] unsigned short 
 11543 ;; Registers used:
 11544 ;;		wreg, status,2, status,0
 11545 ;; Tracked objects:
 11546 ;;		On entry : 3F/0
 11547 ;;		On exit  : 3F/B
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11550 ;;      Params:         2       0       0       0       0       0       0       0
 11551 ;;      Locals:         4       0       0       0       0       0       0       0
 11552 ;;      Temps:          5       0       0       0       0       0       0       0
 11553 ;;      Totals:        11       0       0       0       0       0       0       0
 11554 ;;Total ram usage:       11 bytes
 11555 ;; Hardware stack levels used: 1
 11556 ;; Hardware stack levels required when called: 4
 11557 ;; This function calls:
 11558 ;;		Nothing
 11559 ;; This function is called by:
 11560 ;;		_RandomNum
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564     0E35                     _TMR0_ReadTimer:	
 11565                           ;psect for function _TMR0_ReadTimer
 11566                           
 11567                           
 11568                           ;mcc_generated_files/tmr0.c: 102:     uint16_t readVal;;mcc_generated_files/tmr0.c: 103:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 104:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 106:     readValLow = TMR0L;
 11569                           
 11570                           ;incstack = 0
 11571                           ; Regs used in _TMR0_ReadTimer: [wreg+status,2+status,0]
 11572     0E35  014B               	movlb	11	; select bank11
 11573     0E36  081C               	movf	28,w	;volatile
 11574     0E37  00FA               	movwf	TMR0_ReadTimer@readValLow
 11575                           
 11576                           ;mcc_generated_files/tmr0.c: 107:     readValHigh = TMR0H;
 11577     0E38  081D               	movf	29,w	;volatile
 11578     0E39  00FB               	movwf	TMR0_ReadTimer@readValHigh
 11579                           
 11580                           ;mcc_generated_files/tmr0.c: 108:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 11581     0E3A  087A               	movf	TMR0_ReadTimer@readValLow,w
 11582     0E3B  00F3               	movwf	??_TMR0_ReadTimer
 11583     0E3C  01F4               	clrf	??_TMR0_ReadTimer+1
 11584     0E3D  087B               	movf	TMR0_ReadTimer@readValHigh,w
 11585     0E3E  00F5               	movwf	??_TMR0_ReadTimer+2
 11586     0E3F  01F6               	clrf	??_TMR0_ReadTimer+3
 11587     0E40  0875               	movf	??_TMR0_ReadTimer+2,w
 11588     0E41  00F6               	movwf	??_TMR0_ReadTimer+3
 11589     0E42  01F5               	clrf	??_TMR0_ReadTimer+2
 11590     0E43  0873               	movf	??_TMR0_ReadTimer,w
 11591     0E44  0775               	addwf	??_TMR0_ReadTimer+2,w
 11592     0E45  00F8               	movwf	TMR0_ReadTimer@readVal
 11593     0E46  0874               	movf	??_TMR0_ReadTimer+1,w
 11594     0E47  3D76               	addwfc	??_TMR0_ReadTimer+3,w
 11595     0E48  00F9               	movwf	TMR0_ReadTimer@readVal+1
 11596                           
 11597                           ;mcc_generated_files/tmr0.c: 110:     return readVal;
 11598     0E49  0879               	movf	TMR0_ReadTimer@readVal+1,w
 11599     0E4A  00F2               	movwf	?_TMR0_ReadTimer+1
 11600     0E4B  0878               	movf	TMR0_ReadTimer@readVal,w
 11601     0E4C  00F1               	movwf	?_TMR0_ReadTimer
 11602     0E4D  0008               	return
 11603     0E4E                     __end_of_TMR0_ReadTimer:
 11604                           
 11605                           	psect	text47
 11606     06B0                     __ptext47:	
 11607 ;; *************** function _Pulse *****************
 11608 ;; Defined at:
 11609 ;;		line 58 in file "Subroutines.c"
 11610 ;; Parameters:    Size  Location     Type
 11611 ;;		None
 11612 ;; Auto vars:     Size  Location     Type
 11613 ;;		None
 11614 ;; Return value:  Size  Location     Type
 11615 ;;                  1    wreg      void 
 11616 ;; Registers used:
 11617 ;;		wreg, status,2, status,0, pclath, cstack
 11618 ;; Tracked objects:
 11619 ;;		On entry : 3F/0
 11620 ;;		On exit  : 3F/7
 11621 ;;		Unchanged: 0/0
 11622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11623 ;;      Params:         0       0       0       0       0       0       0       0
 11624 ;;      Locals:         0       0       0       0       0       0       0       0
 11625 ;;      Temps:          0       1       0       0       0       0       0       0
 11626 ;;      Totals:         0       1       0       0       0       0       0       0
 11627 ;;Total ram usage:        1 bytes
 11628 ;; Hardware stack levels used: 1
 11629 ;; Hardware stack levels required when called: 5
 11630 ;; This function calls:
 11631 ;;		_PWM6_LoadDutyValue
 11632 ;; This function is called by:
 11633 ;;		_RandomWL
 11634 ;;		_FixedWL
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638     06B0                     _Pulse:	
 11639                           ;psect for function _Pulse
 11640                           
 11641                           
 11642                           ;Subroutines.c: 60:     PWM6_LoadDutyValue(519);
 11643                           
 11644                           ;incstack = 0
 11645                           ; Regs used in _Pulse: [wreg+status,2+status,0+pclath+cstack]
 11646     06B0  3007               	movlw	7
 11647     06B1  00D7               	movwf	PWM6_LoadDutyValue@dutyValue
 11648     06B2  3002               	movlw	2
 11649     06B3  00D8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11650     06B4  318E  2605  3186   	fcall	_PWM6_LoadDutyValue
 11651                           
 11652                           ;Subroutines.c: 61:     _delay(104000);
 11653     06B7  3088               	movlw	136
 11654     06B8  0140               	movlb	0	; select bank0
 11655     06B9  00DB               	movwf	??_Pulse
 11656     06BA  300F               	movlw	15
 11657     06BB                     u4777:
 11658     06BB  0B89               	decfsz	9,f
 11659     06BC  2EBB               	goto	u4777
 11660     06BD  0BDB               	decfsz	??_Pulse,f
 11661     06BE  2EBB               	goto	u4777
 11662                           
 11663                           ;Subroutines.c: 62:     PWM6_LoadDutyValue(415);
 11664     06BF  309F               	movlw	159
 11665     06C0  0140               	movlb	0	; select bank0
 11666     06C1  00D7               	movwf	PWM6_LoadDutyValue@dutyValue
 11667     06C2  3001               	movlw	1
 11668     06C3  00D8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11669     06C4  318E  2605  3186   	fcall	_PWM6_LoadDutyValue
 11670                           
 11671                           ;Subroutines.c: 63:     _delay(26000);
 11672     06C7  3022               	movlw	34
 11673     06C8  0140               	movlb	0	; select bank0
 11674     06C9  00DB               	movwf	??_Pulse
 11675     06CA  30C3               	movlw	195
 11676     06CB                     u4787:
 11677     06CB  0B89               	decfsz	9,f
 11678     06CC  2ECB               	goto	u4787
 11679     06CD  0BDB               	decfsz	??_Pulse,f
 11680     06CE  2ECB               	goto	u4787
 11681                           
 11682                           ;Subroutines.c: 64:     PWM6_LoadDutyValue(363);
 11683     06CF  306B               	movlw	107
 11684     06D0  0140               	movlb	0	; select bank0
 11685     06D1  00D7               	movwf	PWM6_LoadDutyValue@dutyValue
 11686     06D2  3001               	movlw	1
 11687     06D3  00D8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11688     06D4  318E  2605  3186   	fcall	_PWM6_LoadDutyValue
 11689                           
 11690                           ;Subroutines.c: 65:     _delay(21000);
 11691     06D7  301C               	movlw	28
 11692     06D8  0140               	movlb	0	; select bank0
 11693     06D9  00DB               	movwf	??_Pulse
 11694     06DA  3044               	movlw	68
 11695     06DB                     u4797:
 11696     06DB  0B89               	decfsz	9,f
 11697     06DC  2EDB               	goto	u4797
 11698     06DD  0BDB               	decfsz	??_Pulse,f
 11699     06DE  2EDB               	goto	u4797
 11700     06DF  0000               	nop
 11701                           
 11702                           ;Subroutines.c: 66:     PWM6_LoadDutyValue(311);
 11703     06E0  3037               	movlw	55
 11704     06E1  0140               	movlb	0	; select bank0
 11705     06E2  00D7               	movwf	PWM6_LoadDutyValue@dutyValue
 11706     06E3  3001               	movlw	1
 11707     06E4  00D8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11708     06E5  318E  2605  3186   	fcall	_PWM6_LoadDutyValue
 11709                           
 11710                           ;Subroutines.c: 67:     _delay(16000);
 11711     06E8  3015               	movlw	21
 11712     06E9  0140               	movlb	0	; select bank0
 11713     06EA  00DB               	movwf	??_Pulse
 11714     06EB  30C6               	movlw	198
 11715     06EC                     u4807:
 11716     06EC  0B89               	decfsz	9,f
 11717     06ED  2EEC               	goto	u4807
 11718     06EE  0BDB               	decfsz	??_Pulse,f
 11719     06EF  2EEC               	goto	u4807
 11720     06F0  0000               	nop
 11721                           
 11722                           ;Subroutines.c: 68:     PWM6_LoadDutyValue(207);
 11723     06F1  30CF               	movlw	207
 11724     06F2  0140               	movlb	0	; select bank0
 11725     06F3  00D7               	movwf	PWM6_LoadDutyValue@dutyValue
 11726     06F4  3000               	movlw	0
 11727     06F5  00D8               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11728     06F6  318E  2605         	fcall	_PWM6_LoadDutyValue
 11729     06F8  0008               	return
 11730     06F9                     __end_of_Pulse:
 11731                           
 11732                           	psect	text48
 11733     0E05                     __ptext48:	
 11734 ;; *************** function _PWM6_LoadDutyValue *****************
 11735 ;; Defined at:
 11736 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 11737 ;; Parameters:    Size  Location     Type
 11738 ;;  dutyValue       2    4[BANK0 ] unsigned short 
 11739 ;; Auto vars:     Size  Location     Type
 11740 ;;		None
 11741 ;; Return value:  Size  Location     Type
 11742 ;;                  1    wreg      void 
 11743 ;; Registers used:
 11744 ;;		wreg, status,2, status,0
 11745 ;; Tracked objects:
 11746 ;;		On entry : 3F/0
 11747 ;;		On exit  : 3F/7
 11748 ;;		Unchanged: 0/0
 11749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11750 ;;      Params:         0       2       0       0       0       0       0       0
 11751 ;;      Locals:         0       0       0       0       0       0       0       0
 11752 ;;      Temps:          0       2       0       0       0       0       0       0
 11753 ;;      Totals:         0       4       0       0       0       0       0       0
 11754 ;;Total ram usage:        4 bytes
 11755 ;; Hardware stack levels used: 1
 11756 ;; Hardware stack levels required when called: 4
 11757 ;; This function calls:
 11758 ;;		Nothing
 11759 ;; This function is called by:
 11760 ;;		_TubesOn
 11761 ;;		_Pulse
 11762 ;;		_OtherSetInc
 11763 ;; This function uses a non-reentrant model
 11764 ;;
 11765                           
 11766     0E05                     _PWM6_LoadDutyValue:	
 11767                           ;psect for function _PWM6_LoadDutyValue
 11768                           
 11769                           
 11770                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11771                           
 11772                           ;incstack = 0
 11773                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 11774     0E05  0858               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 11775     0E06  00DA               	movwf	??_PWM6_LoadDutyValue+1
 11776     0E07  0857               	movf	PWM6_LoadDutyValue@dutyValue,w
 11777     0E08  00D9               	movwf	??_PWM6_LoadDutyValue
 11778     0E09  36DA               	lsrf	??_PWM6_LoadDutyValue+1,f
 11779     0E0A  0CD9               	rrf	??_PWM6_LoadDutyValue,f
 11780     0E0B  36DA               	lsrf	??_PWM6_LoadDutyValue+1,f
 11781     0E0C  0CD9               	rrf	??_PWM6_LoadDutyValue,f
 11782     0E0D  0859               	movf	??_PWM6_LoadDutyValue,w
 11783     0E0E  0147               	movlb	7	; select bank7
 11784     0E0F  008D               	movwf	13	;volatile
 11785                           
 11786                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 11787     0E10  0140               	movlb	0	; select bank0
 11788     0E11  0857               	movf	PWM6_LoadDutyValue@dutyValue,w
 11789     0E12  3903               	andlw	3
 11790     0E13  00D9               	movwf	??_PWM6_LoadDutyValue
 11791     0E14  3005               	movlw	5
 11792     0E15                     u3335:
 11793     0E15  35D9               	lslf	??_PWM6_LoadDutyValue,f
 11794     0E16  3EFF               	addlw	-1
 11795     0E17  1D03               	skipz
 11796     0E18  2E15               	goto	u3335
 11797     0E19  3559               	lslf	??_PWM6_LoadDutyValue,w
 11798     0E1A  0147               	movlb	7	; select bank7
 11799     0E1B  008C               	movwf	12	;volatile
 11800     0E1C  0008               	return
 11801     0E1D                     __end_of_PWM6_LoadDutyValue:
 11802                           
 11803                           	psect	text49
 11804     0FC8                     __ptext49:	
 11805 ;; *************** function _Loader *****************
 11806 ;; Defined at:
 11807 ;;		line 203 in file "Subroutines.c"
 11808 ;; Parameters:    Size  Location     Type
 11809 ;;		None
 11810 ;; Auto vars:     Size  Location     Type
 11811 ;;  shftregpln     12    0[BANK0 ] unsigned char [12]
 11812 ;;  regp            1   12[BANK0 ] unsigned char 
 11813 ;; Return value:  Size  Location     Type
 11814 ;;                  1    wreg      void 
 11815 ;; Registers used:
 11816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11817 ;; Tracked objects:
 11818 ;;		On entry : 38/0
 11819 ;;		On exit  : 3F/0
 11820 ;;		Unchanged: 0/0
 11821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11822 ;;      Params:         0       0       0       0       0       0       0       0
 11823 ;;      Locals:         0      13       0       0       0       0       0       0
 11824 ;;      Temps:          1       0       0       0       0       0       0       0
 11825 ;;      Totals:         1      13       0       0       0       0       0       0
 11826 ;;Total ram usage:       14 bytes
 11827 ;; Hardware stack levels used: 1
 11828 ;; Hardware stack levels required when called: 4
 11829 ;; This function calls:
 11830 ;;		Nothing
 11831 ;; This function is called by:
 11832 ;;		_Startup
 11833 ;;		_main
 11834 ;;		_DateDisplay
 11835 ;;		_DMDisplay
 11836 ;;		_Settings
 11837 ;;		_TubeValuePicker
 11838 ;;		_RandomWL
 11839 ;;		_FixedWL
 11840 ;;		_BCDSetInc
 11841 ;;		_OtherSetInc
 11842 ;;		_I2CFail
 11843 ;; This function uses a non-reentrant model
 11844 ;;
 11845                           
 11846     0FC8                     _Loader:	
 11847                           ;psect for function _Loader
 11848                           
 11849                           
 11850                           ;Subroutines.c: 205:     char regp;;Subroutines.c: 206:     char shftregpln[12] = {0x4C,
      +                          1,2,3,4,5,6,7,8,9,0,0x52};
 11851                           
 11852                           ;incstack = 0
 11853                           ; Regs used in _Loader: [wreg-fsr1h+status,2+status,0]
 11854     0FC8  30BD               	movlw	low Loader@F11213
 11855     0FC9  0086               	movwf	6
 11856     0FCA  3000               	movlw	high Loader@F11213
 11857     0FCB  0087               	movwf	7
 11858     0FCC  3053               	movlw	low Loader@shftregpln
 11859     0FCD  0084               	movwf	4
 11860     0FCE  3000               	movlw	high Loader@shftregpln
 11861     0FCF  0085               	movwf	5
 11862     0FD0  300C               	movlw	12
 11863     0FD1  00F1               	movwf	??_Loader
 11864     0FD2                     u3240:
 11865     0FD2  0016               	moviw fsr1++
 11866     0FD3  001A               	movwi fsr0++
 11867     0FD4  0BF1               	decfsz	??_Loader,f
 11868     0FD5  2FD2               	goto	u3240
 11869                           
 11870                           ;Subroutines.c: 208:     LATCbits.LATC6 = 0;
 11871     0FD6  0140               	movlb	0	; select bank0
 11872     0FD7  131A               	bcf	26,6	;volatile
 11873                           
 11874                           ;Subroutines.c: 209:     for (Pos=0; Pos<8; Pos++)
 11875     0FD8  01CB               	clrf	_Pos
 11876     0FD9                     l5117:
 11877     0FD9  3008               	movlw	8
 11878     0FDA  024B               	subwf	_Pos,w
 11879     0FDB  1803               	btfsc	3,0
 11880     0FDC  2FFD               	goto	l1370
 11881                           
 11882                           ;Subroutines.c: 210:     {;Subroutines.c: 211:         for (regp=0; regp<12; regp++)
 11883     0FDD  01DF               	clrf	Loader@regp
 11884     0FDE                     l5127:
 11885                           
 11886                           ;Subroutines.c: 212:         {;Subroutines.c: 213:             if (shftregpln[regp] == D
      +                          isplayBuf[Pos])
 11887     0FDE  084B               	movf	_Pos,w
 11888     0FDF  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 11889     0FE0  0086               	movwf	6
 11890     0FE1  0187               	clrf	7
 11891     0FE2  085F               	movf	Loader@regp,w
 11892     0FE3  3E53               	addlw	(low (Loader@shftregpln| 0))& (0+255)
 11893     0FE4  0084               	movwf	4
 11894     0FE5  0185               	clrf	5
 11895     0FE6  0800               	movf	0,w
 11896     0FE7  0601               	xorwf	1,w
 11897     0FE8  1D03               	skipz
 11898     0FE9  2FED               	goto	l1373
 11899                           
 11900                           ;Subroutines.c: 214:             {;Subroutines.c: 215:                 LATCbits.LATC3 = 
      +                          1;
 11901     0FEA  159A               	bsf	26,3	;volatile
 11902                           
 11903                           ;Subroutines.c: 216:                 LATCbits.LATC5 = 1;
 11904     0FEB  169A               	bsf	26,5	;volatile
 11905     0FEC  2FEF               	goto	L8
 11906     0FED                     l1373:	
 11907                           ;Subroutines.c: 219:             else
 11908                           
 11909                           ;Subroutines.c: 218:             }
 11910                           
 11911                           ;Subroutines.c: 217:                 LATCbits.LATC3 = 0;
 11912                           
 11913                           
 11914                           ;Subroutines.c: 220:             {;Subroutines.c: 221:                 LATCbits.LATC3 = 
      +                          1;
 11915     0FED  159A               	bsf	26,3	;volatile
 11916                           
 11917                           ;Subroutines.c: 222:                 LATCbits.LATC5 = 0;
 11918     0FEE  129A               	bcf	26,5	;volatile
 11919     0FEF                     L8:
 11920                           
 11921                           ;Subroutines.c: 223:                 LATCbits.LATC3 = 0;
 11922     0FEF  119A               	bcf	26,3	;volatile
 11923                           
 11924                           ;Subroutines.c: 225:         }
 11925     0FF0  3001               	movlw	1
 11926     0FF1  00F1               	movwf	??_Loader
 11927     0FF2  0871               	movf	??_Loader,w
 11928     0FF3  07DF               	addwf	Loader@regp,f
 11929     0FF4  300C               	movlw	12
 11930     0FF5  025F               	subwf	Loader@regp,w
 11931     0FF6  1C03               	skipc
 11932     0FF7  2FDE               	goto	l5127
 11933                           
 11934                           ;Subroutines.c: 226:     }
 11935     0FF8  3001               	movlw	1
 11936     0FF9  00F1               	movwf	??_Loader
 11937     0FFA  0871               	movf	??_Loader,w
 11938     0FFB  07CB               	addwf	_Pos,f
 11939     0FFC  2FD9               	goto	l5117
 11940     0FFD                     l1370:
 11941                           
 11942                           ;Subroutines.c: 227:     LATCbits.LATC6 = 1;
 11943     0FFD  171A               	bsf	26,6	;volatile
 11944                           
 11945                           ;Subroutines.c: 228:     LATCbits.LATC6 = 0;
 11946     0FFE  131A               	bcf	26,6	;volatile
 11947     0FFF  0008               	return
 11948     1000                     __end_of_Loader:
 11949                           
 11950                           	psect	text50
 11951     0D72                     __ptext50:	
 11952 ;; *************** function _EmptyTubes *****************
 11953 ;; Defined at:
 11954 ;;		line 26 in file "Subroutines.c"
 11955 ;; Parameters:    Size  Location     Type
 11956 ;;		None
 11957 ;; Auto vars:     Size  Location     Type
 11958 ;;		None
 11959 ;; Return value:  Size  Location     Type
 11960 ;;                  1    wreg      void 
 11961 ;; Registers used:
 11962 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11963 ;; Tracked objects:
 11964 ;;		On entry : 0/0
 11965 ;;		On exit  : 3F/0
 11966 ;;		Unchanged: 0/0
 11967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11968 ;;      Params:         0       0       0       0       0       0       0       0
 11969 ;;      Locals:         0       0       0       0       0       0       0       0
 11970 ;;      Temps:          0       0       0       0       0       0       0       0
 11971 ;;      Totals:         0       0       0       0       0       0       0       0
 11972 ;;Total ram usage:        0 bytes
 11973 ;; Hardware stack levels used: 1
 11974 ;; Hardware stack levels required when called: 4
 11975 ;; This function calls:
 11976 ;;		Nothing
 11977 ;; This function is called by:
 11978 ;;		_Startup
 11979 ;;		_DMDisplay
 11980 ;;		_Settings
 11981 ;;		_I2CFail
 11982 ;; This function uses a non-reentrant model
 11983 ;;
 11984                           
 11985     0D72                     _EmptyTubes:	
 11986                           ;psect for function _EmptyTubes
 11987                           
 11988                           
 11989                           ;Subroutines.c: 28:     for (Pos=8; Pos--;)
 11990                           
 11991                           ;incstack = 0
 11992                           ; Regs used in _EmptyTubes: [wreg+fsr1l+fsr1h+status,2+status,0]
 11993     0D72  3008               	movlw	8
 11994     0D73  0140               	movlb	0	; select bank0
 11995     0D74  00CB               	movwf	_Pos
 11996     0D75                     l3565:
 11997     0D75  3001               	movlw	1
 11998     0D76  02CB               	subwf	_Pos,f
 11999     0D77  0A4B               	incf	_Pos,w
 12000     0D78  1903               	btfsc	3,2
 12001     0D79  0008               	return
 12002                           
 12003                           ;Subroutines.c: 29:     {;Subroutines.c: 30:         DisplayBuf[Pos] = 10;
 12004     0D7A  084B               	movf	_Pos,w
 12005     0D7B  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 12006     0D7C  0086               	movwf	6
 12007     0D7D  0187               	clrf	7
 12008     0D7E  300A               	movlw	10
 12009     0D7F  0081               	movwf	1
 12010     0D80  2D75               	goto	l3565
 12011     0D81                     __end_of_EmptyTubes:
 12012                           
 12013                           	psect	text51
 12014     0DD9                     __ptext51:	
 12015 ;; *************** function _EEPROMBufferFill *****************
 12016 ;; Defined at:
 12017 ;;		line 34 in file "Subroutines.c"
 12018 ;; Parameters:    Size  Location     Type
 12019 ;;  addr            1    wreg     unsigned char 
 12020 ;; Auto vars:     Size  Location     Type
 12021 ;;  addr            1    2[COMMON] unsigned char 
 12022 ;; Return value:  Size  Location     Type
 12023 ;;                  1    wreg      void 
 12024 ;; Registers used:
 12025 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12026 ;; Tracked objects:
 12027 ;;		On entry : 0/0
 12028 ;;		On exit  : 3F/0
 12029 ;;		Unchanged: 0/0
 12030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12031 ;;      Params:         0       0       0       0       0       0       0       0
 12032 ;;      Locals:         1       0       0       0       0       0       0       0
 12033 ;;      Temps:          0       0       0       0       0       0       0       0
 12034 ;;      Totals:         1       0       0       0       0       0       0       0
 12035 ;;Total ram usage:        1 bytes
 12036 ;; Hardware stack levels used: 1
 12037 ;; Hardware stack levels required when called: 5
 12038 ;; This function calls:
 12039 ;;		_EEPROM_Read
 12040 ;; This function is called by:
 12041 ;;		_DMDisplay
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045     0DD9                     _EEPROMBufferFill:	
 12046                           ;psect for function _EEPROMBufferFill
 12047                           
 12048                           
 12049                           ;incstack = 0
 12050                           ; Regs used in _EEPROMBufferFill: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12051                           ;EEPROMBufferFill@addr stored from wreg
 12052     0DD9  00F2               	movwf	EEPROMBufferFill@addr
 12053                           
 12054                           ;Subroutines.c: 34: void EEPROMBufferFill(uint8_t addr);Subroutines.c: 35: {;Subroutines
      +                          .c: 36:     for (Pos=8; Pos--;)
 12055     0DDA  3008               	movlw	8
 12056     0DDB  0140               	movlb	0	; select bank0
 12057     0DDC  00CB               	movwf	_Pos
 12058     0DDD                     l4419:
 12059     0DDD  3001               	movlw	1
 12060     0DDE  0140               	movlb	0	; select bank0
 12061     0DDF  02CB               	subwf	_Pos,f
 12062     0DE0  0A4B               	incf	_Pos,w
 12063     0DE1  1903               	btfsc	3,2
 12064     0DE2  0008               	return
 12065                           
 12066                           ;Subroutines.c: 37:     {;Subroutines.c: 38:         DisplayBuf[Pos] = EEPROM_Read(addr)
      +                          ;
 12067     0DE3  084B               	movf	_Pos,w
 12068     0DE4  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 12069     0DE5  0086               	movwf	6
 12070     0DE6  0187               	clrf	7
 12071     0DE7  0872               	movf	EEPROMBufferFill@addr,w
 12072     0DE8  318C  24D4  318D   	fcall	_EEPROM_Read
 12073     0DEB  0081               	movwf	1
 12074                           
 12075                           ;Subroutines.c: 39:         addr--;
 12076     0DEC  3001               	movlw	1
 12077     0DED  02F2               	subwf	EEPROMBufferFill@addr,f
 12078     0DEE  2DDD               	goto	l4419
 12079     0DEF                     __end_of_EEPROMBufferFill:
 12080                           
 12081                           	psect	text52
 12082     0CD4                     __ptext52:	
 12083 ;; *************** function _EEPROM_Read *****************
 12084 ;; Defined at:
 12085 ;;		line 351 in file "Subroutines.c"
 12086 ;; Parameters:    Size  Location     Type
 12087 ;;  addr            1    wreg     unsigned char 
 12088 ;; Auto vars:     Size  Location     Type
 12089 ;;  addr            1    1[COMMON] unsigned char 
 12090 ;; Return value:  Size  Location     Type
 12091 ;;                  1    wreg      unsigned char 
 12092 ;; Registers used:
 12093 ;;		wreg
 12094 ;; Tracked objects:
 12095 ;;		On entry : 3F/0
 12096 ;;		On exit  : 3F/10
 12097 ;;		Unchanged: 0/0
 12098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12099 ;;      Params:         0       0       0       0       0       0       0       0
 12100 ;;      Locals:         1       0       0       0       0       0       0       0
 12101 ;;      Temps:          0       0       0       0       0       0       0       0
 12102 ;;      Totals:         1       0       0       0       0       0       0       0
 12103 ;;Total ram usage:        1 bytes
 12104 ;; Hardware stack levels used: 1
 12105 ;; Hardware stack levels required when called: 4
 12106 ;; This function calls:
 12107 ;;		Nothing
 12108 ;; This function is called by:
 12109 ;;		_EEPROMBufferFill
 12110 ;; This function uses a non-reentrant model
 12111 ;;
 12112                           
 12113     0CD4                     _EEPROM_Read:	
 12114                           ;psect for function _EEPROM_Read
 12115                           
 12116                           
 12117                           ;incstack = 0
 12118                           ; Regs used in _EEPROM_Read: [wreg]
 12119                           ;EEPROM_Read@addr stored from wreg
 12120     0CD4  00F1               	movwf	EEPROM_Read@addr
 12121                           
 12122                           ;Subroutines.c: 351: uint8_t EEPROM_Read(uint8_t addr);Subroutines.c: 352: {;Subroutines
      +                          .c: 353:     NVMCON1bits.NVMREGS = 1;
 12123     0CD5  0150               	movlb	16	; select bank16
 12124     0CD6  171E               	bsf	30,6	;volsfr
 12125                           
 12126                           ;Subroutines.c: 354:     NVMADRL = (addr) & 0xFFu;
 12127     0CD7  0871               	movf	EEPROM_Read@addr,w
 12128     0CD8  009A               	movwf	26	;volatile
 12129                           
 12130                           ;Subroutines.c: 355:     NVMADRH = 0x70;
 12131     0CD9  3070               	movlw	112
 12132     0CDA  009B               	movwf	27	;volatile
 12133                           
 12134                           ;Subroutines.c: 356:     NVMCON1bits.RD = 1;
 12135     0CDB  141E               	bsf	30,0	;volsfr
 12136                           
 12137                           ;Subroutines.c: 357:     return NVMDATL;
 12138     0CDC  081C               	movf	28,w	;volatile
 12139     0CDD  0008               	return
 12140     0CDE                     __end_of_EEPROM_Read:
 12141                           
 12142                           	psect	text53
 12143     0D9F                     __ptext53:	
 12144 ;; *************** function _DisplayBufSave *****************
 12145 ;; Defined at:
 12146 ;;		line 18 in file "Subroutines.c"
 12147 ;; Parameters:    Size  Location     Type
 12148 ;;		None
 12149 ;; Auto vars:     Size  Location     Type
 12150 ;;		None
 12151 ;; Return value:  Size  Location     Type
 12152 ;;                  1    wreg      void 
 12153 ;; Registers used:
 12154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12155 ;; Tracked objects:
 12156 ;;		On entry : 3F/0
 12157 ;;		On exit  : 3F/0
 12158 ;;		Unchanged: 0/0
 12159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12160 ;;      Params:         0       0       0       0       0       0       0       0
 12161 ;;      Locals:         0       0       0       0       0       0       0       0
 12162 ;;      Temps:          0       0       0       0       0       0       0       0
 12163 ;;      Totals:         0       0       0       0       0       0       0       0
 12164 ;;Total ram usage:        0 bytes
 12165 ;; Hardware stack levels used: 1
 12166 ;; Hardware stack levels required when called: 4
 12167 ;; This function calls:
 12168 ;;		Nothing
 12169 ;; This function is called by:
 12170 ;;		_main
 12171 ;;		_DMDisplay
 12172 ;; This function uses a non-reentrant model
 12173 ;;
 12174                           
 12175     0D9F                     _DisplayBufSave:	
 12176                           ;psect for function _DisplayBufSave
 12177                           
 12178                           
 12179                           ;Subroutines.c: 20:     for (Pos=8; Pos--;)
 12180                           
 12181                           ;incstack = 0
 12182                           ; Regs used in _DisplayBufSave: [wreg-fsr1h+status,2+status,0]
 12183     0D9F  3008               	movlw	8
 12184     0DA0  00CB               	movwf	_Pos
 12185     0DA1                     l4261:
 12186     0DA1  3001               	movlw	1
 12187     0DA2  02CB               	subwf	_Pos,f
 12188     0DA3  0A4B               	incf	_Pos,w
 12189     0DA4  1903               	btfsc	3,2
 12190     0DA5  0008               	return
 12191                           
 12192                           ;Subroutines.c: 21:     {;Subroutines.c: 22:         DisplaySave[Pos] = DisplayBuf[Pos];
 12193     0DA6  084B               	movf	_Pos,w
 12194     0DA7  3E20               	addlw	(low (_DisplaySave| 0))& (0+255)
 12195     0DA8  0086               	movwf	6
 12196     0DA9  0187               	clrf	7
 12197     0DAA  084B               	movf	_Pos,w
 12198     0DAB  3E30               	addlw	(low (_DisplayBuf| 0))& (0+255)
 12199     0DAC  0084               	movwf	4
 12200     0DAD  0185               	clrf	5
 12201     0DAE  0800               	movf	0,w
 12202     0DAF  0081               	movwf	1
 12203     0DB0  2DA1               	goto	l4261
 12204     0DB1                     __end_of_DisplayBufSave:
 12205                           
 12206                           	psect	intentry
 12207     0004                     __pintentry:	
 12208 ;; *************** function _INTERRUPT_InterruptManager *****************
 12209 ;; Defined at:
 12210 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12211 ;; Parameters:    Size  Location     Type
 12212 ;;		None
 12213 ;; Auto vars:     Size  Location     Type
 12214 ;;		None
 12215 ;; Return value:  Size  Location     Type
 12216 ;;                  1    wreg      void 
 12217 ;; Registers used:
 12218 ;;		wreg, status,2, status,0, pclath, cstack
 12219 ;; Tracked objects:
 12220 ;;		On entry : 0/0
 12221 ;;		On exit  : 0/0
 12222 ;;		Unchanged: 0/0
 12223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12224 ;;      Params:         0       0       0       0       0       0       0       0
 12225 ;;      Locals:         0       0       0       0       0       0       0       0
 12226 ;;      Temps:          0       0       0       0       0       0       0       0
 12227 ;;      Totals:         0       0       0       0       0       0       0       0
 12228 ;;Total ram usage:        0 bytes
 12229 ;; Hardware stack levels used: 1
 12230 ;; Hardware stack levels required when called: 3
 12231 ;; This function calls:
 12232 ;;		_PIN_MANAGER_IOC
 12233 ;;		_TMR4_ISR
 12234 ;; This function is called by:
 12235 ;;		Interrupt level 1
 12236 ;; This function uses a non-reentrant model
 12237 ;;
 12238                           
 12239     0004                     _INTERRUPT_InterruptManager:
 12240                           
 12241                           ;incstack = 0
 12242     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12243                           
 12244                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 12245     0005  3180               	pagesel	$
 12246                           
 12247                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 12248     0006  014E               	movlb	14	; select bank14
 12249     0007  1A16               	btfsc	22,4	;volatile
 12250     0008  1E0C               	btfss	12,4	;volatile
 12251     0009  280E               	goto	i1l416
 12252                           
 12253                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 12254     000A  318D  2563  3180   	fcall	_PIN_MANAGER_IOC
 12255                           
 12256                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 12257     000D  2815               	goto	i1l422
 12258     000E                     i1l416:	
 12259                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 12260                           
 12261     000E  1B0B               	btfsc	11,6	;volatile
 12262                           
 12263                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE4bits.TMR4IE == 1 && PIR4bits.TMR4IF == 1)
 12264     000F  1D9A               	btfss	26,3	;volatile
 12265     0010  2815               	goto	i1l422
 12266     0011  1D90               	btfss	16,3	;volatile
 12267     0012  2815               	goto	i1l422
 12268                           
 12269                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR4_ISR();
 12270     0013  318C  2494         	fcall	_TMR4_ISR
 12271     0015                     i1l422:	
 12272                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
 12273                           
 12274                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 12275                           
 12276     0015  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12277     0016  0009               	retfie
 12278     0017                     __end_of_INTERRUPT_InterruptManager:
 12279                           
 12280                           	psect	text55
 12281     0C94                     __ptext55:	
 12282 ;; *************** function _TMR4_ISR *****************
 12283 ;; Defined at:
 12284 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 12285 ;; Parameters:    Size  Location     Type
 12286 ;;		None
 12287 ;; Auto vars:     Size  Location     Type
 12288 ;;		None
 12289 ;; Return value:  Size  Location     Type
 12290 ;;                  1    wreg      void 
 12291 ;; Registers used:
 12292 ;;		wreg, status,2, status,0, pclath, cstack
 12293 ;; Tracked objects:
 12294 ;;		On entry : 3F/E
 12295 ;;		On exit  : 0/0
 12296 ;;		Unchanged: 0/0
 12297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12298 ;;      Params:         0       0       0       0       0       0       0       0
 12299 ;;      Locals:         0       0       0       0       0       0       0       0
 12300 ;;      Temps:          0       0       0       0       0       0       0       0
 12301 ;;      Totals:         0       0       0       0       0       0       0       0
 12302 ;;Total ram usage:        0 bytes
 12303 ;; Hardware stack levels used: 1
 12304 ;; Hardware stack levels required when called: 2
 12305 ;; This function calls:
 12306 ;;		_TMR4_CallBack
 12307 ;; This function is called by:
 12308 ;;		_INTERRUPT_InterruptManager
 12309 ;; This function uses a non-reentrant model
 12310 ;;
 12311                           
 12312     0C94                     _TMR4_ISR:	
 12313                           ;psect for function _TMR4_ISR
 12314                           
 12315                           
 12316                           ;mcc_generated_files/tmr4.c: 169:     PIR4bits.TMR4IF = 0;
 12317                           
 12318                           ;incstack = 0
 12319                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 12320     0C94  1190               	bcf	16,3	;volatile
 12321                           
 12322                           ;mcc_generated_files/tmr4.c: 173:     TMR4_CallBack();
 12323     0C95  318C  24F2         	fcall	_TMR4_CallBack
 12324     0C97  0008               	return
 12325     0C98                     __end_of_TMR4_ISR:
 12326                           
 12327                           	psect	text56
 12328     0CF2                     __ptext56:	
 12329 ;; *************** function _TMR4_CallBack *****************
 12330 ;; Defined at:
 12331 ;;		line 176 in file "mcc_generated_files/tmr4.c"
 12332 ;; Parameters:    Size  Location     Type
 12333 ;;		None
 12334 ;; Auto vars:     Size  Location     Type
 12335 ;;		None
 12336 ;; Return value:  Size  Location     Type
 12337 ;;                  1    wreg      void 
 12338 ;; Registers used:
 12339 ;;		wreg, status,2, status,0, pclath, cstack
 12340 ;; Tracked objects:
 12341 ;;		On entry : 3F/E
 12342 ;;		On exit  : 0/0
 12343 ;;		Unchanged: 0/0
 12344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12345 ;;      Params:         0       0       0       0       0       0       0       0
 12346 ;;      Locals:         0       0       0       0       0       0       0       0
 12347 ;;      Temps:          0       0       0       0       0       0       0       0
 12348 ;;      Totals:         0       0       0       0       0       0       0       0
 12349 ;;Total ram usage:        0 bytes
 12350 ;; Hardware stack levels used: 1
 12351 ;; Hardware stack levels required when called: 1
 12352 ;; This function calls:
 12353 ;;		Absolute function
 12354 ;;		_TMR4_DefaultInterruptHandler
 12355 ;; This function is called by:
 12356 ;;		_TMR4_ISR
 12357 ;; This function uses a non-reentrant model
 12358 ;;
 12359                           
 12360     0CF2                     _TMR4_CallBack:	
 12361                           ;psect for function _TMR4_CallBack
 12362                           
 12363                           
 12364                           ;mcc_generated_files/tmr4.c: 180:     if(TMR4_InterruptHandler)
 12365                           
 12366                           ;incstack = 0
 12367                           ; Regs used in _TMR4_CallBack: [wreg+status,2+status,0+pclath+cstack]
 12368     0CF2  0140               	movlb	0	; select bank0
 12369     0CF3  083C               	movf	_TMR4_InterruptHandler,w
 12370     0CF4  043D               	iorwf	_TMR4_InterruptHandler+1,w
 12371     0CF5  1903               	btfsc	3,2
 12372     0CF6  0008               	return
 12373                           
 12374                           ;mcc_generated_files/tmr4.c: 181:     {;mcc_generated_files/tmr4.c: 182:         TMR4_In
      +                          terruptHandler();
 12375     0CF7  083D               	movf	_TMR4_InterruptHandler+1,w
 12376     0CF8  008A               	movwf	10
 12377     0CF9  083C               	movf	_TMR4_InterruptHandler,w
 12378     0CFA  000A               	callw
 12379     0CFB  318C               	pagesel	$
 12380     0CFC  0008               	return
 12381     0CFD                     __end_of_TMR4_CallBack:
 12382                           
 12383                           	psect	text57
 12384     0C98                     __ptext57:	
 12385 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 12386 ;; Defined at:
 12387 ;;		line 190 in file "mcc_generated_files/tmr4.c"
 12388 ;; Parameters:    Size  Location     Type
 12389 ;;		None
 12390 ;; Auto vars:     Size  Location     Type
 12391 ;;		None
 12392 ;; Return value:  Size  Location     Type
 12393 ;;                  1    wreg      void 
 12394 ;; Registers used:
 12395 ;;		wreg
 12396 ;; Tracked objects:
 12397 ;;		On entry : 3F/0
 12398 ;;		On exit  : 3F/0
 12399 ;;		Unchanged: 0/0
 12400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12401 ;;      Params:         0       0       0       0       0       0       0       0
 12402 ;;      Locals:         0       0       0       0       0       0       0       0
 12403 ;;      Temps:          0       0       0       0       0       0       0       0
 12404 ;;      Totals:         0       0       0       0       0       0       0       0
 12405 ;;Total ram usage:        0 bytes
 12406 ;; Hardware stack levels used: 1
 12407 ;; This function calls:
 12408 ;;		Nothing
 12409 ;; This function is called by:
 12410 ;;		_TMR4_Initialize
 12411 ;;		_TMR4_CallBack
 12412 ;; This function uses a non-reentrant model
 12413 ;;
 12414                           
 12415     0C98                     _TMR4_DefaultInterruptHandler:	
 12416                           ;psect for function _TMR4_DefaultInterruptHandler
 12417                           
 12418                           
 12419                           ;mcc_generated_files/tmr4.c: 194:     buttoncounter++;
 12420                           
 12421                           ;incstack = 0
 12422                           ; Regs used in _TMR4_DefaultInterruptHandler: [wreg]
 12423     0C98  3001               	movlw	1
 12424     0C99  07BE               	addwf	_buttoncounter,f
 12425     0C9A  3000               	movlw	0
 12426     0C9B  3DBF               	addwfc	_buttoncounter+1,f
 12427     0C9C  0008               	return
 12428     0C9D                     __end_of_TMR4_DefaultInterruptHandler:
 12429                           
 12430                           	psect	text58
 12431     0D63                     __ptext58:	
 12432 ;; *************** function _PIN_MANAGER_IOC *****************
 12433 ;; Defined at:
 12434 ;;		line 143 in file "mcc_generated_files/pin_manager.c"
 12435 ;; Parameters:    Size  Location     Type
 12436 ;;		None
 12437 ;; Auto vars:     Size  Location     Type
 12438 ;;		None
 12439 ;; Return value:  Size  Location     Type
 12440 ;;                  1    wreg      void 
 12441 ;; Registers used:
 12442 ;;		wreg, status,2, status,0, pclath, cstack
 12443 ;; Tracked objects:
 12444 ;;		On entry : 3F/E
 12445 ;;		On exit  : 3F/3E
 12446 ;;		Unchanged: 0/0
 12447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12448 ;;      Params:         0       0       0       0       0       0       0       0
 12449 ;;      Locals:         0       0       0       0       0       0       0       0
 12450 ;;      Temps:          0       0       0       0       0       0       0       0
 12451 ;;      Totals:         0       0       0       0       0       0       0       0
 12452 ;;Total ram usage:        0 bytes
 12453 ;; Hardware stack levels used: 1
 12454 ;; Hardware stack levels required when called: 1
 12455 ;; This function calls:
 12456 ;;		_SW1Interrupt
 12457 ;;		_SW2Interrupt
 12458 ;; This function is called by:
 12459 ;;		_INTERRUPT_InterruptManager
 12460 ;; This function uses a non-reentrant model
 12461 ;;
 12462                           
 12463     0D63                     _PIN_MANAGER_IOC:	
 12464                           ;psect for function _PIN_MANAGER_IOC
 12465                           
 12466                           
 12467                           ;mcc_generated_files/pin_manager.c: 146:     if(IOCCFbits.IOCCF0 == 1)
 12468                           
 12469                           ;incstack = 0
 12470                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 12471     0D63  017E               	movlb	62	; select bank62
 12472     0D64  1C55               	btfss	85,0	;volatile
 12473     0D65  2D6B               	goto	i1l3059
 12474                           
 12475                           ;mcc_generated_files/pin_manager.c: 147:     {;mcc_generated_files/pin_manager.c: 149:  
      +                                 SW1Interrupt();
 12476     0D66  318C  24FD  318D   	fcall	_SW1Interrupt
 12477                           
 12478                           ;mcc_generated_files/pin_manager.c: 150:         IOCCFbits.IOCCF0 = 0;
 12479     0D69  017E               	movlb	62	; select bank62
 12480     0D6A  1055               	bcf	85,0	;volatile
 12481     0D6B                     i1l3059:
 12482                           
 12483                           ;mcc_generated_files/pin_manager.c: 153:     if(IOCCFbits.IOCCF1 == 1)
 12484     0D6B  1CD5               	btfss	85,1	;volatile
 12485     0D6C  0008               	return
 12486                           
 12487                           ;mcc_generated_files/pin_manager.c: 154:     {;mcc_generated_files/pin_manager.c: 156:  
      +                                 SW2Interrupt();
 12488     0D6D  318D  2509         	fcall	_SW2Interrupt
 12489                           
 12490                           ;mcc_generated_files/pin_manager.c: 157:         IOCCFbits.IOCCF1 = 0;
 12491     0D6F  017E               	movlb	62	; select bank62
 12492     0D70  10D5               	bcf	85,1	;volatile
 12493     0D71  0008               	return
 12494     0D72                     __end_of_PIN_MANAGER_IOC:
 12495                           
 12496                           	psect	text59
 12497     0D09                     __ptext59:	
 12498 ;; *************** function _SW2Interrupt *****************
 12499 ;; Defined at:
 12500 ;;		line 240 in file "Subroutines.c"
 12501 ;; Parameters:    Size  Location     Type
 12502 ;;		None
 12503 ;; Auto vars:     Size  Location     Type
 12504 ;;		None
 12505 ;; Return value:  Size  Location     Type
 12506 ;;                  1    wreg      void 
 12507 ;; Registers used:
 12508 ;;		wreg
 12509 ;; Tracked objects:
 12510 ;;		On entry : 3F/3E
 12511 ;;		On exit  : 3F/0
 12512 ;;		Unchanged: 0/0
 12513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12514 ;;      Params:         0       0       0       0       0       0       0       0
 12515 ;;      Locals:         0       0       0       0       0       0       0       0
 12516 ;;      Temps:          1       0       0       0       0       0       0       0
 12517 ;;      Totals:         1       0       0       0       0       0       0       0
 12518 ;;Total ram usage:        1 bytes
 12519 ;; Hardware stack levels used: 1
 12520 ;; This function calls:
 12521 ;;		Nothing
 12522 ;; This function is called by:
 12523 ;;		_PIN_MANAGER_IOC
 12524 ;; This function uses a non-reentrant model
 12525 ;;
 12526                           
 12527     0D09                     _SW2Interrupt:	
 12528                           ;psect for function _SW2Interrupt
 12529                           
 12530                           
 12531                           ;Subroutines.c: 242:     _delay(10000);
 12532                           
 12533                           ;incstack = 0
 12534                           ; Regs used in _SW2Interrupt: [wreg]
 12535     0D09  300D               	movlw	13
 12536     0D0A  00F0               	movwf	??_SW2Interrupt
 12537     0D0B  30FC               	movlw	252
 12538     0D0C                     u481_27:
 12539     0D0C  0B89               	decfsz	9,f
 12540     0D0D  2D0C               	goto	u481_27
 12541     0D0E  0BF0               	decfsz	??_SW2Interrupt,f
 12542     0D0F  2D0C               	goto	u481_27
 12543     0D10                     i1l1384:	
 12544                           ;Subroutines.c: 243:     while (PORTCbits.RC1){}
 12545                           
 12546     0D10  0140               	movlb	0	; select bank0
 12547     0D11  188E               	btfsc	14,1	;volatile
 12548     0D12  2D10               	goto	i1l1384
 12549                           
 12550                           ;Subroutines.c: 244:     GoDate = 1;
 12551     0D13  167C               	bsf	_GoDate/(0+8),_GoDate& (0+7)
 12552     0D14  0008               	return
 12553     0D15                     __end_of_SW2Interrupt:
 12554                           
 12555                           	psect	text60
 12556     0CFD                     __ptext60:	
 12557 ;; *************** function _SW1Interrupt *****************
 12558 ;; Defined at:
 12559 ;;		line 233 in file "Subroutines.c"
 12560 ;; Parameters:    Size  Location     Type
 12561 ;;		None
 12562 ;; Auto vars:     Size  Location     Type
 12563 ;;		None
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  1    wreg      void 
 12566 ;; Registers used:
 12567 ;;		wreg
 12568 ;; Tracked objects:
 12569 ;;		On entry : 3F/3E
 12570 ;;		On exit  : 3F/0
 12571 ;;		Unchanged: 0/0
 12572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12573 ;;      Params:         0       0       0       0       0       0       0       0
 12574 ;;      Locals:         0       0       0       0       0       0       0       0
 12575 ;;      Temps:          1       0       0       0       0       0       0       0
 12576 ;;      Totals:         1       0       0       0       0       0       0       0
 12577 ;;Total ram usage:        1 bytes
 12578 ;; Hardware stack levels used: 1
 12579 ;; This function calls:
 12580 ;;		Nothing
 12581 ;; This function is called by:
 12582 ;;		_PIN_MANAGER_IOC
 12583 ;; This function uses a non-reentrant model
 12584 ;;
 12585                           
 12586     0CFD                     _SW1Interrupt:	
 12587                           ;psect for function _SW1Interrupt
 12588                           
 12589                           
 12590                           ;Subroutines.c: 235:     _delay(10000);
 12591                           
 12592                           ;incstack = 0
 12593                           ; Regs used in _SW1Interrupt: [wreg]
 12594     0CFD  300D               	movlw	13
 12595     0CFE  00F0               	movwf	??_SW1Interrupt
 12596     0CFF  30FC               	movlw	252
 12597     0D00                     u482_27:
 12598     0D00  0B89               	decfsz	9,f
 12599     0D01  2D00               	goto	u482_27
 12600     0D02  0BF0               	decfsz	??_SW1Interrupt,f
 12601     0D03  2D00               	goto	u482_27
 12602     0D04                     i1l1378:	
 12603                           ;Subroutines.c: 236:     while (PORTCbits.RC0){}
 12604                           
 12605     0D04  0140               	movlb	0	; select bank0
 12606     0D05  180E               	btfsc	14,0	;volatile
 12607     0D06  2D04               	goto	i1l1378
 12608                           
 12609                           ;Subroutines.c: 237:     GoDM = 1;
 12610     0D07  15FC               	bsf	_GoDM/(0+8),_GoDM& (0+7)
 12611     0D08  0008               	return
 12612     0D09                     __end_of_SW1Interrupt:
 12613     007E                     btemp	set	126	;btemp
 12614     007E                     int$flags	set	126
 12615     007E                     wtemp0	set	126
 12616                           
 12617                           	psect	idloc
 12618                           
 12619                           ;Config register IDLOC0 @ 0x8000
 12620                           ;	unspecified, using default values
 12621     8000                     	org	32768
 12622     8000  3FFF               	dw	16383
 12623                           
 12624                           ;Config register IDLOC1 @ 0x8001
 12625                           ;	unspecified, using default values
 12626     8001                     	org	32769
 12627     8001  3FFF               	dw	16383
 12628                           
 12629                           ;Config register IDLOC2 @ 0x8002
 12630                           ;	unspecified, using default values
 12631     8002                     	org	32770
 12632     8002  3FFF               	dw	16383
 12633                           
 12634                           ;Config register IDLOC3 @ 0x8003
 12635                           ;	unspecified, using default values
 12636     8003                     	org	32771
 12637     8003  3FFF               	dw	16383
 12638                           
 12639                           	psect	config
 12640                           
 12641                           ;Config register CONFIG1 @ 0x8007
 12642                           ;	External Oscillator mode selection bits
 12643                           ;	FEXTOSC = OFF, Oscillator not enabled
 12644                           ;	Power-up default value for COSC bits
 12645                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 12646                           ;	Clock Out Enable bit
 12647                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 12648                           ;	Clock Switch Enable bit
 12649                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12650                           ;	Fail-Safe Clock Monitor Enable bit
 12651                           ;	FCMEN = ON, FSCM timer enabled
 12652     8007                     	org	32775
 12653     8007  3FEC               	dw	16364
 12654                           
 12655                           ;Config register CONFIG2 @ 0x8008
 12656                           ;	Master Clear Enable bit
 12657                           ;	MCLRE = ON, MCLR pin is Master Clear function
 12658                           ;	Power-up Timer Enable bit
 12659                           ;	PWRTS = PWRT_64, PWRT set at 64 ms
 12660                           ;	Low-Power BOR enable bit
 12661                           ;	LPBOREN = OFF, ULPBOR disabled
 12662                           ;	Brown-out reset enable bits
 12663                           ;	BOREN = OFF, Brown-out reset disabled
 12664                           ;	Brown-out Reset Voltage Selection
 12665                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
 12666                           ;	Zero-cross detect disable
 12667                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 12668                           ;	Peripheral Pin Select one-way control
 12669                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 12670                           ;	Stack Overflow/Underflow Reset Enable bit
 12671                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 12672     8008                     	org	32776
 12673     8008  3F3D               	dw	16189
 12674                           
 12675                           ;Config register CONFIG3 @ 0x8009
 12676                           ;	WDT Period Select bits
 12677                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12678                           ;	WDT operating mode
 12679                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 12680                           ;	WDT Window Select bits
 12681                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12682                           ;	WDT input clock selector
 12683                           ;	WDTCCS = SC, Software Control
 12684     8009                     	org	32777
 12685     8009  3F9F               	dw	16287
 12686                           
 12687                           ;Config register CONFIG4 @ 0x800A
 12688                           ;	Boot Block Size Selection bits
 12689                           ;	BBSIZE = BB512, 512 words boot block size
 12690                           ;	Boot Block Enable bit
 12691                           ;	BBEN = OFF, Boot Block disabled
 12692                           ;	SAF Enable bit
 12693                           ;	SAFEN = OFF, SAF disabled
 12694                           ;	Application Block Write Protection bit
 12695                           ;	WRTAPP = OFF, Application Block not write protected
 12696                           ;	Boot Block Write Protection bit
 12697                           ;	WRTB = OFF, Boot Block not write protected
 12698                           ;	Configuration Register Write Protection bit
 12699                           ;	WRTC = OFF, Configuration Register not write protected
 12700                           ;	Data EEPROM write protection bit
 12701                           ;	WRTD = OFF, Data EEPROM NOT write protected
 12702                           ;	Storage Area Flash Write Protection bit
 12703                           ;	WRTSAF = OFF, SAF not write protected
 12704                           ;	Low Voltage Programming Enable bit
 12705                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 12706     800A                     	org	32778
 12707     800A  3FFF               	dw	16383
 12708                           
 12709                           ;Config register CONFIG5 @ 0x800B
 12710                           ;	UserNVM Program memory code protection bit
 12711                           ;	CP = OFF, UserNVM code protection disabled
 12712     800B                     	org	32779
 12713     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    32
    Data        81
    BSS         83
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     29      80
    BANK1            80      0      41
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$3304$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S1283$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    IOCCF1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    IOCCF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    __eetoi@addr	PTR eeprom void  size(1) Largest target is 2
		 -> TimeAdjStore(EEDATA[2]), 

    __eetoc@addr	PTR eeprom void  size(1) Largest target is 1
		 -> BlankEndStore(EEDATA[1]), BlankStartStore(EEDATA[1]), HourTypeStore(EEDATA[1]), BrightnessStore(EEDATA[1]), 
		 -> DateFormatStore(EEDATA[1]), TimeFastStore(EEDATA[1]), 

    __eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 2
		 -> BlankEndStore(EEDATA[1]), BlankStartStore(EEDATA[1]), HourTypeStore(EEDATA[1]), BrightnessStore(EEDATA[1]), 
		 -> DateFormatStore(EEDATA[1]), TimeAdjStore(EEDATA[2]), TimeFastStore(EEDATA[1]), 

    __eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(COMMON[2]), __eetoc@data(COMMON[1]), 

    __eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(COMMON[2]), __eetoc@data(COMMON[1]), 

    I2COpen@regptr	PTR unsigned char  size(1) Largest target is 1
		 -> I2CWrite@reg(COMMON[1]), I2CRead@reg(COMMON[1]), 

    OtherSetInc@eeaddr	PTR unsigned char  size(1) Largest target is 1
		 -> HourTypeStore(EEDATA[1]), BrightnessStore(EEDATA[1]), DateFormatStore(EEDATA[1]), 

    OtherSetInc@value	PTR unsigned char  size(1) Largest target is 1
		 -> HourType(BANK0[1]), Brightness(BANK0[1]), DateFormat(BANK0[1]), 

    S1283$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_write1ByteRegister@data.data(COMMON[2]), i2c_read1ByteRegister@d2.data(COMMON[2]), i2c_read2ByteRegister@result.data(COMMON[2]), i2c_write2ByteRegister@data.data(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue.data(COMMON[2]), I2C1_Read2ByteRegister@returnValue.data(COMMON[2]), I2C1_Write1ByteRegister@data.data(COMMON[2]), I2C1_Write2ByteRegister@data.data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), bufferBlock.data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_readDataBlock@d(COMMON[3]), d.data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S1283$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S1283$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F177(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F166(), wr1RegCompleteHandler@i2c1_master_example$F160(), rd2RegCompleteHandler@i2c1_master_example$F154(), rd1RegCompleteHandler@i2c1_master_example$F143(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F177(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F166(), wr1RegCompleteHandler@i2c1_master_example$F160(), rd2RegCompleteHandler@i2c1_master_example$F154(), rd1RegCompleteHandler@i2c1_master_example$F143(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10951[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR4_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F177@ptr.data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    d.data	PTR unsigned char  size(1) Largest target is 0

    S74$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    ___eetoi->___eecpymem
    ___eetoc->___eecpymem
    _TubesOn->___awdiv
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _OtherSetInc->___awdiv
    ___awdiv->___wmul
    _BCDSetInc->_I2CRead
    _I2CWrite->_I2COpen
    _I2CRead->_I2COpen
    _I2CFail->_Loader
    _TubeValuePicker->_Buttons
    _RandomNum->_TMR0_ReadTimer
    _RandomNum->___awmod
    _srand->_TMR0_ReadTimer
    _rand->___lmul
    _PWM6_LoadDutyValue->___awdiv
    _EEPROMBufferFill->_EEPROM_Read

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _PIN_MANAGER_IOC->_SW1Interrupt
    _PIN_MANAGER_IOC->_SW2Interrupt

Critical Paths under _main in BANK0

    _main->_DateDisplay
    _Startup->_I2CWrite
    _TubesOn->_PWM6_LoadDutyValue
    _DateDisplay->_Settings
    _Settings->_OtherSetInc
    _OtherSetInc->_Loader
    _BCDSetInc->_I2CWrite
    _I2CFail->_Loader
    _DMDisplay->_RandomWL
    _TubeValuePicker->_Loader
    _RandomWL->_RandomNum
    _FixedWL->_RandomNum
    _RandomNum->___awmod
    _rand->___lmul
    ___awmod->_rand
    _Pulse->_PWM6_LoadDutyValue
    _PWM6_LoadDutyValue->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   34887
                                             24 BANK0      5     5      0
                            _BCD2Bin
                          _DMDisplay
                        _DateDisplay
                     _DisplayBufSave
                            _FixedWL
                            _I2CRead
                           _I2CWrite
                             _Loader
                          _SplitLoad
                            _Startup
                           _TubesOff
                            _TubesOn
                            ___eetoi
 ---------------------------------------------------------------------------------
 (1) _TubesOff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Startup                                              1     1      0    8293
                                             14 BANK0      1     1      0
                         _EmptyTubes
                            _I2CRead
                           _I2CWrite
                             _Loader
                  _SYSTEM_Initialize
                    _TMR0_StartTimer
                            _TubesOn
                            ___eetoc
                            ___eetoi
 ---------------------------------------------------------------------------------
 (1) ___eetoi                                              5     3      2    1389
                                              6 COMMON     5     3      2
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (2) ___eetoc                                              2     2      0    1521
                                              6 COMMON     2     2      0
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (2) ___eecpymem                                           5     3      2    1255
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _TubesOn                                              2     2      0    3163
                                              8 BANK0      2     2      0
                 _PWM6_LoadDutyValue
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     121
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR4_Initialize                                      0     0      0      98
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR4_SetInterruptHandler                             2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Initialize                                      1     1      0      23
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DateDisplay                                          1     1      0   12896
                                             23 BANK0      1     1      0
                            _BCD2Bin
                            _I2CRead
                             _Loader
                           _Settings
                          _SplitLoad
 ---------------------------------------------------------------------------------
 (2) _Settings                                             2     2      0   12210
                                             21 BANK0      2     2      0
                          _BCDSetInc
                       _EEPROM_Write
                         _EmptyTubes
                             _Loader
                        _OtherSetInc
                    _TubeValuePicker
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _OtherSetInc                                          8     5      3    5365
                                             13 BANK0      8     5      3
                            _Buttons
                       _EEPROM_Write
                             _Loader
                           _NumSplit
                 _PWM6_LoadDutyValue
                          _SplitLoad
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1666
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _NumSplit                                             2     2      0      31
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         2     1      1     602
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (3) _BCDSetInc                                            8     6      2    4240
                                              5 COMMON     6     6      0
                                             14 BANK0      2     0      2
                            _BCD2Bin
                            _Buttons
                            _I2CRead
                           _I2CWrite
                             _Loader
                          _SplitLoad
 ---------------------------------------------------------------------------------
 (1) _SplitLoad                                            1     1      0      62
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2CWrite                                             2     1      1    1520
                                              3 COMMON     1     1      0
                                             13 BANK0      1     0      1
                           _I2CClose
                            _I2CFail
                         _I2CIrqWait
                            _I2COpen
 ---------------------------------------------------------------------------------
 (2) _I2CRead                                              2     2      0     443
                                              3 COMMON     2     2      0
                           _I2CClose
                            _I2CFail
                         _I2CIrqWait
                            _I2COpen
 ---------------------------------------------------------------------------------
 (3) _I2COpen                                              1     1      0     239
                                              2 COMMON     1     1      0
                            _I2CFail
                         _I2CIrqWait
 ---------------------------------------------------------------------------------
 (4) _I2CFail                                              0     0      0     136
                         _EmptyTubes
                             _Loader
 ---------------------------------------------------------------------------------
 (3) _I2CClose                                             0     0      0       0
                         _I2CIrqWait
 ---------------------------------------------------------------------------------
 (4) _I2CIrqWait                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BCD2Bin                                              2     2      0      45
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DMDisplay                                            2     2      0    4592
                                             18 BANK0      2     2      0
                            _Buttons
                     _DisplayBufSave
                   _EEPROMBufferFill
                         _EmptyTubes
                            _FixedWL
                             _Loader
                           _RandomWL
                    _TubeValuePicker
 ---------------------------------------------------------------------------------
 (3) _TubeValuePicker                                      2     2      0     201
                                              4 COMMON     2     2      0
                            _Buttons
                             _Loader
 ---------------------------------------------------------------------------------
 (4) _Buttons                                              3     3      0      34
                                              1 COMMON     3     3      0
                         _TMR4_Start
                          _TMR4_Stop
 ---------------------------------------------------------------------------------
 (5) _TMR4_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RandomWL                                             2     2      0    2085
                                             16 BANK0      2     2      0
                             _Loader
                              _Pulse
                          _RandomNum
 ---------------------------------------------------------------------------------
 (1) _FixedWL                                              1     1      0    1989
                                             16 BANK0      1     1      0
                             _Loader
                              _Pulse
                          _RandomNum
 ---------------------------------------------------------------------------------
 (2) _RandomNum                                            2     2      0    1161
                                             14 BANK0      2     2      0
                     _TMR0_ReadTimer
                            ___awmod
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (3) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     316
                                              4 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     316
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              9 COMMON     3     3      0
                                             10 BANK0      4     0      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                      11     9      2      69
                                              1 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (2) _Pulse                                                1     1      0     692
                                              8 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM6_LoadDutyValue                                   4     2      2     692
                                              4 BANK0      4     2      2
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Loader                                              14    14      0     136
                                              1 COMMON     1     1      0
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) _EmptyTubes                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMBufferFill                                     1     1      0      45
                                              2 COMMON     1     1      0
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DisplayBufSave                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0       0
                    _PIN_MANAGER_IOC
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR4_ISR                                             0     0      0       0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (10) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      0     0      0       0
                       _SW1Interrupt
                       _SW2Interrupt
 ---------------------------------------------------------------------------------
 (10) _SW2Interrupt                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _SW1Interrupt                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BCD2Bin
   _DMDisplay
     _Buttons
       _TMR4_Start
       _TMR4_Stop
     _DisplayBufSave
     _EEPROMBufferFill
       _EEPROM_Read
     _EmptyTubes
     _FixedWL
       _Loader
       _Pulse
         _PWM6_LoadDutyValue
           ___awdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       _RandomNum
         _TMR0_ReadTimer
         ___awmod
           _rand (ARG)
             ___lmul
         _rand
         _srand
           _TMR0_ReadTimer (ARG)
     _Loader
     _RandomWL
       _Loader
       _Pulse
       _RandomNum
     _TubeValuePicker
       _Buttons
       _Loader
   _DateDisplay
     _BCD2Bin
     _I2CRead
       _I2CClose
         _I2CIrqWait
       _I2CFail
         _EmptyTubes
         _Loader
       _I2CIrqWait
       _I2COpen
         _I2CFail
         _I2CIrqWait
     _Loader
     _Settings
       _BCDSetInc
         _BCD2Bin
         _Buttons
         _I2CRead
         _I2CWrite
           _I2CClose
           _I2CFail
           _I2CIrqWait
           _I2COpen
         _Loader
         _SplitLoad
       _EEPROM_Write
       _EmptyTubes
       _Loader
       _OtherSetInc
         _Buttons
         _EEPROM_Write
         _Loader
         _NumSplit
         _PWM6_LoadDutyValue
         _SplitLoad
         ___awdiv
         ___wmul
       _TubeValuePicker
       ___wmul
     _SplitLoad
   _DisplayBufSave
   _FixedWL
   _I2CRead
   _I2CWrite
   _Loader
   _SplitLoad
   _Startup
     _EmptyTubes
     _I2CRead
     _I2CWrite
     _Loader
     _SYSTEM_Initialize
       _I2C1_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _PWM6_Initialize
       _TMR0_Initialize
       _TMR2_Initialize
       _TMR4_Initialize
         _TMR4_SetInterruptHandler
     _TMR0_StartTimer
     _TubesOn
       _PWM6_LoadDutyValue
       ___awdiv
       ___wmul
     ___eetoc
       ___eecpymem
     ___eetoi
       ___eecpymem
   _TubesOff
   _TubesOn
   ___eetoi

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _SW1Interrupt
     _SW2Interrupt
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       8       0        3.1%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      29       7       51.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
ABS                  0      0      C6      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      C6      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 21 22:46:25 2022

                                    ___awdiv@sign 0054                               ___wmul@multiplicand 0073  
                                    BCD2Bin@input 0072                                   __end_of_BCD2Bin 0D90  
                                             _Pos 004B                                   __end_of_I2CFail 0D3A  
                                 _BrightnessStore 007B                                   __end_of_I2CRead 0F30  
                                 __end_of_I2COpen 0E85                                      ___awmod@sign 007B  
                                 _TMR2_Initialize 0D55                                               wreg 0009  
                            _I2C1_DO_RX_NACK_STOP 0000                                        _DateFormat 0052  
                                            l1042 0051                                              l1131 024F  
                                            l1126 01A3                                              l1070 014A  
                                            l1071 0145                                              l1081 0188  
                                            l1330 02E0                                              l1333 02F8  
                                            l1336 0327                                              l1088 05DD  
                                            l1441 0E9B                                              l1370 0FFD  
                                            l1354 057B                                              l1522 0EA5  
                                            l1339 032D                                              l1373 0FED  
                                            l1437 0E86                                              l1358 0592  
                                            l1359 0598                                              l1463 0C9D  
                                            l1493 0FC3                                              l1485 0FBA  
                                            l1469 0D39                                              l1486 0FA7  
                                            l1655 0E56                                              l5201 0F1F  
                                            l4217 0EAD                                              l6001 00E4  
                                            l6011 00FF                                              l4261 0DA1  
                                            l5117 0FD9                                              l6021 00E6  
                                            l5127 0FDE                                              l6023 0112  
                                            l4419 0DDD                                              l5235 0F9B  
                                            l5411 064C                                              l5403 0609  
                                            l5227 0DBF                                              l5323 0674  
                                            l6035 012F                                              l3565 0D75  
                                            l5173 0F42                                              l5405 0619  
                                            l5165 0E7E                                              l5341 069A  
                                            l5333 067C                                              l5317 0669  
                                            l6061 0160                                              l6053 0154  
                                            l5423 0639                                              l5335 0688  
                                            l5511 035B                                              l6071 017C  
                                            l6039 0136                                              l5361 0748  
                                            l5169 0F38                                              l5601 059A  
                                            l5249 0FB8                                              l5417 0623  
                                            l5345 06A3                                              l5603 05A4  
                                            l5427 065A                                              l5443 03E2  
                                            l5435 03D4                                              l5507 0353  
                                            l6067 016D                                              l5373 0755  
                                            l5365 074F                                              l5429 061B  
                                            l5349 06AB                                              l5533 0393  
                                            l5375 0761                                              l5383 0776  
                                            l5439 03DA                                              l5287 0D94  
                                            l5535 0398                                              l5711 0254  
                                            l5393 060B                                              l5473 0425  
                                            l5465 040F                                              l5297 0E50  
                                            l5529 037C                                              l3953 0707  
                                            l5387 077E                                              l5379 076D  
                                            l5731 02B5                                              l5539 03BD  
                                            l5715 0283                                              l3955 071D  
                                            l3963 0725                                              l5741 02CB  
                                            l5485 043B                                              l5477 042D  
                                            l5469 0415                                              l5813 04C5  
                                            l5575 053E                                              l5399 0607  
                                            l5911 0512                                              l5479 0430  
                                            l5577 0552                                              l5761 02F2  
                                            l5737 02BF                                              l5913 0526  
                                            l5489 0442                                              l5497 0342  
                                            l5595 0557                                              l5579 0553  
                                            l5923 0536                                              l5915 0529  
                                            l5675 023C                                              l5851 05EE  
                                            l5931 004A                                              l5925 0539  
                                            l5933 004B                                              l5695 024E  
                                            l5785 032F                                              l5777 0321  
                                            l5769 02FE                                              l5873 04E9  
                                            l5865 04DE                                              l5849 05F9  
                                            l5787 0339                                              l5699 0258  
                                            l5971 007E                                              l5947 0069  
                                            l5939 0056                                              l5869 04DB  
                                            l5973 00AE                                              l5965 0086  
                                            l5983 00C2                                              l5967 00A1  
                                            l5975 00B2                                              l5993 00D5  
                                            l5999 00BB                                              _LATA 0018  
                                            _LATB 0019                                              _LATC 001A  
                                            u3240 0FD2                                              u3305 0F43  
                                            _T2PR 028D                                              u3315 0F4A  
                                            u3335 0E15                                              _T4PR 0293  
                                            u1775 0D88                                              u3465 0F87  
                                            u3385 0FB4                                              u3545 067F  
                                            _PMD0 0796                                              u3645 0758  
                                            u3565 0689                                              u3485 0E57  
                                            _PMD1 0797                                              _PMD2 0798  
                                            u3575 0693                                              u3495 0E5C  
                                            _PMD3 0799                                              _PMD4 079A  
                                            u3665 0767                                              u3585 069B  
                                            _PMD5 079B                                              _PMD6 079C  
                                            u3675 076E                                              u4707 01A9  
                                            _PMD7 079D                                              u4717 03F0  
                                            u4807 06EC                                              u4727 0520  
                                            u4647 00A8                                              u4737 0FA0  
                                            u4657 00DE                                              u4747 0FBF  
                                            u4667 00F8                                              u4757 0333  
                                            u4677 018F                                              u4767 059E  
                                            u4687 05E6                                              u4777 06BB  
                                            u4697 05FD                                              u4787 06CB  
                                            u4797 06DB                                              _GoDM 03E3  
                                            _WPUA 1F39                                              _WPUB 1F44  
                                            _WPUC 1F4F                                              _Temp 0047  
                               ??_TubeValuePicker 0074                                  __end_of_I2CClose 0CC2  
                                            _main 0045                                        _BlankStart 0049  
                                            _rand 0F5F                                              _seed 004C  
                                 _TMR0_StartTimer 0002                                              fsr0h 0005  
                                            fsr1h 0007                                              indf0 0000  
                                            fsr0l 0004                                              indf1 0001  
                                            fsr1l 0006                                              btemp 007E  
                                  OtherSetInc@max 0067                                    OtherSetInc@min 0060  
                                __end_of_I2CWrite 0DC5                                              start 0017  
                                      Loader@regp 005F                          __end_of_EEPROMBufferFill 0DEF  
                      ??_TMR4_SetInterruptHandler 0073                                   __end_of_FixedWL 05A7  
                                 __end_of_Buttons 0FC8                              __end_of_EEPROM_Write 0EA2  
                         __end_of_TMR0_Initialize 0DD9                                       _DateDisplay 05A7  
                   __end_of_OSCILLATOR_Initialize 0CD4                                   __end_of_TubesOn 0F05  
                                 __end_of_Startup 04CF                                             ?_main 0070  
                                 __end_of___eetoc 0CF2                                   __end_of___eetoi 0D47  
                                           ?_rand 0057                                   __end_of___awdiv 06B0  
                                 __end_of___awmod 0783                         TMR0_ReadTimer@readValHigh 007B  
                                 ___awdiv@divisor 0077                                             _T2CON 028E  
                                           _T4CON 0294                                             _T2HLT 028F  
                                           _T4HLT 0295                                             _T2TMR 028C  
                                           _T2RST 0291                                             i1l422 0015  
                                           i1l416 000E                                             _T4TMR 0292  
                                           _T4RST 0297                                   ___awdiv@counter 0053  
                      __end_of_i2c1_fsmStateTable 081B                                             _OSCEN 0891  
                                           _TMR0H 059D                                             _TMR0L 059C  
                                           _TRISA 0012                                             _TRISB 0013  
                                           _TRISC 0014                                        _Brightness 0051  
                                 _TMR4_Initialize 0DEF                                   _PWM6_Initialize 0D15  
                                           _NegWL 03E6                               ___lmul@multiplicand 0075  
                               ??_I2C1_Initialize 0071                                        _DisplayBuf 0030  
                                           _Pulse 06B0                                  __end_of_TMR4_ISR 0C98  
                         __end_of_PIN_MANAGER_IOC 0D72                                       ?_TMR4_Start 0070  
                                           _srand 0CC2                                 RandomNum@rand_num 0062  
                                  __pbitbssCOMMON 03E0                                             pclath 000A  
                               __end_of_BCDSetInc 0451                                  DMDisplay@seedadr 0066  
                                           status 0003                                             wtemp0 007E  
                                EEPROM_Write@addr 0072                                  EEPROM_Write@data 0071  
                                      _EmptyTubes 0D72                                   __initialization 0019  
                                    __end_of_main 0195                                      __end_of_rand 0F92  
                                       ??_BCD2Bin 0071                                         ??_I2CFail 0072  
                         __end_of_TMR2_Initialize 0D63                                         ??_I2CRead 0073  
                     ?_INTERRUPT_InterruptManager 0070                                         ??_I2COpen 0072  
                                __end_of_RandomWL 033C                                            ??_main 006B  
                                          ??_rand 0059                                  __end_of_NumSplit 0D9F  
                               __end_of_DMDisplay 053C                                  __end_of_Settings 02A6  
                                          ?_Pulse 0070                                  __end_of_TubesOff 0CAE  
                                    ??_I2CIrqWait 0071                           __end_of_TMR0_StartTimer 0004  
                                ___awdiv@dividend 0079                                            ?_srand 0053  
                                          _ANSELA 1F38                                            _ANSELB 1F43  
                                          _ANSELC 1F4E                                            _T0CON0 059E  
                                          _T0CON1 059F                                            _RB4PPS 1F1C  
                                          _RB6PPS 1F1E                                            _RC4PPS 1F24  
                                          _ODCONA 1F3A                                            _ODCONB 1F45  
                                          _ODCONC 1F50                                            i1l1384 0D10  
                                          i1l1378 0D04                                            i1l3059 0D6B  
                                          _INLVLA 1F3C                                            _INLVLB 1F47  
                                          _INLVLC 1F52                                            u481_27 0D0C  
                                          u482_27 0D00                                            _OSCFRQ 0893  
                            EEPROMBufferFill@addr 0072                                         ??_FixedWL 0063  
                                          _GoDate 03E4                                            _Action 03E5  
                                    Loader@F11213 00BD                                         ??_Buttons 0071  
                                _I2C1_DO_TX_EMPTY 0000                                            _Loader 0FC8  
                                          _OldSet 0046                                      _CCPTMRS1bits 021F  
                                          _Toggle 03E2                                       _DisplaySave 0020  
                                       ??_TubesOn 005B                                            ___lmul 0F30  
                                   ??_OtherSetInc 0063                                         ??_Startup 0061  
                                          ___wmul 0E4E                                         ??___eetoc 0076  
                                       ??___eetoi 0078                                         ??___awdiv 007B  
                                       ??___awmod 0079                                 __end_of_TMR4_Stop 0C94  
                              __end_of_I2CIrqWait 0CA2                                  ?_TMR0_Initialize 0070  
                         __end_of_PWM6_Initialize 0D21                           __end_of_TMR4_Initialize 0E05  
                                ___awdiv@quotient 0055                                   ___awmod@divisor 005D  
                                 ___awmod@counter 007A                                      __pdataEEDATA 0000  
                                       ?_I2CClose 0070              __end_of_TMR4_DefaultInterruptHandler 0C9D  
                    _TMR4_DefaultInterruptHandler 0C98                                  OtherSetInc@value 0062  
                           _I2C1_DO_SEND_ADR_READ 0000                                    _PMD_Initialize 0CDE  
                                       ?_I2CWrite 0060                                            srand@s 0053  
                                   main@spincount 006D          TMR4_SetInterruptHandler@InterruptHandler 0071  
                                ?_PIN_MANAGER_IOC 0070                           _I2C1_DO_RX_NACK_RESTART 0000  
                                      ___eecpymem 0EA2                                 _SYSTEM_Initialize 0E1D  
                         __end_of__initialization 0041                                ?_SYSTEM_Initialize 0070  
                                     ?_EmptyTubes 0070                           _rdBlkRegCompleteHandler 0000  
                                  __pcstackCOMMON 0070                             __end_of_TMR4_CallBack 0CFD  
                                   __end_of_Pulse 06F9                                      __pidataBANK1 0D21  
                                    __pidataBANK2 0783                               ??_SYSTEM_Initialize 0073  
                                       ?_TMR4_ISR 0070                                     _HourTypeStore 007A  
                                   __end_of_srand 0CCB                                  ?_TMR2_Initialize 0070  
                             I2C1_Initialize@bits 0071                            __end_of_PMD_Initialize 0CE8  
                             __end_of_OtherSetInc 03CD                                        ??_I2CClose 0071  
                                 _TubeValuePicker 0603                                        ??_I2CWrite 0073  
                   ?_TMR4_DefaultInterruptHandler 0070                                           ??_Pulse 005B  
                               __end_of_RandomNum 0EE1                                  ?_TMR0_StartTimer 0070  
                       __end_of_SYSTEM_Initialize 0E35                                           ??_srand 007C  
                                    _EEPROM_Write 0E85                                        __pbssBANK0 0020  
                                      __pbssBANK1 00A0                                        I2CRead@reg 0073  
                                       ?_RandomWL 0070                             _TMR4_InterruptHandler 003C  
                           _rd1RegCompleteHandler 0000                                           ?_Loader 0070  
                               _I2C1_DO_SEND_STOP 0000                             _wr1RegCompleteHandler 0000  
                                       ?_NumSplit 0070                                     _buttoncounter 003E  
                                      __pmaintext 0045                                 ?_EEPROMBufferFill 0070  
                               __end_of_SplitLoad 0D55                                         ?_Settings 0070  
                                         ?___lmul 0071                                           ?___wmul 0071  
                                 _DateFormatStore 007F                                        ??_TMR4_ISR 0070  
                      __end_of_PWM6_LoadDutyValue 0E1D                                           _BCD2Bin 0D81  
                                      __pintentry 0004                                         ?_TubesOff 0070  
                              ??_EEPROMBufferFill 0072                                   _I2C1_Initialize 06F9  
                                         _I2CFail 0D2D                                      ?_DateDisplay 0070  
                                         _I2CRead 0F05                                           _I2COpen 0E69  
                                  ___lmul@product 0053                                  ?_TMR4_Initialize 0070  
                                ?_PWM6_Initialize 0070                                   ?_PMD_Initialize 0070  
                                         _OSCCON1 088D                                           _OSCCON3 088F  
                                         _NVMADRH 081B                                           _NVMADRL 081A  
                                         _NVMDATH 081D                                           _OSCTUNE 0892  
                                         _NVMDATL 081C                                           _NVMCON2 081F  
                                         _PWM6DCH 038D                                           _PWM6DCL 038C  
                                         _PWM6CON 038E                                           _SSP1ADD 018D  
                                         _SLRCONA 1F3B                                           _SLRCONB 1F46  
                                         _SLRCONC 1F51                                           _SSP1BUF 018C  
                                    ??_TMR4_Start 0071                                       ?___eecpymem 0071  
                                         _AnimBuf 0028                                     _BlankEndStore 0078  
                              _i2c1_fsmStateTable 07FB                                           _FixedWL 053C  
  _rd1RegCompleteHandler@i2c1_master_example$F143 0000    _wr1RegCompleteHandler@i2c1_master_example$F160 0000  
  _rd2RegCompleteHandler@i2c1_master_example$F154 0000    _wr2RegCompleteHandler@i2c1_master_example$F166 0000  
_rdBlkRegCompleteHandler@i2c1_master_example$F177 0000                                        ??_RandomWL 0063  
                                         _Buttons 0F92                                         _BCDSetInc 03CD  
                                         _TimeAdj 003A                                        ??_NumSplit 0071  
                                         _TimeSet 03E1                                        ??_Settings 0068  
                                         _TubesOn 0EE1                                           _Startup 0451  
                                         ___eetoc 0CE8                                           ___eetoi 0D3A  
                                         ___awdiv 065F                                           ___awmod 073E  
                                     _OtherSetInc 033C                                        ??_TubesOff 0071  
                         __end_of_TubeValuePicker 065F                                __end_of_TMR4_Start 0C91  
                                         __ptext1 0CA8                                           __ptext2 0451  
                                         __ptext3 0D3A                                           __ptext4 0CE8  
                                         __ptext5 0EA2                                           __ptext6 0EE1  
                                         __ptext7 0002                                           __ptext8 0E1D  
                                         __ptext9 0DEF                                     NumSplit@input 0072  
                           _OSCILLATOR_Initialize 0CCB                                  ___awmod@dividend 005F  
                                       _T4CONbits 0294                                      I2CWrite@data 0060  
                        ??_PIN_MANAGER_Initialize 0071                                         _IOCCFbits 1F55  
                       ?_TMR4_SetInterruptHandler 0071                                         _IOCCNbits 1F54  
                                       _IOCCPbits 1F53                                     ?_SW1Interrupt 0070  
                               OtherSetInc@eeaddr 0061                                           clrloop0 0CAF  
                                       _DMDisplay 04CF                              TubeValuePicker@start 0075  
                            end_of_initialization 0041                    ??_TMR4_DefaultInterruptHandler 0070  
                                    BCDSetInc@max 0079                                      BCDSetInc@min 0061  
                                   ?_SW2Interrupt 0070                                     ??_EEPROM_Read 0071  
                                         init_ram 0CB4                                           initloop 0CB5  
                          _I2C1_DO_SEND_ADR_WRITE 0000                           __end_of_I2C1_Initialize 073E  
                                      ?_BCDSetInc 0061                                       _I2C1_Status 00A0  
                           TMR0_ReadTimer@readVal 0078                                    _TMR0_ReadTimer 0E35  
                      _I2C1_DO_SEND_RESTART_WRITE 0000                                         _PORTBbits 000D  
                                       _PORTCbits 000E                                         _TMR4_Stop 0C91  
                                     _StartupDone 03E0                                    ??_SW1Interrupt 0070  
                                      ?_DMDisplay 0070                               I2CRead@receiveddata 0074  
                                  ??_SW2Interrupt 0070                                        main@oldsec 006C  
                                      main@newsec 006F                                      ??_EmptyTubes 0071  
                            _timer0ReloadVal16bit 0040                               __end_of_EEPROM_Read 0CDE  
                                  __end_of_Loader 1000                            __end_of_TMR0_ReadTimer 0E4E  
                                   _TimeFastStore 007C                                    __end_of___lmul 0F5F  
                                   __pidataEEDATA 0078                                    __end_of___wmul 0E69  
                                  _I2C1_DO_RX_ACK 0000                                  ?_TubeValuePicker 0070  
                          ?_OSCILLATOR_Initialize 0070                                        ?_TMR4_Stop 0070  
                             start_initialization 0019                                   BCDSetInc@i2creg 0062  
                              __end_of_EmptyTubes 0D81                                         _RandomNum 0EC1  
                                     ??_BCDSetInc 0075                                  ?_I2C1_Initialize 0070  
                                        ??_Loader 0071                                    _DisplayBufSave 0D9F  
                                ??_PMD_Initialize 0071                                   ?_TMR0_ReadTimer 0071  
                                        ??___lmul 0079                                          ??___wmul 0075  
                                        ?_BCD2Bin 0070                                         _RunLength 0120  
                                     __pdataBANK1 00BD                                       __pdataBANK2 0120  
                                        ?_I2CFail 0070                                          ?_I2CRead 0070  
                                        ?_I2COpen 0070                                         _SplitLoad 0D47  
                                     __pbssEEDATA 007D                              _I2C1_DO_SEND_RESTART 0000  
                                       ___latbits 0001                                     __pcstackBANK0 0053  
                              _PWM6_LoadDutyValue 0E05                                       ??_DMDisplay 0065  
                                    ??___eecpymem 0073                                        ?_RandomNum 0070  
                             ?_PWM6_LoadDutyValue 0057                                       _EEPROM_Read 0CD4  
                                        ?_FixedWL 0070                             _rd2RegCompleteHandler 0000  
                          __end_of_DisplayBufSave 0DB1                                          ?_Buttons 0070  
                          _PIN_MANAGER_Initialize 07C3                             _wr2RegCompleteHandler 0000  
                                   I2COpen@regptr 0072                                          ?_TubesOn 0070  
                                        ?_Startup 0070                              __end_of_SW1Interrupt 0D09  
                __end_of_TMR4_SetInterruptHandler 0CA8                                          ?___eetoc 0070  
                                  RandomWL@WLtype 0064                                          ?___eetoi 0076  
                                    ?_OtherSetInc 0060                                          ?___awdiv 0077  
                                        ?___awmod 005D                                  Buttons@presstime 0072  
                            __end_of_SW2Interrupt 0D15                              ??_PWM6_LoadDutyValue 0059  
                                      ?_SplitLoad 0070                      ??_INTERRUPT_InterruptManager 0071  
                                     ??_TMR4_Stop 0071                                __end_of___eecpymem 0EC1  
                                        _I2CClose 0CBA                                   _BlankStartStore 0079  
                                        _I2CWrite 0DB1                                          _BCDSplit 0038  
                                        _T2CLKCON 0290                                          _T4CLKCON 0296  
                                     I2CWrite@reg 0073                                 ??_TMR0_Initialize 0071  
                                  ___wmul@product 0075                                          _LATAbits 0018  
                                        _LATBbits 0019                                          _LATCbits 001A  
                                      _I2C1_DO_RX 0000                                        _I2C1_DO_TX 0000  
                                       clear_ram0 0CAE                                          _PIE0bits 0716  
                                        _PIE3bits 0719                                          _PIE4bits 071A  
                                 ?_DisplayBufSave 0070                                          _PIR0bits 070C  
                                        _PIR3bits 070F                                          _PIR4bits 0710  
                       _I2C1_DO_SEND_RESTART_READ 0000                                          _SSP1CON1 0190  
                                        _SSP1CON2 0191                                          _TMR4_ISR 0C94  
                                   _TMR4_CallBack 0CF2                                          _SSP1STAT 018F  
                               ??_PIN_MANAGER_IOC 0071                          TMR0_ReadTimer@readValLow 007A  
                               ___wmul@multiplier 0071                                      _TimeAdjStore 007D  
                                        _BlankEnd 0048                                         main@shift 006E  
                                  RandomNum@upper 0061                                     _I2C1_DO_RESET 0000  
                                      _I2CIrqWait 0C9D                                 ___lmul@multiplier 0071  
                                     ??_RandomNum 007C                                 ??_TMR2_Initialize 0071  
                                        _HourType 0050                                          _RandomWL 02A6  
                                  BCDSetInc@value 007A                                          _TimeFast 004A  
                                        _NumSplit 0D90                                    ?_TMR4_CallBack 0070  
                                        _Settings 0195                           ??_OSCILLATOR_Initialize 0071  
                                        _TubesOff 0CA8                                 ??_TMR0_StartTimer 0071  
                                     ??_SplitLoad 0071                          _TMR4_SetInterruptHandler 0CA2  
                         _IOCCF0_InterruptHandler 0044                                        _T0CON0bits 059E  
                                _EEPROMBufferFill 0DD9                                          __ptext10 0CA2  
                                        __ptext11 0D55                                          __ptext20 033C  
                                        __ptext12 0DC5                                          __ptext21 0E4E  
                                        __ptext13 0D15                                          __ptext30 0D2D  
                                        __ptext22 065F                                          __ptext14 0CDE  
                                        __ptext31 0CBA                                          __ptext23 0D90  
                                        __ptext15 07C3                                          __ptext40 053C  
                                        __ptext32 0C9D                                          __ptext24 0E85  
                                        __ptext16 0CCB                                          __ptext41 0EC1  
                                        __ptext33 0D81                                          __ptext25 03CD  
                                        __ptext17 06F9                                          __ptext50 0D72  
                                        __ptext42 0CC2                                          __ptext34 04CF  
                                        __ptext26 0D47                                          __ptext18 05A7  
                                        __ptext51 0DD9                                          __ptext43 0F5F  
                                        __ptext35 0603                                          __ptext27 0DB1  
                                        __ptext19 0195                                          __ptext60 0CFD  
                                        __ptext52 0CD4                                          __ptext44 0F30  
                                        __ptext36 0F92                                          __ptext28 0F05  
                                        __ptext53 0D9F                                          __ptext45 073E  
                                        __ptext37 0C91                                          __ptext29 0E69  
                                        __ptext46 0E35                                          __ptext38 0C8E  
                                        __ptext55 0C94                                          __ptext47 06B0  
                                        __ptext39 02A6                                          __ptext56 0CF2  
                                        __ptext48 0E05                                          __ptext57 0C98  
                                        __ptext49 0FC8                                          __ptext58 0D63  
                                        __ptext59 0D09                                      _SSP1CON1bits 0190  
                                    _SSP1CON2bits 0191                                     ?_EEPROM_Write 0071  
                        _I2C1_CallbackReturnReset 0000                                 ??_TMR4_Initialize 0073  
                               ??_PWM6_Initialize 0071                                  ??_TMR0_ReadTimer 0073  
                                        int$flags 007E                                     ??_DateDisplay 006A  
              __end_of_INTERRUPT_InterruptManager 0017                        _INTERRUPT_InterruptManager 0004  
                                    _I2C1_DO_IDLE 0000                                      _I2C1_DO_RCEN 0000  
                                 ___eecpymem@from 0071                                   ___eecpymem@size 0072  
                                      _INTCONbits 000B                                       _NVMCON1bits 081E  
                                     ?_I2CIrqWait 0070                                    ??_EEPROM_Write 0072  
                                     _PWM6CONbits 038E                                      _SW1Interrupt 0CFD  
                                        intlevel1 0000                                      _SW2Interrupt 0D09  
                                    ?_EEPROM_Read 0070                           ?_PIN_MANAGER_Initialize 0070  
                                Loader@shftregpln 0053                           _I2C1_CallbackReturnStop 0000  
                                 ??_TMR4_CallBack 0070                              _I2C1_DO_ADDRESS_NACK 0000  
                                   __pstringtext1 07FB                                        _SSP1DATPPS 1EC6  
                                      _SSP1CLKPPS 1EC5                                   _TMR0_Initialize 0DC5  
                             __end_of_DateDisplay 0603                       PWM6_LoadDutyValue@dutyValue 0057  
                                   ___eecpymem@cp 0074                                     ___eecpymem@to 0075  
                                      _TMR4_Start 0C8E                                  ??_DisplayBufSave 0071  
                  __end_of_PIN_MANAGER_Initialize 07FB                                        _STATUSbits 0003  
                                 _PIN_MANAGER_IOC 0D63                                   EEPROM_Read@addr 0071  
                                  SplitLoad@first 0071                           _IOCCF1_InterruptHandler 0042  
                                    ___eetoc@addr 0077                                      ___eetoc@data 0076  
                                    ___eetoi@addr 0078                                      ___eetoi@data 0079  
